// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto2_messages.proto

package org.apache.spark.sql.protobuf.protos;

public final class Proto2Messages {
  private Proto2Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FoobarWithRequiredFieldBarOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string foo = 1;</code>
     * @return Whether the foo field is set.
     */
    boolean hasFoo();
    /**
     * <code>optional string foo = 1;</code>
     * @return The foo.
     */
    java.lang.String getFoo();
    /**
     * <code>optional string foo = 1;</code>
     * @return The bytes for foo.
     */
    com.google.protobuf.ByteString
        getFooBytes();

    /**
     * <code>required int32 bar = 2;</code>
     * @return Whether the bar field is set.
     */
    boolean hasBar();
    /**
     * <code>required int32 bar = 2;</code>
     * @return The bar.
     */
    int getBar();
  }
  /**
   * <pre>
   * Used to test missing required field bar in top level schema.
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar}
   */
  public static final class FoobarWithRequiredFieldBar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar)
      FoobarWithRequiredFieldBarOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FoobarWithRequiredFieldBar.newBuilder() to construct.
    private FoobarWithRequiredFieldBar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FoobarWithRequiredFieldBar() {
      foo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FoobarWithRequiredFieldBar();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder.class);
    }

    private int bitField0_;
    public static final int FOO_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object foo_ = "";
    /**
     * <code>optional string foo = 1;</code>
     * @return Whether the foo field is set.
     */
    @java.lang.Override
    public boolean hasFoo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string foo = 1;</code>
     * @return The foo.
     */
    @java.lang.Override
    public java.lang.String getFoo() {
      java.lang.Object ref = foo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          foo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string foo = 1;</code>
     * @return The bytes for foo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFooBytes() {
      java.lang.Object ref = foo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        foo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BAR_FIELD_NUMBER = 2;
    private int bar_ = 0;
    /**
     * <code>required int32 bar = 2;</code>
     * @return Whether the bar field is set.
     */
    @java.lang.Override
    public boolean hasBar() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 bar = 2;</code>
     * @return The bar.
     */
    @java.lang.Override
    public int getBar() {
      return bar_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, foo_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, bar_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, foo_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar other = (org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar) obj;

      if (hasFoo() != other.hasFoo()) return false;
      if (hasFoo()) {
        if (!getFoo()
            .equals(other.getFoo())) return false;
      }
      if (hasBar() != other.hasBar()) return false;
      if (hasBar()) {
        if (getBar()
            != other.getBar()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFoo()) {
        hash = (37 * hash) + FOO_FIELD_NUMBER;
        hash = (53 * hash) + getFoo().hashCode();
      }
      if (hasBar()) {
        hash = (37 * hash) + BAR_FIELD_NUMBER;
        hash = (53 * hash) + getBar();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to test missing required field bar in top level schema.
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar)
        org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        foo_ = "";
        bar_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar build() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar buildPartial() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar result = new org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.foo_ = foo_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bar_ = bar_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar other) {
        if (other == org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance()) return this;
        if (other.hasFoo()) {
          foo_ = other.foo_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasBar()) {
          setBar(other.getBar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasBar()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                foo_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                bar_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object foo_ = "";
      /**
       * <code>optional string foo = 1;</code>
       * @return Whether the foo field is set.
       */
      public boolean hasFoo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string foo = 1;</code>
       * @return The foo.
       */
      public java.lang.String getFoo() {
        java.lang.Object ref = foo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            foo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string foo = 1;</code>
       * @return The bytes for foo.
       */
      public com.google.protobuf.ByteString
          getFooBytes() {
        java.lang.Object ref = foo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          foo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string foo = 1;</code>
       * @param value The foo to set.
       * @return This builder for chaining.
       */
      public Builder setFoo(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        foo_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string foo = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFoo() {
        foo_ = getDefaultInstance().getFoo();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string foo = 1;</code>
       * @param value The bytes for foo to set.
       * @return This builder for chaining.
       */
      public Builder setFooBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        foo_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int bar_ ;
      /**
       * <code>required int32 bar = 2;</code>
       * @return Whether the bar field is set.
       */
      @java.lang.Override
      public boolean hasBar() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 bar = 2;</code>
       * @return The bar.
       */
      @java.lang.Override
      public int getBar() {
        return bar_;
      }
      /**
       * <code>required int32 bar = 2;</code>
       * @param value The bar to set.
       * @return This builder for chaining.
       */
      public Builder setBar(int value) {

        bar_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bar = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBar() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bar_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar)
    private static final org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar();
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FoobarWithRequiredFieldBar>
        PARSER = new com.google.protobuf.AbstractParser<FoobarWithRequiredFieldBar>() {
      @java.lang.Override
      public FoobarWithRequiredFieldBar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FoobarWithRequiredFieldBar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FoobarWithRequiredFieldBar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NestedFoobarWithRequiredFieldBarOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     * @return Whether the nestedFoobar field is set.
     */
    boolean hasNestedFoobar();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     * @return The nestedFoobar.
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getNestedFoobar();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getNestedFoobarOrBuilder();
  }
  /**
   * <pre>
   * Used to test missing required field bar in nested struct.
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar}
   */
  public static final class NestedFoobarWithRequiredFieldBar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar)
      NestedFoobarWithRequiredFieldBarOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NestedFoobarWithRequiredFieldBar.newBuilder() to construct.
    private NestedFoobarWithRequiredFieldBar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NestedFoobarWithRequiredFieldBar() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NestedFoobarWithRequiredFieldBar();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.Builder.class);
    }

    private int bitField0_;
    public static final int NESTED_FOOBAR_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar nestedFoobar_;
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     * @return Whether the nestedFoobar field is set.
     */
    @java.lang.Override
    public boolean hasNestedFoobar() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     * @return The nestedFoobar.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getNestedFoobar() {
      return nestedFoobar_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : nestedFoobar_;
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getNestedFoobarOrBuilder() {
      return nestedFoobar_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : nestedFoobar_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasNestedFoobar()) {
        if (!getNestedFoobar().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getNestedFoobar());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNestedFoobar());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar other = (org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar) obj;

      if (hasNestedFoobar() != other.hasNestedFoobar()) return false;
      if (hasNestedFoobar()) {
        if (!getNestedFoobar()
            .equals(other.getNestedFoobar())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNestedFoobar()) {
        hash = (37 * hash) + NESTED_FOOBAR_FIELD_NUMBER;
        hash = (53 * hash) + getNestedFoobar().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to test missing required field bar in nested struct.
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar)
        org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNestedFoobarFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        nestedFoobar_ = null;
        if (nestedFoobarBuilder_ != null) {
          nestedFoobarBuilder_.dispose();
          nestedFoobarBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar build() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar buildPartial() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar result = new org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.nestedFoobar_ = nestedFoobarBuilder_ == null
              ? nestedFoobar_
              : nestedFoobarBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar other) {
        if (other == org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar.getDefaultInstance()) return this;
        if (other.hasNestedFoobar()) {
          mergeNestedFoobar(other.getNestedFoobar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasNestedFoobar()) {
          if (!getNestedFoobar().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getNestedFoobarFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar nestedFoobar_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> nestedFoobarBuilder_;
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       * @return Whether the nestedFoobar field is set.
       */
      public boolean hasNestedFoobar() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       * @return The nestedFoobar.
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getNestedFoobar() {
        if (nestedFoobarBuilder_ == null) {
          return nestedFoobar_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : nestedFoobar_;
        } else {
          return nestedFoobarBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public Builder setNestedFoobar(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (nestedFoobarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nestedFoobar_ = value;
        } else {
          nestedFoobarBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public Builder setNestedFoobar(
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder builderForValue) {
        if (nestedFoobarBuilder_ == null) {
          nestedFoobar_ = builderForValue.build();
        } else {
          nestedFoobarBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public Builder mergeNestedFoobar(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (nestedFoobarBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            nestedFoobar_ != null &&
            nestedFoobar_ != org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance()) {
            getNestedFoobarBuilder().mergeFrom(value);
          } else {
            nestedFoobar_ = value;
          }
        } else {
          nestedFoobarBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public Builder clearNestedFoobar() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nestedFoobar_ = null;
        if (nestedFoobarBuilder_ != null) {
          nestedFoobarBuilder_.dispose();
          nestedFoobarBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder getNestedFoobarBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNestedFoobarFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getNestedFoobarOrBuilder() {
        if (nestedFoobarBuilder_ != null) {
          return nestedFoobarBuilder_.getMessageOrBuilder();
        } else {
          return nestedFoobar_ == null ?
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : nestedFoobar_;
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar nested_foobar = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
          getNestedFoobarFieldBuilder() {
        if (nestedFoobarBuilder_ == null) {
          nestedFoobarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder>(
                  getNestedFoobar(),
                  getParentForChildren(),
                  isClean());
          nestedFoobar_ = null;
        }
        return nestedFoobarBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.NestedFoobarWithRequiredFieldBar)
    private static final org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar();
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NestedFoobarWithRequiredFieldBar>
        PARSER = new com.google.protobuf.AbstractParser<NestedFoobarWithRequiredFieldBar>() {
      @java.lang.Override
      public NestedFoobarWithRequiredFieldBar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NestedFoobarWithRequiredFieldBar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NestedFoobarWithRequiredFieldBar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.NestedFoobarWithRequiredFieldBar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Proto2AllTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Proto2AllTypes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 int = 1;</code>
     * @return Whether the int field is set.
     */
    boolean hasInt();
    /**
     * <code>optional int64 int = 1;</code>
     * @return The int.
     */
    long getInt();

    /**
     * <code>optional string text = 2;</code>
     * @return Whether the text field is set.
     */
    boolean hasText();
    /**
     * <code>optional string text = 2;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 2;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
     * @return Whether the enumVal field is set.
     */
    boolean hasEnumVal();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enumVal.
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum getEnumVal();

    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     * @return Whether the message field is set.
     */
    boolean hasMessage();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     * @return The message.
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getMessage();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getMessageOrBuilder();

    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @return A list containing the repeatedNum.
     */
    java.util.List<java.lang.Long> getRepeatedNumList();
    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @return The count of repeatedNum.
     */
    int getRepeatedNumCount();
    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @param index The index of the element to return.
     * @return The repeatedNum at the given index.
     */
    long getRepeatedNum(int index);

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> 
        getRepeatedMessageList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getRepeatedMessage(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    int getRepeatedMessageCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
        getRepeatedMessageOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getRepeatedMessageOrBuilder(
        int index);

    /**
     * <code>int32 option_a = 11;</code>
     * @return Whether the optionA field is set.
     */
    boolean hasOptionA();
    /**
     * <code>int32 option_a = 11;</code>
     * @return The optionA.
     */
    int getOptionA();

    /**
     * <code>string option_b = 12;</code>
     * @return Whether the optionB field is set.
     */
    boolean hasOptionB();
    /**
     * <code>string option_b = 12;</code>
     * @return The optionB.
     */
    java.lang.String getOptionB();
    /**
     * <code>string option_b = 12;</code>
     * @return The bytes for optionB.
     */
    com.google.protobuf.ByteString
        getOptionBBytes();

    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    int getMapCount();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    boolean containsMap(
        java.lang.String key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMap();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapMap();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    java.lang.String getMapOrThrow(
        java.lang.String key);

    org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * Contains a representative sample of all types, using the groupings defined
   * here: https://protobuf.dev/programming-guides/field_presence/#presence-in-proto3-apis
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Proto2AllTypes}
   */
  public static final class Proto2AllTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Proto2AllTypes)
      Proto2AllTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Proto2AllTypes.newBuilder() to construct.
    private Proto2AllTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Proto2AllTypes() {
      text_ = "";
      enumVal_ = 0;
      repeatedNum_ = emptyLongList();
      repeatedMessage_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Proto2AllTypes();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NOTHING = 0;</code>
       */
      NOTHING(0),
      /**
       * <code>FIRST = 1;</code>
       */
      FIRST(1),
      /**
       * <code>SECOND = 2;</code>
       */
      SECOND(2),
      ;

      /**
       * <code>NOTHING = 0;</code>
       */
      public static final int NOTHING_VALUE = 0;
      /**
       * <code>FIRST = 1;</code>
       */
      public static final int FIRST_VALUE = 1;
      /**
       * <code>SECOND = 2;</code>
       */
      public static final int SECOND_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return NOTHING;
          case 1: return FIRST;
          case 2: return SECOND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final NestedEnum[] VALUES = values();

      public static NestedEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum)
    }

    private int bitField0_;
    private int payloadCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      OPTION_A(11),
      OPTION_B(12),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 11: return OPTION_A;
          case 12: return OPTION_B;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int INT_FIELD_NUMBER = 1;
    private long int_ = 0L;
    /**
     * <code>optional int64 int = 1;</code>
     * @return Whether the int field is set.
     */
    @java.lang.Override
    public boolean hasInt() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 int = 1;</code>
     * @return The int.
     */
    @java.lang.Override
    public long getInt() {
      return int_;
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object text_ = "";
    /**
     * <code>optional string text = 2;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string text = 2;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 2;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENUM_VAL_FIELD_NUMBER = 3;
    private int enumVal_ = 0;
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
     * @return Whether the enumVal field is set.
     */
    @java.lang.Override public boolean hasEnumVal() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enumVal.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum getEnumVal() {
      org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum.forNumber(enumVal_);
      return result == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum.NOTHING : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar message_;
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     * @return The message.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getMessage() {
      return message_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : message_;
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getMessageOrBuilder() {
      return message_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : message_;
    }

    public static final int REPEATED_NUM_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList repeatedNum_;
    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @return A list containing the repeatedNum.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRepeatedNumList() {
      return repeatedNum_;
    }
    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @return The count of repeatedNum.
     */
    public int getRepeatedNumCount() {
      return repeatedNum_.size();
    }
    /**
     * <code>repeated int64 repeated_num = 5;</code>
     * @param index The index of the element to return.
     * @return The repeatedNum at the given index.
     */
    public long getRepeatedNum(int index) {
      return repeatedNum_.getLong(index);
    }

    public static final int REPEATED_MESSAGE_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> repeatedMessage_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> getRepeatedMessageList() {
      return repeatedMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
        getRepeatedMessageOrBuilderList() {
      return repeatedMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    @java.lang.Override
    public int getRepeatedMessageCount() {
      return repeatedMessage_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getRepeatedMessage(int index) {
      return repeatedMessage_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getRepeatedMessageOrBuilder(
        int index) {
      return repeatedMessage_.get(index);
    }

    public static final int OPTION_A_FIELD_NUMBER = 11;
    /**
     * <code>int32 option_a = 11;</code>
     * @return Whether the optionA field is set.
     */
    @java.lang.Override
    public boolean hasOptionA() {
      return payloadCase_ == 11;
    }
    /**
     * <code>int32 option_a = 11;</code>
     * @return The optionA.
     */
    @java.lang.Override
    public int getOptionA() {
      if (payloadCase_ == 11) {
        return (java.lang.Integer) payload_;
      }
      return 0;
    }

    public static final int OPTION_B_FIELD_NUMBER = 12;
    /**
     * <code>string option_b = 12;</code>
     * @return Whether the optionB field is set.
     */
    public boolean hasOptionB() {
      return payloadCase_ == 12;
    }
    /**
     * <code>string option_b = 12;</code>
     * @return The optionB.
     */
    public java.lang.String getOptionB() {
      java.lang.Object ref = "";
      if (payloadCase_ == 12) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8() && (payloadCase_ == 12)) {
          payload_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string option_b = 12;</code>
     * @return The bytes for optionB.
     */
    public com.google.protobuf.ByteString
        getOptionBBytes() {
      java.lang.Object ref = "";
      if (payloadCase_ == 12) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (payloadCase_ == 12) {
          payload_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_FIELD_NUMBER = 13;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> map_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMap() {
      if (map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapDefaultEntryHolder.defaultEntry);
      }
      return map_;
    }
    public int getMapCount() {
      return internalGetMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public boolean containsMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMap() {
      return getMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
      return internalGetMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public java.lang.String getMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRepeatedMessageCount(); i++) {
        if (!getRepeatedMessage(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, int_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, enumVal_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getMessage());
      }
      for (int i = 0; i < repeatedNum_.size(); i++) {
        output.writeInt64(5, repeatedNum_.getLong(i));
      }
      for (int i = 0; i < repeatedMessage_.size(); i++) {
        output.writeMessage(6, repeatedMessage_.get(i));
      }
      if (payloadCase_ == 11) {
        output.writeInt32(
            11, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 12) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, payload_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMap(),
          MapDefaultEntryHolder.defaultEntry,
          13);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, int_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, enumVal_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMessage());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(repeatedNum_.getLong(i));
        }
        size += dataSize;
        size += 1 * getRepeatedNumList().size();
      }
      for (int i = 0; i < repeatedMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, repeatedMessage_.get(i));
      }
      if (payloadCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              11, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 12) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, payload_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        map__ = MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, map__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes other = (org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes) obj;

      if (hasInt() != other.hasInt()) return false;
      if (hasInt()) {
        if (getInt()
            != other.getInt()) return false;
      }
      if (hasText() != other.hasText()) return false;
      if (hasText()) {
        if (!getText()
            .equals(other.getText())) return false;
      }
      if (hasEnumVal() != other.hasEnumVal()) return false;
      if (hasEnumVal()) {
        if (enumVal_ != other.enumVal_) return false;
      }
      if (hasMessage() != other.hasMessage()) return false;
      if (hasMessage()) {
        if (!getMessage()
            .equals(other.getMessage())) return false;
      }
      if (!getRepeatedNumList()
          .equals(other.getRepeatedNumList())) return false;
      if (!getRepeatedMessageList()
          .equals(other.getRepeatedMessageList())) return false;
      if (!internalGetMap().equals(
          other.internalGetMap())) return false;
      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 11:
          if (getOptionA()
              != other.getOptionA()) return false;
          break;
        case 12:
          if (!getOptionB()
              .equals(other.getOptionB())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInt()) {
        hash = (37 * hash) + INT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInt());
      }
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      if (hasEnumVal()) {
        hash = (37 * hash) + ENUM_VAL_FIELD_NUMBER;
        hash = (53 * hash) + enumVal_;
      }
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      if (getRepeatedNumCount() > 0) {
        hash = (37 * hash) + REPEATED_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedNumList().hashCode();
      }
      if (getRepeatedMessageCount() > 0) {
        hash = (37 * hash) + REPEATED_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedMessageList().hashCode();
      }
      if (!internalGetMap().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap().hashCode();
      }
      switch (payloadCase_) {
        case 11:
          hash = (37 * hash) + OPTION_A_FIELD_NUMBER;
          hash = (53 * hash) + getOptionA();
          break;
        case 12:
          hash = (37 * hash) + OPTION_B_FIELD_NUMBER;
          hash = (53 * hash) + getOptionB().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains a representative sample of all types, using the groupings defined
     * here: https://protobuf.dev/programming-guides/field_presence/#presence-in-proto3-apis
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Proto2AllTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Proto2AllTypes)
        org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.class, org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRepeatedMessageFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        int_ = 0L;
        text_ = "";
        enumVal_ = 0;
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        repeatedNum_ = emptyLongList();
        if (repeatedMessageBuilder_ == null) {
          repeatedMessage_ = java.util.Collections.emptyList();
        } else {
          repeatedMessage_ = null;
          repeatedMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableMap().clear();
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes build() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes buildPartial() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes result = new org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes result) {
        if (((bitField0_ & 0x00000010) != 0)) {
          repeatedNum_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.repeatedNum_ = repeatedNum_;
        if (repeatedMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            repeatedMessage_ = java.util.Collections.unmodifiableList(repeatedMessage_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.repeatedMessage_ = repeatedMessage_;
        } else {
          result.repeatedMessage_ = repeatedMessageBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.int_ = int_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.text_ = text_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.enumVal_ = enumVal_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.message_ = messageBuilder_ == null
              ? message_
              : messageBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.map_ = internalGetMap();
          result.map_.makeImmutable();
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes result) {
        result.payloadCase_ = payloadCase_;
        result.payload_ = this.payload_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes other) {
        if (other == org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.getDefaultInstance()) return this;
        if (other.hasInt()) {
          setInt(other.getInt());
        }
        if (other.hasText()) {
          text_ = other.text_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasEnumVal()) {
          setEnumVal(other.getEnumVal());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (!other.repeatedNum_.isEmpty()) {
          if (repeatedNum_.isEmpty()) {
            repeatedNum_ = other.repeatedNum_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRepeatedNumIsMutable();
            repeatedNum_.addAll(other.repeatedNum_);
          }
          onChanged();
        }
        if (repeatedMessageBuilder_ == null) {
          if (!other.repeatedMessage_.isEmpty()) {
            if (repeatedMessage_.isEmpty()) {
              repeatedMessage_ = other.repeatedMessage_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureRepeatedMessageIsMutable();
              repeatedMessage_.addAll(other.repeatedMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.repeatedMessage_.isEmpty()) {
            if (repeatedMessageBuilder_.isEmpty()) {
              repeatedMessageBuilder_.dispose();
              repeatedMessageBuilder_ = null;
              repeatedMessage_ = other.repeatedMessage_;
              bitField0_ = (bitField0_ & ~0x00000020);
              repeatedMessageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRepeatedMessageFieldBuilder() : null;
            } else {
              repeatedMessageBuilder_.addAllMessages(other.repeatedMessage_);
            }
          }
        }
        internalGetMutableMap().mergeFrom(
            other.internalGetMap());
        bitField0_ |= 0x00000100;
        switch (other.getPayloadCase()) {
          case OPTION_A: {
            setOptionA(other.getOptionA());
            break;
          }
          case OPTION_B: {
            payloadCase_ = 12;
            payload_ = other.payload_;
            onChanged();
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getRepeatedMessageCount(); i++) {
          if (!getRepeatedMessage(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                text_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int tmpRaw = input.readEnum();
                org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum tmpValue =
                    org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  enumVal_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getMessageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                long v = input.readInt64();
                ensureRepeatedNumIsMutable();
                repeatedNum_.addLong(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRepeatedNumIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  repeatedNum_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 50: {
                org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar m =
                    input.readMessage(
                        org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.PARSER,
                        extensionRegistry);
                if (repeatedMessageBuilder_ == null) {
                  ensureRepeatedMessageIsMutable();
                  repeatedMessage_.add(m);
                } else {
                  repeatedMessageBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 88: {
                payload_ = input.readInt32();
                payloadCase_ = 11;
                break;
              } // case 88
              case 98: {
                com.google.protobuf.ByteString bs = input.readBytes();
                payloadCase_ = 12;
                payload_ = bs;
                break;
              } // case 98
              case 106: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                map__ = input.readMessage(
                    MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMap().getMutableMap().put(
                    map__.getKey(), map__.getValue());
                bitField0_ |= 0x00000100;
                break;
              } // case 106
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private long int_ ;
      /**
       * <code>optional int64 int = 1;</code>
       * @return Whether the int field is set.
       */
      @java.lang.Override
      public boolean hasInt() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 int = 1;</code>
       * @return The int.
       */
      @java.lang.Override
      public long getInt() {
        return int_;
      }
      /**
       * <code>optional int64 int = 1;</code>
       * @param value The int to set.
       * @return This builder for chaining.
       */
      public Builder setInt(long value) {

        int_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        int_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 2;</code>
       * @return Whether the text field is set.
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string text = 2;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        text_ = getDefaultInstance().getText();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int enumVal_ = 0;
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
       * @return Whether the enumVal field is set.
       */
      @java.lang.Override public boolean hasEnumVal() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
       * @return The enumVal.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum getEnumVal() {
        org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum.forNumber(enumVal_);
        return result == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum.NOTHING : result;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
       * @param value The enumVal to set.
       * @return This builder for chaining.
       */
      public Builder setEnumVal(org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        enumVal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto2AllTypes.NestedEnum enum_val = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnumVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enumVal_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar message_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> messageBuilder_;
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       * @return Whether the message field is set.
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       * @return The message.
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getMessage() {
        if (messageBuilder_ == null) {
          return message_ == null ? org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public Builder setMessage(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public Builder setMessage(
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public Builder mergeMessage(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            message_ != null &&
            message_ != org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance()) {
            getMessageBuilder().mergeFrom(value);
          } else {
            message_ = value;
          }
        } else {
          messageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder getMessageBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_ == null ?
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance() : message_;
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar message = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder>(
                  getMessage(),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private com.google.protobuf.Internal.LongList repeatedNum_ = emptyLongList();
      private void ensureRepeatedNumIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          repeatedNum_ = mutableCopy(repeatedNum_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @return A list containing the repeatedNum.
       */
      public java.util.List<java.lang.Long>
          getRepeatedNumList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(repeatedNum_) : repeatedNum_;
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @return The count of repeatedNum.
       */
      public int getRepeatedNumCount() {
        return repeatedNum_.size();
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @param index The index of the element to return.
       * @return The repeatedNum at the given index.
       */
      public long getRepeatedNum(int index) {
        return repeatedNum_.getLong(index);
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @param index The index to set the value at.
       * @param value The repeatedNum to set.
       * @return This builder for chaining.
       */
      public Builder setRepeatedNum(
          int index, long value) {

        ensureRepeatedNumIsMutable();
        repeatedNum_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @param value The repeatedNum to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedNum(long value) {

        ensureRepeatedNumIsMutable();
        repeatedNum_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @param values The repeatedNum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRepeatedNum(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedNumIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeatedNum() {
        repeatedNum_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> repeatedMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedMessageIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          repeatedMessage_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar>(repeatedMessage_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> repeatedMessageBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> getRepeatedMessageList() {
        if (repeatedMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(repeatedMessage_);
        } else {
          return repeatedMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public int getRepeatedMessageCount() {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.size();
        } else {
          return repeatedMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar getRepeatedMessage(int index) {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.get(index);
        } else {
          return repeatedMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder setRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.set(index, value);
          onChanged();
        } else {
          repeatedMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder setRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder addRepeatedMessage(org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(value);
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder addRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(index, value);
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder addRepeatedMessage(
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder addRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder addAllRepeatedMessage(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar> values) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, repeatedMessage_);
          onChanged();
        } else {
          repeatedMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder clearRepeatedMessage() {
        if (repeatedMessageBuilder_ == null) {
          repeatedMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          repeatedMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public Builder removeRepeatedMessage(int index) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.remove(index);
          onChanged();
        } else {
          repeatedMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder getRepeatedMessageBuilder(
          int index) {
        return getRepeatedMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder getRepeatedMessageOrBuilder(
          int index) {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.get(index);  } else {
          return repeatedMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
           getRepeatedMessageOrBuilderList() {
        if (repeatedMessageBuilder_ != null) {
          return repeatedMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(repeatedMessage_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder addRepeatedMessageBuilder() {
        return getRepeatedMessageFieldBuilder().addBuilder(
            org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder addRepeatedMessageBuilder(
          int index) {
        return getRepeatedMessageFieldBuilder().addBuilder(
            index, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.FoobarWithRequiredFieldBar repeated_message = 6;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder> 
           getRepeatedMessageBuilderList() {
        return getRepeatedMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder> 
          getRepeatedMessageFieldBuilder() {
        if (repeatedMessageBuilder_ == null) {
          repeatedMessageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBar.Builder, org.apache.spark.sql.protobuf.protos.Proto2Messages.FoobarWithRequiredFieldBarOrBuilder>(
                  repeatedMessage_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          repeatedMessage_ = null;
        }
        return repeatedMessageBuilder_;
      }

      /**
       * <code>int32 option_a = 11;</code>
       * @return Whether the optionA field is set.
       */
      public boolean hasOptionA() {
        return payloadCase_ == 11;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @return The optionA.
       */
      public int getOptionA() {
        if (payloadCase_ == 11) {
          return (java.lang.Integer) payload_;
        }
        return 0;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @param value The optionA to set.
       * @return This builder for chaining.
       */
      public Builder setOptionA(int value) {

        payloadCase_ = 11;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionA() {
        if (payloadCase_ == 11) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string option_b = 12;</code>
       * @return Whether the optionB field is set.
       */
      @java.lang.Override
      public boolean hasOptionB() {
        return payloadCase_ == 12;
      }
      /**
       * <code>string option_b = 12;</code>
       * @return The optionB.
       */
      @java.lang.Override
      public java.lang.String getOptionB() {
        java.lang.Object ref = "";
        if (payloadCase_ == 12) {
          ref = payload_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (payloadCase_ == 12) {
            if (bs.isValidUtf8()) {
              payload_ = s;
            }
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string option_b = 12;</code>
       * @return The bytes for optionB.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOptionBBytes() {
        java.lang.Object ref = "";
        if (payloadCase_ == 12) {
          ref = payload_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (payloadCase_ == 12) {
            payload_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string option_b = 12;</code>
       * @param value The optionB to set.
       * @return This builder for chaining.
       */
      public Builder setOptionB(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        payloadCase_ = 12;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string option_b = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionB() {
        if (payloadCase_ == 12) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string option_b = 12;</code>
       * @param value The bytes for optionB to set.
       * @return This builder for chaining.
       */
      public Builder setOptionBBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payloadCase_ = 12;
        payload_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> map_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMap() {
        if (map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        return map_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMap() {
        if (map_ == null) {
          map_ = com.google.protobuf.MapField.newMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        if (!map_.isMutable()) {
          map_ = map_.copy();
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return map_;
      }
      public int getMapCount() {
        return internalGetMap().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public boolean containsMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMap() {
        return getMapMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
        return internalGetMap().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getMapOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public java.lang.String getMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMap() {
        bitField0_ = (bitField0_ & ~0x00000100);
        internalGetMutableMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder removeMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableMap() {
        bitField0_ |= 0x00000100;
        return internalGetMutableMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder putMap(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder putAllMap(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000100;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Proto2AllTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Proto2AllTypes)
    private static final org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes();
    }

    public static org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Proto2AllTypes>
        PARSER = new com.google.protobuf.AbstractParser<Proto2AllTypes>() {
      @java.lang.Override
      public Proto2AllTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Proto2AllTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Proto2AllTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.Proto2Messages.Proto2AllTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025proto2_messages.proto\022$org.apache.spar" +
      "k.sql.protobuf.protos\"6\n\032FoobarWithRequi" +
      "redFieldBar\022\013\n\003foo\030\001 \001(\t\022\013\n\003bar\030\002 \002(\005\"{\n" +
      " NestedFoobarWithRequiredFieldBar\022W\n\rnes" +
      "ted_foobar\030\001 \001(\0132@.org.apache.spark.sql." +
      "protobuf.protos.FoobarWithRequiredFieldB" +
      "ar\"\240\004\n\016Proto2AllTypes\022\013\n\003int\030\001 \001(\003\022\014\n\004te" +
      "xt\030\002 \001(\t\022Q\n\010enum_val\030\003 \001(\0162?.org.apache." +
      "spark.sql.protobuf.protos.Proto2AllTypes" +
      ".NestedEnum\022Q\n\007message\030\004 \001(\0132@.org.apach" +
      "e.spark.sql.protobuf.protos.FoobarWithRe" +
      "quiredFieldBar\022\024\n\014repeated_num\030\005 \003(\003\022Z\n\020" +
      "repeated_message\030\006 \003(\0132@.org.apache.spar" +
      "k.sql.protobuf.protos.FoobarWithRequired" +
      "FieldBar\022\022\n\010option_a\030\013 \001(\005H\000\022\022\n\010option_b" +
      "\030\014 \001(\tH\000\022J\n\003map\030\r \003(\0132=.org.apache.spark" +
      ".sql.protobuf.protos.Proto2AllTypes.MapE" +
      "ntry\032*\n\010MapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002" +
      " \001(\t:\0028\001\"0\n\nNestedEnum\022\013\n\007NOTHING\020\000\022\t\n\005F" +
      "IRST\020\001\022\n\n\006SECOND\020\002B\t\n\007payloadB\020B\016Proto2M" +
      "essages"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_FoobarWithRequiredFieldBar_descriptor,
        new java.lang.String[] { "Foo", "Bar", });
    internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_NestedFoobarWithRequiredFieldBar_descriptor,
        new java.lang.String[] { "NestedFoobar", });
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor,
        new java.lang.String[] { "Int", "Text", "EnumVal", "Message", "RepeatedNum", "RepeatedMessage", "OptionA", "OptionB", "Map", "Payload", });
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Proto2AllTypes_MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
