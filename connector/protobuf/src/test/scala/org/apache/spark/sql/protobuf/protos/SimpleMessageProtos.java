// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: functions_suite.proto

package org.apache.spark.sql.protobuf.protos;

public final class SimpleMessageProtos {
  private SimpleMessageProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SimpleMessageJavaTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    int getInt32Value();

    /**
     * <code>int64 int64_value = 4;</code>
     * @return The int64Value.
     */
    long getInt64Value();

    /**
     * <code>double double_value = 5;</code>
     * @return The doubleValue.
     */
    double getDoubleValue();

    /**
     * <code>float float_value = 6;</code>
     * @return The floatValue.
     */
    float getFloatValue();

    /**
     * <code>bool bool_value = 7;</code>
     * @return The boolValue.
     */
    boolean getBoolValue();

    /**
     * <code>bytes bytes_value = 8;</code>
     * @return The bytesValue.
     */
    com.google.protobuf.ByteString getBytesValue();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes}
   */
  public static final class SimpleMessageJavaTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes)
      SimpleMessageJavaTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessageJavaTypes.newBuilder() to construct.
    private SimpleMessageJavaTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessageJavaTypes() {
      stringValue_ = "";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleMessageJavaTypes();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = 0L;
    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stringValue_ = "";
    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    @java.lang.Override
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      }
    }
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INT32_VALUE_FIELD_NUMBER = 3;
    private int int32Value_ = 0;
    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    @java.lang.Override
    public int getInt32Value() {
      return int32Value_;
    }

    public static final int INT64_VALUE_FIELD_NUMBER = 4;
    private long int64Value_ = 0L;
    /**
     * <code>int64 int64_value = 4;</code>
     * @return The int64Value.
     */
    @java.lang.Override
    public long getInt64Value() {
      return int64Value_;
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 5;
    private double doubleValue_ = 0D;
    /**
     * <code>double double_value = 5;</code>
     * @return The doubleValue.
     */
    @java.lang.Override
    public double getDoubleValue() {
      return doubleValue_;
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 6;
    private float floatValue_ = 0F;
    /**
     * <code>float float_value = 6;</code>
     * @return The floatValue.
     */
    @java.lang.Override
    public float getFloatValue() {
      return floatValue_;
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 7;
    private boolean boolValue_ = false;
    /**
     * <code>bool bool_value = 7;</code>
     * @return The boolValue.
     */
    @java.lang.Override
    public boolean getBoolValue() {
      return boolValue_;
    }

    public static final int BYTES_VALUE_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes bytes_value = 8;</code>
     * @return The bytesValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stringValue_);
      }
      if (int32Value_ != 0) {
        output.writeInt32(3, int32Value_);
      }
      if (int64Value_ != 0L) {
        output.writeInt64(4, int64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        output.writeDouble(5, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        output.writeFloat(6, floatValue_);
      }
      if (boolValue_ != false) {
        output.writeBool(7, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        output.writeBytes(8, bytesValue_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stringValue_);
      }
      if (int32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Value_);
      }
      if (int64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, floatValue_);
      }
      if (boolValue_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, bytesValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes) obj;

      if (getId()
          != other.getId()) return false;
      if (!getStringValue()
          .equals(other.getStringValue())) return false;
      if (getInt32Value()
          != other.getInt32Value()) return false;
      if (getInt64Value()
          != other.getInt64Value()) return false;
      if (java.lang.Double.doubleToLongBits(getDoubleValue())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleValue())) return false;
      if (java.lang.Float.floatToIntBits(getFloatValue())
          != java.lang.Float.floatToIntBits(
              other.getFloatValue())) return false;
      if (getBoolValue()
          != other.getBoolValue()) return false;
      if (!getBytesValue()
          .equals(other.getBytesValue())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStringValue().hashCode();
      hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Value();
      hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64Value());
      hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleValue()));
      hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatValue());
      hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolValue());
      hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getBytesValue().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        stringValue_ = "";
        int32Value_ = 0;
        int64Value_ = 0L;
        doubleValue_ = 0D;
        floatValue_ = 0F;
        boolValue_ = false;
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stringValue_ = stringValue_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.int32Value_ = int32Value_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.int64Value_ = int64Value_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.doubleValue_ = doubleValue_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.floatValue_ = floatValue_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.boolValue_ = boolValue_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.bytesValue_ = bytesValue_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes other) {
        if (other == getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getStringValue().isEmpty()) {
          stringValue_ = other.stringValue_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getInt32Value() != 0) {
          setInt32Value(other.getInt32Value());
        }
        if (other.getInt64Value() != 0L) {
          setInt64Value(other.getInt64Value());
        }
        if (other.getDoubleValue() != 0D) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.getFloatValue() != 0F) {
          setFloatValue(other.getFloatValue());
        }
        if (other.getBoolValue() != false) {
          setBoolValue(other.getBoolValue());
        }
        if (other.getBytesValue() != com.google.protobuf.ByteString.EMPTY) {
          setBytesValue(other.getBytesValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                stringValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int32Value_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int64Value_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                doubleValue_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 53: {
                floatValue_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 56: {
                boolValue_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                bytesValue_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>string string_value = 2;</code>
       * @return The stringValue.
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @return The bytes for stringValue.
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        stringValue_ = getDefaultInstance().getStringValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int int32Value_ ;
      /**
       * <code>int32 int32_value = 3;</code>
       * @return The int32Value.
       */
      @java.lang.Override
      public int getInt32Value() {
        return int32Value_;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @param value The int32Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt32Value(int value) {

        int32Value_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32Value() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Value_ = 0;
        onChanged();
        return this;
      }

      private long int64Value_ ;
      /**
       * <code>int64 int64_value = 4;</code>
       * @return The int64Value.
       */
      @java.lang.Override
      public long getInt64Value() {
        return int64Value_;
      }
      /**
       * <code>int64 int64_value = 4;</code>
       * @param value The int64Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt64Value(long value) {

        int64Value_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Value_ = 0L;
        onChanged();
        return this;
      }

      private double doubleValue_ ;
      /**
       * <code>double double_value = 5;</code>
       * @return The doubleValue.
       */
      @java.lang.Override
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>double double_value = 5;</code>
       * @param value The doubleValue to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleValue(double value) {

        doubleValue_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double double_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      private float floatValue_ ;
      /**
       * <code>float float_value = 6;</code>
       * @return The floatValue.
       */
      @java.lang.Override
      public float getFloatValue() {
        return floatValue_;
      }
      /**
       * <code>float float_value = 6;</code>
       * @param value The floatValue to set.
       * @return This builder for chaining.
       */
      public Builder setFloatValue(float value) {

        floatValue_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float float_value = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        floatValue_ = 0F;
        onChanged();
        return this;
      }

      private boolean boolValue_ ;
      /**
       * <code>bool bool_value = 7;</code>
       * @return The boolValue.
       */
      @java.lang.Override
      public boolean getBoolValue() {
        return boolValue_;
      }
      /**
       * <code>bool bool_value = 7;</code>
       * @param value The boolValue to set.
       * @return This builder for chaining.
       */
      public Builder setBoolValue(boolean value) {

        boolValue_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        boolValue_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_value = 8;</code>
       * @return The bytesValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      /**
       * <code>bytes bytes_value = 8;</code>
       * @param value The bytesValue to set.
       * @return This builder for chaining.
       */
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        bytesValue_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_value = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bytesValue_ = getDefaultInstance().getBytesValue();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageJavaTypes)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMessageJavaTypes>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMessageJavaTypes>() {
      @java.lang.Override
      public SimpleMessageJavaTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleMessageJavaTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessageJavaTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageJavaTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.SimpleMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    int getInt32Value();

    /**
     * <code>uint32 uint32_value = 4;</code>
     * @return The uint32Value.
     */
    int getUint32Value();

    /**
     * <code>sint32 sint32_value = 5;</code>
     * @return The sint32Value.
     */
    int getSint32Value();

    /**
     * <code>fixed32 fixed32_value = 6;</code>
     * @return The fixed32Value.
     */
    int getFixed32Value();

    /**
     * <code>sfixed32 sfixed32_value = 7;</code>
     * @return The sfixed32Value.
     */
    int getSfixed32Value();

    /**
     * <code>int64 int64_value = 8;</code>
     * @return The int64Value.
     */
    long getInt64Value();

    /**
     * <code>uint64 uint64_value = 9;</code>
     * @return The uint64Value.
     */
    long getUint64Value();

    /**
     * <code>sint64 sint64_value = 10;</code>
     * @return The sint64Value.
     */
    long getSint64Value();

    /**
     * <code>fixed64 fixed64_value = 11;</code>
     * @return The fixed64Value.
     */
    long getFixed64Value();

    /**
     * <code>sfixed64 sfixed64_value = 12;</code>
     * @return The sfixed64Value.
     */
    long getSfixed64Value();

    /**
     * <code>double double_value = 13;</code>
     * @return The doubleValue.
     */
    double getDoubleValue();

    /**
     * <code>float float_value = 14;</code>
     * @return The floatValue.
     */
    float getFloatValue();

    /**
     * <code>bool bool_value = 15;</code>
     * @return The boolValue.
     */
    boolean getBoolValue();

    /**
     * <code>bytes bytes_value = 16;</code>
     * @return The bytesValue.
     */
    com.google.protobuf.ByteString getBytesValue();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessage}
   */
  public static final class SimpleMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.SimpleMessage)
      SimpleMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessage.newBuilder() to construct.
    private SimpleMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessage() {
      stringValue_ = "";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = 0L;
    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stringValue_ = "";
    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    @java.lang.Override
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      }
    }
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INT32_VALUE_FIELD_NUMBER = 3;
    private int int32Value_ = 0;
    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    @java.lang.Override
    public int getInt32Value() {
      return int32Value_;
    }

    public static final int UINT32_VALUE_FIELD_NUMBER = 4;
    private int uint32Value_ = 0;
    /**
     * <code>uint32 uint32_value = 4;</code>
     * @return The uint32Value.
     */
    @java.lang.Override
    public int getUint32Value() {
      return uint32Value_;
    }

    public static final int SINT32_VALUE_FIELD_NUMBER = 5;
    private int sint32Value_ = 0;
    /**
     * <code>sint32 sint32_value = 5;</code>
     * @return The sint32Value.
     */
    @java.lang.Override
    public int getSint32Value() {
      return sint32Value_;
    }

    public static final int FIXED32_VALUE_FIELD_NUMBER = 6;
    private int fixed32Value_ = 0;
    /**
     * <code>fixed32 fixed32_value = 6;</code>
     * @return The fixed32Value.
     */
    @java.lang.Override
    public int getFixed32Value() {
      return fixed32Value_;
    }

    public static final int SFIXED32_VALUE_FIELD_NUMBER = 7;
    private int sfixed32Value_ = 0;
    /**
     * <code>sfixed32 sfixed32_value = 7;</code>
     * @return The sfixed32Value.
     */
    @java.lang.Override
    public int getSfixed32Value() {
      return sfixed32Value_;
    }

    public static final int INT64_VALUE_FIELD_NUMBER = 8;
    private long int64Value_ = 0L;
    /**
     * <code>int64 int64_value = 8;</code>
     * @return The int64Value.
     */
    @java.lang.Override
    public long getInt64Value() {
      return int64Value_;
    }

    public static final int UINT64_VALUE_FIELD_NUMBER = 9;
    private long uint64Value_ = 0L;
    /**
     * <code>uint64 uint64_value = 9;</code>
     * @return The uint64Value.
     */
    @java.lang.Override
    public long getUint64Value() {
      return uint64Value_;
    }

    public static final int SINT64_VALUE_FIELD_NUMBER = 10;
    private long sint64Value_ = 0L;
    /**
     * <code>sint64 sint64_value = 10;</code>
     * @return The sint64Value.
     */
    @java.lang.Override
    public long getSint64Value() {
      return sint64Value_;
    }

    public static final int FIXED64_VALUE_FIELD_NUMBER = 11;
    private long fixed64Value_ = 0L;
    /**
     * <code>fixed64 fixed64_value = 11;</code>
     * @return The fixed64Value.
     */
    @java.lang.Override
    public long getFixed64Value() {
      return fixed64Value_;
    }

    public static final int SFIXED64_VALUE_FIELD_NUMBER = 12;
    private long sfixed64Value_ = 0L;
    /**
     * <code>sfixed64 sfixed64_value = 12;</code>
     * @return The sfixed64Value.
     */
    @java.lang.Override
    public long getSfixed64Value() {
      return sfixed64Value_;
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 13;
    private double doubleValue_ = 0D;
    /**
     * <code>double double_value = 13;</code>
     * @return The doubleValue.
     */
    @java.lang.Override
    public double getDoubleValue() {
      return doubleValue_;
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 14;
    private float floatValue_ = 0F;
    /**
     * <code>float float_value = 14;</code>
     * @return The floatValue.
     */
    @java.lang.Override
    public float getFloatValue() {
      return floatValue_;
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 15;
    private boolean boolValue_ = false;
    /**
     * <code>bool bool_value = 15;</code>
     * @return The boolValue.
     */
    @java.lang.Override
    public boolean getBoolValue() {
      return boolValue_;
    }

    public static final int BYTES_VALUE_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes bytes_value = 16;</code>
     * @return The bytesValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stringValue_);
      }
      if (int32Value_ != 0) {
        output.writeInt32(3, int32Value_);
      }
      if (uint32Value_ != 0) {
        output.writeUInt32(4, uint32Value_);
      }
      if (sint32Value_ != 0) {
        output.writeSInt32(5, sint32Value_);
      }
      if (fixed32Value_ != 0) {
        output.writeFixed32(6, fixed32Value_);
      }
      if (sfixed32Value_ != 0) {
        output.writeSFixed32(7, sfixed32Value_);
      }
      if (int64Value_ != 0L) {
        output.writeInt64(8, int64Value_);
      }
      if (uint64Value_ != 0L) {
        output.writeUInt64(9, uint64Value_);
      }
      if (sint64Value_ != 0L) {
        output.writeSInt64(10, sint64Value_);
      }
      if (fixed64Value_ != 0L) {
        output.writeFixed64(11, fixed64Value_);
      }
      if (sfixed64Value_ != 0L) {
        output.writeSFixed64(12, sfixed64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        output.writeDouble(13, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        output.writeFloat(14, floatValue_);
      }
      if (boolValue_ != false) {
        output.writeBool(15, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        output.writeBytes(16, bytesValue_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stringValue_);
      }
      if (int32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Value_);
      }
      if (uint32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, uint32Value_);
      }
      if (sint32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, sint32Value_);
      }
      if (fixed32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, fixed32Value_);
      }
      if (sfixed32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(7, sfixed32Value_);
      }
      if (int64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, int64Value_);
      }
      if (uint64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, uint64Value_);
      }
      if (sint64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(10, sint64Value_);
      }
      if (fixed64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(11, fixed64Value_);
      }
      if (sfixed64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, floatValue_);
      }
      if (boolValue_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, bytesValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage) obj;

      if (getId()
          != other.getId()) return false;
      if (!getStringValue()
          .equals(other.getStringValue())) return false;
      if (getInt32Value()
          != other.getInt32Value()) return false;
      if (getUint32Value()
          != other.getUint32Value()) return false;
      if (getSint32Value()
          != other.getSint32Value()) return false;
      if (getFixed32Value()
          != other.getFixed32Value()) return false;
      if (getSfixed32Value()
          != other.getSfixed32Value()) return false;
      if (getInt64Value()
          != other.getInt64Value()) return false;
      if (getUint64Value()
          != other.getUint64Value()) return false;
      if (getSint64Value()
          != other.getSint64Value()) return false;
      if (getFixed64Value()
          != other.getFixed64Value()) return false;
      if (getSfixed64Value()
          != other.getSfixed64Value()) return false;
      if (java.lang.Double.doubleToLongBits(getDoubleValue())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleValue())) return false;
      if (java.lang.Float.floatToIntBits(getFloatValue())
          != java.lang.Float.floatToIntBits(
              other.getFloatValue())) return false;
      if (getBoolValue()
          != other.getBoolValue()) return false;
      if (!getBytesValue()
          .equals(other.getBytesValue())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStringValue().hashCode();
      hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Value();
      hash = (37 * hash) + UINT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getUint32Value();
      hash = (37 * hash) + SINT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getSint32Value();
      hash = (37 * hash) + FIXED32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getFixed32Value();
      hash = (37 * hash) + SFIXED32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getSfixed32Value();
      hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64Value());
      hash = (37 * hash) + UINT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUint64Value());
      hash = (37 * hash) + SINT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSint64Value());
      hash = (37 * hash) + FIXED64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFixed64Value());
      hash = (37 * hash) + SFIXED64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSfixed64Value());
      hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleValue()));
      hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatValue());
      hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolValue());
      hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getBytesValue().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.SimpleMessage)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        stringValue_ = "";
        int32Value_ = 0;
        uint32Value_ = 0;
        sint32Value_ = 0;
        fixed32Value_ = 0;
        sfixed32Value_ = 0;
        int64Value_ = 0L;
        uint64Value_ = 0L;
        sint64Value_ = 0L;
        fixed64Value_ = 0L;
        sfixed64Value_ = 0L;
        doubleValue_ = 0D;
        floatValue_ = 0F;
        boolValue_ = false;
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stringValue_ = stringValue_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.int32Value_ = int32Value_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.uint32Value_ = uint32Value_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sint32Value_ = sint32Value_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.fixed32Value_ = fixed32Value_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.sfixed32Value_ = sfixed32Value_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.int64Value_ = int64Value_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.uint64Value_ = uint64Value_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.sint64Value_ = sint64Value_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.fixed64Value_ = fixed64Value_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.sfixed64Value_ = sfixed64Value_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.doubleValue_ = doubleValue_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.floatValue_ = floatValue_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.boolValue_ = boolValue_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.bytesValue_ = bytesValue_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage other) {
        if (other == getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getStringValue().isEmpty()) {
          stringValue_ = other.stringValue_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getInt32Value() != 0) {
          setInt32Value(other.getInt32Value());
        }
        if (other.getUint32Value() != 0) {
          setUint32Value(other.getUint32Value());
        }
        if (other.getSint32Value() != 0) {
          setSint32Value(other.getSint32Value());
        }
        if (other.getFixed32Value() != 0) {
          setFixed32Value(other.getFixed32Value());
        }
        if (other.getSfixed32Value() != 0) {
          setSfixed32Value(other.getSfixed32Value());
        }
        if (other.getInt64Value() != 0L) {
          setInt64Value(other.getInt64Value());
        }
        if (other.getUint64Value() != 0L) {
          setUint64Value(other.getUint64Value());
        }
        if (other.getSint64Value() != 0L) {
          setSint64Value(other.getSint64Value());
        }
        if (other.getFixed64Value() != 0L) {
          setFixed64Value(other.getFixed64Value());
        }
        if (other.getSfixed64Value() != 0L) {
          setSfixed64Value(other.getSfixed64Value());
        }
        if (other.getDoubleValue() != 0D) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.getFloatValue() != 0F) {
          setFloatValue(other.getFloatValue());
        }
        if (other.getBoolValue() != false) {
          setBoolValue(other.getBoolValue());
        }
        if (other.getBytesValue() != com.google.protobuf.ByteString.EMPTY) {
          setBytesValue(other.getBytesValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                stringValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int32Value_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                uint32Value_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                sint32Value_ = input.readSInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 53: {
                fixed32Value_ = input.readFixed32();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                sfixed32Value_ = input.readSFixed32();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 64: {
                int64Value_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                uint64Value_ = input.readUInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                sint64Value_ = input.readSInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 89: {
                fixed64Value_ = input.readFixed64();
                bitField0_ |= 0x00000400;
                break;
              } // case 89
              case 97: {
                sfixed64Value_ = input.readSFixed64();
                bitField0_ |= 0x00000800;
                break;
              } // case 97
              case 105: {
                doubleValue_ = input.readDouble();
                bitField0_ |= 0x00001000;
                break;
              } // case 105
              case 117: {
                floatValue_ = input.readFloat();
                bitField0_ |= 0x00002000;
                break;
              } // case 117
              case 120: {
                boolValue_ = input.readBool();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 130: {
                bytesValue_ = input.readBytes();
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>string string_value = 2;</code>
       * @return The stringValue.
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @return The bytes for stringValue.
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        stringValue_ = getDefaultInstance().getStringValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int int32Value_ ;
      /**
       * <code>int32 int32_value = 3;</code>
       * @return The int32Value.
       */
      @java.lang.Override
      public int getInt32Value() {
        return int32Value_;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @param value The int32Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt32Value(int value) {

        int32Value_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32Value() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Value_ = 0;
        onChanged();
        return this;
      }

      private int uint32Value_ ;
      /**
       * <code>uint32 uint32_value = 4;</code>
       * @return The uint32Value.
       */
      @java.lang.Override
      public int getUint32Value() {
        return uint32Value_;
      }
      /**
       * <code>uint32 uint32_value = 4;</code>
       * @param value The uint32Value to set.
       * @return This builder for chaining.
       */
      public Builder setUint32Value(int value) {

        uint32Value_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uint32_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint32Value() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Value_ = 0;
        onChanged();
        return this;
      }

      private int sint32Value_ ;
      /**
       * <code>sint32 sint32_value = 5;</code>
       * @return The sint32Value.
       */
      @java.lang.Override
      public int getSint32Value() {
        return sint32Value_;
      }
      /**
       * <code>sint32 sint32_value = 5;</code>
       * @param value The sint32Value to set.
       * @return This builder for chaining.
       */
      public Builder setSint32Value(int value) {

        sint32Value_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sint32_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint32Value() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sint32Value_ = 0;
        onChanged();
        return this;
      }

      private int fixed32Value_ ;
      /**
       * <code>fixed32 fixed32_value = 6;</code>
       * @return The fixed32Value.
       */
      @java.lang.Override
      public int getFixed32Value() {
        return fixed32Value_;
      }
      /**
       * <code>fixed32 fixed32_value = 6;</code>
       * @param value The fixed32Value to set.
       * @return This builder for chaining.
       */
      public Builder setFixed32Value(int value) {

        fixed32Value_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 fixed32_value = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed32Value() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fixed32Value_ = 0;
        onChanged();
        return this;
      }

      private int sfixed32Value_ ;
      /**
       * <code>sfixed32 sfixed32_value = 7;</code>
       * @return The sfixed32Value.
       */
      @java.lang.Override
      public int getSfixed32Value() {
        return sfixed32Value_;
      }
      /**
       * <code>sfixed32 sfixed32_value = 7;</code>
       * @param value The sfixed32Value to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed32Value(int value) {

        sfixed32Value_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sfixed32_value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed32Value() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sfixed32Value_ = 0;
        onChanged();
        return this;
      }

      private long int64Value_ ;
      /**
       * <code>int64 int64_value = 8;</code>
       * @return The int64Value.
       */
      @java.lang.Override
      public long getInt64Value() {
        return int64Value_;
      }
      /**
       * <code>int64 int64_value = 8;</code>
       * @param value The int64Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt64Value(long value) {

        int64Value_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_value = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000080);
        int64Value_ = 0L;
        onChanged();
        return this;
      }

      private long uint64Value_ ;
      /**
       * <code>uint64 uint64_value = 9;</code>
       * @return The uint64Value.
       */
      @java.lang.Override
      public long getUint64Value() {
        return uint64Value_;
      }
      /**
       * <code>uint64 uint64_value = 9;</code>
       * @param value The uint64Value to set.
       * @return This builder for chaining.
       */
      public Builder setUint64Value(long value) {

        uint64Value_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 uint64_value = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint64Value() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uint64Value_ = 0L;
        onChanged();
        return this;
      }

      private long sint64Value_ ;
      /**
       * <code>sint64 sint64_value = 10;</code>
       * @return The sint64Value.
       */
      @java.lang.Override
      public long getSint64Value() {
        return sint64Value_;
      }
      /**
       * <code>sint64 sint64_value = 10;</code>
       * @param value The sint64Value to set.
       * @return This builder for chaining.
       */
      public Builder setSint64Value(long value) {

        sint64Value_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 sint64_value = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint64Value() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sint64Value_ = 0L;
        onChanged();
        return this;
      }

      private long fixed64Value_ ;
      /**
       * <code>fixed64 fixed64_value = 11;</code>
       * @return The fixed64Value.
       */
      @java.lang.Override
      public long getFixed64Value() {
        return fixed64Value_;
      }
      /**
       * <code>fixed64 fixed64_value = 11;</code>
       * @param value The fixed64Value to set.
       * @return This builder for chaining.
       */
      public Builder setFixed64Value(long value) {

        fixed64Value_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 fixed64_value = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed64Value() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fixed64Value_ = 0L;
        onChanged();
        return this;
      }

      private long sfixed64Value_ ;
      /**
       * <code>sfixed64 sfixed64_value = 12;</code>
       * @return The sfixed64Value.
       */
      @java.lang.Override
      public long getSfixed64Value() {
        return sfixed64Value_;
      }
      /**
       * <code>sfixed64 sfixed64_value = 12;</code>
       * @param value The sfixed64Value to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed64Value(long value) {

        sfixed64Value_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sfixed64_value = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed64Value() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64Value_ = 0L;
        onChanged();
        return this;
      }

      private double doubleValue_ ;
      /**
       * <code>double double_value = 13;</code>
       * @return The doubleValue.
       */
      @java.lang.Override
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>double double_value = 13;</code>
       * @param value The doubleValue to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleValue(double value) {

        doubleValue_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>double double_value = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00001000);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      private float floatValue_ ;
      /**
       * <code>float float_value = 14;</code>
       * @return The floatValue.
       */
      @java.lang.Override
      public float getFloatValue() {
        return floatValue_;
      }
      /**
       * <code>float float_value = 14;</code>
       * @param value The floatValue to set.
       * @return This builder for chaining.
       */
      public Builder setFloatValue(float value) {

        floatValue_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>float float_value = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00002000);
        floatValue_ = 0F;
        onChanged();
        return this;
      }

      private boolean boolValue_ ;
      /**
       * <code>bool bool_value = 15;</code>
       * @return The boolValue.
       */
      @java.lang.Override
      public boolean getBoolValue() {
        return boolValue_;
      }
      /**
       * <code>bool bool_value = 15;</code>
       * @param value The boolValue to set.
       * @return This builder for chaining.
       */
      public Builder setBoolValue(boolean value) {

        boolValue_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_value = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x00004000);
        boolValue_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_value = 16;</code>
       * @return The bytesValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      /**
       * <code>bytes bytes_value = 16;</code>
       * @param value The bytesValue to set.
       * @return This builder for chaining.
       */
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        bytesValue_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_value = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x00008000);
        bytesValue_ = getDefaultInstance().getBytesValue();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.SimpleMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.SimpleMessage)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMessage>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMessage>() {
      @java.lang.Override
      public SimpleMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleMessageRepeatedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>repeated string rstring_value = 3;</code>
     * @return A list containing the rstringValue.
     */
    java.util.List<java.lang.String>
        getRstringValueList();
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @return The count of rstringValue.
     */
    int getRstringValueCount();
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @param index The index of the element to return.
     * @return The rstringValue at the given index.
     */
    java.lang.String getRstringValue(int index);
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rstringValue at the given index.
     */
    com.google.protobuf.ByteString
        getRstringValueBytes(int index);

    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @return A list containing the rint32Value.
     */
    java.util.List<java.lang.Integer> getRint32ValueList();
    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @return The count of rint32Value.
     */
    int getRint32ValueCount();
    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @param index The index of the element to return.
     * @return The rint32Value at the given index.
     */
    int getRint32Value(int index);

    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @return A list containing the rboolValue.
     */
    java.util.List<java.lang.Boolean> getRboolValueList();
    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @return The count of rboolValue.
     */
    int getRboolValueCount();
    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @param index The index of the element to return.
     * @return The rboolValue at the given index.
     */
    boolean getRboolValue(int index);

    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @return A list containing the rint64Value.
     */
    java.util.List<java.lang.Long> getRint64ValueList();
    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @return The count of rint64Value.
     */
    int getRint64ValueCount();
    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @param index The index of the element to return.
     * @return The rint64Value at the given index.
     */
    long getRint64Value(int index);

    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @return A list containing the rfloatValue.
     */
    java.util.List<java.lang.Float> getRfloatValueList();
    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @return The count of rfloatValue.
     */
    int getRfloatValueCount();
    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @param index The index of the element to return.
     * @return The rfloatValue at the given index.
     */
    float getRfloatValue(int index);

    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @return A list containing the rdoubleValue.
     */
    java.util.List<java.lang.Double> getRdoubleValueList();
    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @return The count of rdoubleValue.
     */
    int getRdoubleValueCount();
    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @param index The index of the element to return.
     * @return The rdoubleValue at the given index.
     */
    double getRdoubleValue(int index);

    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @return A list containing the rbytesValue.
     */
    java.util.List<com.google.protobuf.ByteString> getRbytesValueList();
    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @return The count of rbytesValue.
     */
    int getRbytesValueCount();
    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @param index The index of the element to return.
     * @return The rbytesValue at the given index.
     */
    com.google.protobuf.ByteString getRbytesValue(int index);

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return A list containing the rnestedEnum.
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum> getRnestedEnumList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return The count of rnestedEnum.
     */
    int getRnestedEnumCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @param index The index of the element to return.
     * @return The rnestedEnum at the given index.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum getRnestedEnum(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return A list containing the enum numeric values on the wire for rnestedEnum.
     */
    java.util.List<java.lang.Integer>
    getRnestedEnumValueList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of rnestedEnum at the given index.
     */
    int getRnestedEnumValue(int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated}
   */
  public static final class SimpleMessageRepeated extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated)
      SimpleMessageRepeatedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessageRepeated.newBuilder() to construct.
    private SimpleMessageRepeated(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessageRepeated() {
      key_ = "";
      value_ = "";
      rstringValue_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      rint32Value_ = emptyIntList();
      rboolValue_ = emptyBooleanList();
      rint64Value_ = emptyLongList();
      rfloatValue_ = emptyFloatList();
      rdoubleValue_ = emptyDoubleList();
      rbytesValue_ = java.util.Collections.emptyList();
      rnestedEnum_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleMessageRepeated();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NESTED_NOTHING = 0;</code>
       */
      NESTED_NOTHING(0),
      /**
       * <code>NESTED_FIRST = 1;</code>
       */
      NESTED_FIRST(1),
      /**
       * <code>NESTED_SECOND = 2;</code>
       */
      NESTED_SECOND(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NESTED_NOTHING = 0;</code>
       */
      public static final int NESTED_NOTHING_VALUE = 0;
      /**
       * <code>NESTED_FIRST = 1;</code>
       */
      public static final int NESTED_FIRST_VALUE = 1;
      /**
       * <code>NESTED_SECOND = 2;</code>
       */
      public static final int NESTED_SECOND_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return NESTED_NOTHING;
          case 1: return NESTED_FIRST;
          case 2: return NESTED_SECOND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.getDescriptor().getEnumTypes().get(0);
      }

      private static final NestedEnum[] VALUES = values();

      public static NestedEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum)
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object value_ = "";
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RSTRING_VALUE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList rstringValue_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @return A list containing the rstringValue.
     */
    public com.google.protobuf.ProtocolStringList
        getRstringValueList() {
      return rstringValue_;
    }
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @return The count of rstringValue.
     */
    public int getRstringValueCount() {
      return rstringValue_.size();
    }
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @param index The index of the element to return.
     * @return The rstringValue at the given index.
     */
    public java.lang.String getRstringValue(int index) {
      return rstringValue_.get(index);
    }
    /**
     * <code>repeated string rstring_value = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rstringValue at the given index.
     */
    public com.google.protobuf.ByteString
        getRstringValueBytes(int index) {
      return rstringValue_.getByteString(index);
    }

    public static final int RINT32_VALUE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList rint32Value_;
    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @return A list containing the rint32Value.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRint32ValueList() {
      return rint32Value_;
    }
    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @return The count of rint32Value.
     */
    public int getRint32ValueCount() {
      return rint32Value_.size();
    }
    /**
     * <code>repeated int32 rint32_value = 4;</code>
     * @param index The index of the element to return.
     * @return The rint32Value at the given index.
     */
    public int getRint32Value(int index) {
      return rint32Value_.getInt(index);
    }
    private int rint32ValueMemoizedSerializedSize = -1;

    public static final int RBOOL_VALUE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList rboolValue_;
    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @return A list containing the rboolValue.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getRboolValueList() {
      return rboolValue_;
    }
    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @return The count of rboolValue.
     */
    public int getRboolValueCount() {
      return rboolValue_.size();
    }
    /**
     * <code>repeated bool rbool_value = 5;</code>
     * @param index The index of the element to return.
     * @return The rboolValue at the given index.
     */
    public boolean getRboolValue(int index) {
      return rboolValue_.getBoolean(index);
    }
    private int rboolValueMemoizedSerializedSize = -1;

    public static final int RINT64_VALUE_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList rint64Value_;
    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @return A list containing the rint64Value.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRint64ValueList() {
      return rint64Value_;
    }
    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @return The count of rint64Value.
     */
    public int getRint64ValueCount() {
      return rint64Value_.size();
    }
    /**
     * <code>repeated int64 rint64_value = 6;</code>
     * @param index The index of the element to return.
     * @return The rint64Value at the given index.
     */
    public long getRint64Value(int index) {
      return rint64Value_.getLong(index);
    }
    private int rint64ValueMemoizedSerializedSize = -1;

    public static final int RFLOAT_VALUE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList rfloatValue_;
    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @return A list containing the rfloatValue.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getRfloatValueList() {
      return rfloatValue_;
    }
    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @return The count of rfloatValue.
     */
    public int getRfloatValueCount() {
      return rfloatValue_.size();
    }
    /**
     * <code>repeated float rfloat_value = 7;</code>
     * @param index The index of the element to return.
     * @return The rfloatValue at the given index.
     */
    public float getRfloatValue(int index) {
      return rfloatValue_.getFloat(index);
    }
    private int rfloatValueMemoizedSerializedSize = -1;

    public static final int RDOUBLE_VALUE_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList rdoubleValue_;
    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @return A list containing the rdoubleValue.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getRdoubleValueList() {
      return rdoubleValue_;
    }
    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @return The count of rdoubleValue.
     */
    public int getRdoubleValueCount() {
      return rdoubleValue_.size();
    }
    /**
     * <code>repeated double rdouble_value = 8;</code>
     * @param index The index of the element to return.
     * @return The rdoubleValue at the given index.
     */
    public double getRdoubleValue(int index) {
      return rdoubleValue_.getDouble(index);
    }
    private int rdoubleValueMemoizedSerializedSize = -1;

    public static final int RBYTES_VALUE_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private java.util.List<com.google.protobuf.ByteString> rbytesValue_;
    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @return A list containing the rbytesValue.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getRbytesValueList() {
      return rbytesValue_;
    }
    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @return The count of rbytesValue.
     */
    public int getRbytesValueCount() {
      return rbytesValue_.size();
    }
    /**
     * <code>repeated bytes rbytes_value = 9;</code>
     * @param index The index of the element to return.
     * @return The rbytesValue at the given index.
     */
    public com.google.protobuf.ByteString getRbytesValue(int index) {
      return rbytesValue_.get(index);
    }

    public static final int RNESTED_ENUM_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> rnestedEnum_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum> rnestedEnum_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum>() {
              public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum convert(java.lang.Integer from) {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum.forNumber(from);
                return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return A list containing the rnestedEnum.
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum> getRnestedEnumList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum>(rnestedEnum_, rnestedEnum_converter_);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return The count of rnestedEnum.
     */
    @java.lang.Override
    public int getRnestedEnumCount() {
      return rnestedEnum_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @param index The index of the element to return.
     * @return The rnestedEnum at the given index.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum getRnestedEnum(int index) {
      return rnestedEnum_converter_.convert(rnestedEnum_.get(index));
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @return A list containing the enum numeric values on the wire for rnestedEnum.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getRnestedEnumValueList() {
      return rnestedEnum_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of rnestedEnum at the given index.
     */
    @java.lang.Override
    public int getRnestedEnumValue(int index) {
      return rnestedEnum_.get(index);
    }
    private int rnestedEnumMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      for (int i = 0; i < rstringValue_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, rstringValue_.getRaw(i));
      }
      if (getRint32ValueList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(rint32ValueMemoizedSerializedSize);
      }
      for (int i = 0; i < rint32Value_.size(); i++) {
        output.writeInt32NoTag(rint32Value_.getInt(i));
      }
      if (getRboolValueList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(rboolValueMemoizedSerializedSize);
      }
      for (int i = 0; i < rboolValue_.size(); i++) {
        output.writeBoolNoTag(rboolValue_.getBoolean(i));
      }
      if (getRint64ValueList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(rint64ValueMemoizedSerializedSize);
      }
      for (int i = 0; i < rint64Value_.size(); i++) {
        output.writeInt64NoTag(rint64Value_.getLong(i));
      }
      if (getRfloatValueList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(rfloatValueMemoizedSerializedSize);
      }
      for (int i = 0; i < rfloatValue_.size(); i++) {
        output.writeFloatNoTag(rfloatValue_.getFloat(i));
      }
      if (getRdoubleValueList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(rdoubleValueMemoizedSerializedSize);
      }
      for (int i = 0; i < rdoubleValue_.size(); i++) {
        output.writeDoubleNoTag(rdoubleValue_.getDouble(i));
      }
      for (int i = 0; i < rbytesValue_.size(); i++) {
        output.writeBytes(9, rbytesValue_.get(i));
      }
      if (getRnestedEnumList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(rnestedEnumMemoizedSerializedSize);
      }
      for (int i = 0; i < rnestedEnum_.size(); i++) {
        output.writeEnumNoTag(rnestedEnum_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rstringValue_.size(); i++) {
          dataSize += computeStringSizeNoTag(rstringValue_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRstringValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rint32Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rint32Value_.getInt(i));
        }
        size += dataSize;
        if (!getRint32ValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rint32ValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getRboolValueList().size();
        size += dataSize;
        if (!getRboolValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rboolValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rint64Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(rint64Value_.getLong(i));
        }
        size += dataSize;
        if (!getRint64ValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rint64ValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRfloatValueList().size();
        size += dataSize;
        if (!getRfloatValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rfloatValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRdoubleValueList().size();
        size += dataSize;
        if (!getRdoubleValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rdoubleValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rbytesValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(rbytesValue_.get(i));
        }
        size += dataSize;
        size += 1 * getRbytesValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rnestedEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(rnestedEnum_.get(i));
        }
        size += dataSize;
        if (!getRnestedEnumList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }rnestedEnumMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!getRstringValueList()
          .equals(other.getRstringValueList())) return false;
      if (!getRint32ValueList()
          .equals(other.getRint32ValueList())) return false;
      if (!getRboolValueList()
          .equals(other.getRboolValueList())) return false;
      if (!getRint64ValueList()
          .equals(other.getRint64ValueList())) return false;
      if (!getRfloatValueList()
          .equals(other.getRfloatValueList())) return false;
      if (!getRdoubleValueList()
          .equals(other.getRdoubleValueList())) return false;
      if (!getRbytesValueList()
          .equals(other.getRbytesValueList())) return false;
      if (!rnestedEnum_.equals(other.rnestedEnum_)) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      if (getRstringValueCount() > 0) {
        hash = (37 * hash) + RSTRING_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRstringValueList().hashCode();
      }
      if (getRint32ValueCount() > 0) {
        hash = (37 * hash) + RINT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRint32ValueList().hashCode();
      }
      if (getRboolValueCount() > 0) {
        hash = (37 * hash) + RBOOL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRboolValueList().hashCode();
      }
      if (getRint64ValueCount() > 0) {
        hash = (37 * hash) + RINT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRint64ValueList().hashCode();
      }
      if (getRfloatValueCount() > 0) {
        hash = (37 * hash) + RFLOAT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRfloatValueList().hashCode();
      }
      if (getRdoubleValueCount() > 0) {
        hash = (37 * hash) + RDOUBLE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRdoubleValueList().hashCode();
      }
      if (getRbytesValueCount() > 0) {
        hash = (37 * hash) + RBYTES_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRbytesValueList().hashCode();
      }
      if (getRnestedEnumCount() > 0) {
        hash = (37 * hash) + RNESTED_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + rnestedEnum_.hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeatedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = "";
        rstringValue_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        rint32Value_ = emptyIntList();
        rboolValue_ = emptyBooleanList();
        rint64Value_ = emptyLongList();
        rfloatValue_ = emptyFloatList();
        rdoubleValue_ = emptyDoubleList();
        rbytesValue_ = java.util.Collections.emptyList();
        rnestedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated result) {
        if (((bitField0_ & 0x00000008) != 0)) {
          rint32Value_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.rint32Value_ = rint32Value_;
        if (((bitField0_ & 0x00000010) != 0)) {
          rboolValue_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.rboolValue_ = rboolValue_;
        if (((bitField0_ & 0x00000020) != 0)) {
          rint64Value_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.rint64Value_ = rint64Value_;
        if (((bitField0_ & 0x00000040) != 0)) {
          rfloatValue_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.rfloatValue_ = rfloatValue_;
        if (((bitField0_ & 0x00000080) != 0)) {
          rdoubleValue_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.rdoubleValue_ = rdoubleValue_;
        if (((bitField0_ & 0x00000100) != 0)) {
          rbytesValue_ = java.util.Collections.unmodifiableList(rbytesValue_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.rbytesValue_ = rbytesValue_;
        if (((bitField0_ & 0x00000200) != 0)) {
          rnestedEnum_ = java.util.Collections.unmodifiableList(rnestedEnum_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.rnestedEnum_ = rnestedEnum_;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          rstringValue_.makeImmutable();
          result.rstringValue_ = rstringValue_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.rstringValue_.isEmpty()) {
          if (rstringValue_.isEmpty()) {
            rstringValue_ = other.rstringValue_;
            bitField0_ |= 0x00000004;
          } else {
            ensureRstringValueIsMutable();
            rstringValue_.addAll(other.rstringValue_);
          }
          onChanged();
        }
        if (!other.rint32Value_.isEmpty()) {
          if (rint32Value_.isEmpty()) {
            rint32Value_ = other.rint32Value_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRint32ValueIsMutable();
            rint32Value_.addAll(other.rint32Value_);
          }
          onChanged();
        }
        if (!other.rboolValue_.isEmpty()) {
          if (rboolValue_.isEmpty()) {
            rboolValue_ = other.rboolValue_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRboolValueIsMutable();
            rboolValue_.addAll(other.rboolValue_);
          }
          onChanged();
        }
        if (!other.rint64Value_.isEmpty()) {
          if (rint64Value_.isEmpty()) {
            rint64Value_ = other.rint64Value_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRint64ValueIsMutable();
            rint64Value_.addAll(other.rint64Value_);
          }
          onChanged();
        }
        if (!other.rfloatValue_.isEmpty()) {
          if (rfloatValue_.isEmpty()) {
            rfloatValue_ = other.rfloatValue_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRfloatValueIsMutable();
            rfloatValue_.addAll(other.rfloatValue_);
          }
          onChanged();
        }
        if (!other.rdoubleValue_.isEmpty()) {
          if (rdoubleValue_.isEmpty()) {
            rdoubleValue_ = other.rdoubleValue_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRdoubleValueIsMutable();
            rdoubleValue_.addAll(other.rdoubleValue_);
          }
          onChanged();
        }
        if (!other.rbytesValue_.isEmpty()) {
          if (rbytesValue_.isEmpty()) {
            rbytesValue_ = other.rbytesValue_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRbytesValueIsMutable();
            rbytesValue_.addAll(other.rbytesValue_);
          }
          onChanged();
        }
        if (!other.rnestedEnum_.isEmpty()) {
          if (rnestedEnum_.isEmpty()) {
            rnestedEnum_ = other.rnestedEnum_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRnestedEnumIsMutable();
            rnestedEnum_.addAll(other.rnestedEnum_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                value_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureRstringValueIsMutable();
                rstringValue_.add(s);
                break;
              } // case 26
              case 32: {
                int v = input.readInt32();
                ensureRint32ValueIsMutable();
                rint32Value_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRint32ValueIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rint32Value_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                boolean v = input.readBool();
                ensureRboolValueIsMutable();
                rboolValue_.addBoolean(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRboolValueIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rboolValue_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                long v = input.readInt64();
                ensureRint64ValueIsMutable();
                rint64Value_.addLong(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRint64ValueIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rint64Value_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 61: {
                float v = input.readFloat();
                ensureRfloatValueIsMutable();
                rfloatValue_.addFloat(v);
                break;
              } // case 61
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRfloatValueIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rfloatValue_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 58
              case 65: {
                double v = input.readDouble();
                ensureRdoubleValueIsMutable();
                rdoubleValue_.addDouble(v);
                break;
              } // case 65
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRdoubleValueIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rdoubleValue_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 66
              case 74: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureRbytesValueIsMutable();
                rbytesValue_.add(v);
                break;
              } // case 74
              case 80: {
                int tmpRaw = input.readEnum();
                ensureRnestedEnumIsMutable();
                rnestedEnum_.add(tmpRaw);
                break;
              } // case 80
              case 82: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureRnestedEnumIsMutable();
                  rnestedEnum_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 82
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        value_ = getDefaultInstance().getValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList rstringValue_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureRstringValueIsMutable() {
        if (!rstringValue_.isModifiable()) {
          rstringValue_ = new com.google.protobuf.LazyStringArrayList(rstringValue_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @return A list containing the rstringValue.
       */
      public com.google.protobuf.ProtocolStringList
          getRstringValueList() {
        rstringValue_.makeImmutable();
        return rstringValue_;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @return The count of rstringValue.
       */
      public int getRstringValueCount() {
        return rstringValue_.size();
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param index The index of the element to return.
       * @return The rstringValue at the given index.
       */
      public java.lang.String getRstringValue(int index) {
        return rstringValue_.get(index);
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rstringValue at the given index.
       */
      public com.google.protobuf.ByteString
          getRstringValueBytes(int index) {
        return rstringValue_.getByteString(index);
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param index The index to set the value at.
       * @param value The rstringValue to set.
       * @return This builder for chaining.
       */
      public Builder setRstringValue(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRstringValueIsMutable();
        rstringValue_.set(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param value The rstringValue to add.
       * @return This builder for chaining.
       */
      public Builder addRstringValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRstringValueIsMutable();
        rstringValue_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param values The rstringValue to add.
       * @return This builder for chaining.
       */
      public Builder addAllRstringValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureRstringValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rstringValue_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRstringValue() {
        rstringValue_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rstring_value = 3;</code>
       * @param value The bytes of the rstringValue to add.
       * @return This builder for chaining.
       */
      public Builder addRstringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureRstringValueIsMutable();
        rstringValue_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rint32Value_ = emptyIntList();
      private void ensureRint32ValueIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          rint32Value_ = mutableCopy(rint32Value_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @return A list containing the rint32Value.
       */
      public java.util.List<java.lang.Integer>
          getRint32ValueList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(rint32Value_) : rint32Value_;
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @return The count of rint32Value.
       */
      public int getRint32ValueCount() {
        return rint32Value_.size();
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @param index The index of the element to return.
       * @return The rint32Value at the given index.
       */
      public int getRint32Value(int index) {
        return rint32Value_.getInt(index);
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @param index The index to set the value at.
       * @param value The rint32Value to set.
       * @return This builder for chaining.
       */
      public Builder setRint32Value(
          int index, int value) {

        ensureRint32ValueIsMutable();
        rint32Value_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @param value The rint32Value to add.
       * @return This builder for chaining.
       */
      public Builder addRint32Value(int value) {

        ensureRint32ValueIsMutable();
        rint32Value_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @param values The rint32Value to add.
       * @return This builder for chaining.
       */
      public Builder addAllRint32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRint32ValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rint32Value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rint32_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRint32Value() {
        rint32Value_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList rboolValue_ = emptyBooleanList();
      private void ensureRboolValueIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          rboolValue_ = mutableCopy(rboolValue_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @return A list containing the rboolValue.
       */
      public java.util.List<java.lang.Boolean>
          getRboolValueList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(rboolValue_) : rboolValue_;
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @return The count of rboolValue.
       */
      public int getRboolValueCount() {
        return rboolValue_.size();
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @param index The index of the element to return.
       * @return The rboolValue at the given index.
       */
      public boolean getRboolValue(int index) {
        return rboolValue_.getBoolean(index);
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @param index The index to set the value at.
       * @param value The rboolValue to set.
       * @return This builder for chaining.
       */
      public Builder setRboolValue(
          int index, boolean value) {

        ensureRboolValueIsMutable();
        rboolValue_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @param value The rboolValue to add.
       * @return This builder for chaining.
       */
      public Builder addRboolValue(boolean value) {

        ensureRboolValueIsMutable();
        rboolValue_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @param values The rboolValue to add.
       * @return This builder for chaining.
       */
      public Builder addAllRboolValue(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureRboolValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rboolValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool rbool_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRboolValue() {
        rboolValue_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList rint64Value_ = emptyLongList();
      private void ensureRint64ValueIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          rint64Value_ = mutableCopy(rint64Value_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @return A list containing the rint64Value.
       */
      public java.util.List<java.lang.Long>
          getRint64ValueList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(rint64Value_) : rint64Value_;
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @return The count of rint64Value.
       */
      public int getRint64ValueCount() {
        return rint64Value_.size();
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @param index The index of the element to return.
       * @return The rint64Value at the given index.
       */
      public long getRint64Value(int index) {
        return rint64Value_.getLong(index);
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @param index The index to set the value at.
       * @param value The rint64Value to set.
       * @return This builder for chaining.
       */
      public Builder setRint64Value(
          int index, long value) {

        ensureRint64ValueIsMutable();
        rint64Value_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @param value The rint64Value to add.
       * @return This builder for chaining.
       */
      public Builder addRint64Value(long value) {

        ensureRint64ValueIsMutable();
        rint64Value_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @param values The rint64Value to add.
       * @return This builder for chaining.
       */
      public Builder addAllRint64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRint64ValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rint64Value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rint64_value = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRint64Value() {
        rint64Value_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList rfloatValue_ = emptyFloatList();
      private void ensureRfloatValueIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          rfloatValue_ = mutableCopy(rfloatValue_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @return A list containing the rfloatValue.
       */
      public java.util.List<java.lang.Float>
          getRfloatValueList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(rfloatValue_) : rfloatValue_;
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @return The count of rfloatValue.
       */
      public int getRfloatValueCount() {
        return rfloatValue_.size();
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @param index The index of the element to return.
       * @return The rfloatValue at the given index.
       */
      public float getRfloatValue(int index) {
        return rfloatValue_.getFloat(index);
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @param index The index to set the value at.
       * @param value The rfloatValue to set.
       * @return This builder for chaining.
       */
      public Builder setRfloatValue(
          int index, float value) {

        ensureRfloatValueIsMutable();
        rfloatValue_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @param value The rfloatValue to add.
       * @return This builder for chaining.
       */
      public Builder addRfloatValue(float value) {

        ensureRfloatValueIsMutable();
        rfloatValue_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @param values The rfloatValue to add.
       * @return This builder for chaining.
       */
      public Builder addAllRfloatValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRfloatValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rfloatValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float rfloat_value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRfloatValue() {
        rfloatValue_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList rdoubleValue_ = emptyDoubleList();
      private void ensureRdoubleValueIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          rdoubleValue_ = mutableCopy(rdoubleValue_);
          bitField0_ |= 0x00000080;
        }
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @return A list containing the rdoubleValue.
       */
      public java.util.List<java.lang.Double>
          getRdoubleValueList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(rdoubleValue_) : rdoubleValue_;
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @return The count of rdoubleValue.
       */
      public int getRdoubleValueCount() {
        return rdoubleValue_.size();
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @param index The index of the element to return.
       * @return The rdoubleValue at the given index.
       */
      public double getRdoubleValue(int index) {
        return rdoubleValue_.getDouble(index);
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @param index The index to set the value at.
       * @param value The rdoubleValue to set.
       * @return This builder for chaining.
       */
      public Builder setRdoubleValue(
          int index, double value) {

        ensureRdoubleValueIsMutable();
        rdoubleValue_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @param value The rdoubleValue to add.
       * @return This builder for chaining.
       */
      public Builder addRdoubleValue(double value) {

        ensureRdoubleValueIsMutable();
        rdoubleValue_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @param values The rdoubleValue to add.
       * @return This builder for chaining.
       */
      public Builder addAllRdoubleValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRdoubleValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rdoubleValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rdouble_value = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRdoubleValue() {
        rdoubleValue_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> rbytesValue_ = java.util.Collections.emptyList();
      private void ensureRbytesValueIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          rbytesValue_ = new java.util.ArrayList<com.google.protobuf.ByteString>(rbytesValue_);
          bitField0_ |= 0x00000100;
        }
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @return A list containing the rbytesValue.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRbytesValueList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(rbytesValue_) : rbytesValue_;
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @return The count of rbytesValue.
       */
      public int getRbytesValueCount() {
        return rbytesValue_.size();
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @param index The index of the element to return.
       * @return The rbytesValue at the given index.
       */
      public com.google.protobuf.ByteString getRbytesValue(int index) {
        return rbytesValue_.get(index);
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @param index The index to set the value at.
       * @param value The rbytesValue to set.
       * @return This builder for chaining.
       */
      public Builder setRbytesValue(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRbytesValueIsMutable();
        rbytesValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @param value The rbytesValue to add.
       * @return This builder for chaining.
       */
      public Builder addRbytesValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRbytesValueIsMutable();
        rbytesValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @param values The rbytesValue to add.
       * @return This builder for chaining.
       */
      public Builder addAllRbytesValue(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRbytesValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rbytesValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes rbytes_value = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRbytesValue() {
        rbytesValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> rnestedEnum_ =
        java.util.Collections.emptyList();
      private void ensureRnestedEnumIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          rnestedEnum_ = new java.util.ArrayList<java.lang.Integer>(rnestedEnum_);
          bitField0_ |= 0x00000200;
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @return A list containing the rnestedEnum.
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum> getRnestedEnumList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum>(rnestedEnum_, rnestedEnum_converter_);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @return The count of rnestedEnum.
       */
      public int getRnestedEnumCount() {
        return rnestedEnum_.size();
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param index The index of the element to return.
       * @return The rnestedEnum at the given index.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum getRnestedEnum(int index) {
        return rnestedEnum_converter_.convert(rnestedEnum_.get(index));
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param index The index to set the value at.
       * @param value The rnestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRnestedEnum(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRnestedEnumIsMutable();
        rnestedEnum_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param value The rnestedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addRnestedEnum(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRnestedEnumIsMutable();
        rnestedEnum_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param values The rnestedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRnestedEnum(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum> values) {
        ensureRnestedEnumIsMutable();
        for (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated.NestedEnum value : values) {
          rnestedEnum_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRnestedEnum() {
        rnestedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @return A list containing the enum numeric values on the wire for rnestedEnum.
       */
      public java.util.List<java.lang.Integer>
      getRnestedEnumValueList() {
        return java.util.Collections.unmodifiableList(rnestedEnum_);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of rnestedEnum at the given index.
       */
      public int getRnestedEnumValue(int index) {
        return rnestedEnum_.get(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for rnestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRnestedEnumValue(
          int index, int value) {
        ensureRnestedEnumIsMutable();
        rnestedEnum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param value The enum numeric value on the wire for rnestedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addRnestedEnumValue(int value) {
        ensureRnestedEnumIsMutable();
        rnestedEnum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated.NestedEnum rnested_enum = 10;</code>
       * @param values The enum numeric values on the wire for rnestedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRnestedEnumValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureRnestedEnumIsMutable();
        for (int value : values) {
          rnestedEnum_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageRepeated)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMessageRepeated>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMessageRepeated>() {
      @java.lang.Override
      public SimpleMessageRepeated parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleMessageRepeated> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessageRepeated> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageRepeated getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RepeatedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.RepeatedMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> 
        getBasicMessageList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getBasicMessage(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    int getBasicMessageCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder> 
        getBasicMessageOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder getBasicMessageOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.RepeatedMessage}
   */
  public static final class RepeatedMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.RepeatedMessage)
      RepeatedMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RepeatedMessage.newBuilder() to construct.
    private RepeatedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RepeatedMessage() {
      basicMessage_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RepeatedMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage.Builder.class);
    }

    public static final int BASIC_MESSAGE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> basicMessage_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> getBasicMessageList() {
      return basicMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder> 
        getBasicMessageOrBuilderList() {
      return basicMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    @java.lang.Override
    public int getBasicMessageCount() {
      return basicMessage_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getBasicMessage(int index) {
      return basicMessage_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder getBasicMessageOrBuilder(
        int index) {
      return basicMessage_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < basicMessage_.size(); i++) {
        output.writeMessage(1, basicMessage_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < basicMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, basicMessage_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage) obj;

      if (!getBasicMessageList()
          .equals(other.getBasicMessageList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBasicMessageCount() > 0) {
        hash = (37 * hash) + BASIC_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getBasicMessageList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.RepeatedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.RepeatedMessage)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (basicMessageBuilder_ == null) {
          basicMessage_ = java.util.Collections.emptyList();
        } else {
          basicMessage_ = null;
          basicMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage result) {
        if (basicMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            basicMessage_ = java.util.Collections.unmodifiableList(basicMessage_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.basicMessage_ = basicMessage_;
        } else {
          result.basicMessage_ = basicMessageBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage other) {
        if (other == getDefaultInstance()) return this;
        if (basicMessageBuilder_ == null) {
          if (!other.basicMessage_.isEmpty()) {
            if (basicMessage_.isEmpty()) {
              basicMessage_ = other.basicMessage_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBasicMessageIsMutable();
              basicMessage_.addAll(other.basicMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.basicMessage_.isEmpty()) {
            if (basicMessageBuilder_.isEmpty()) {
              basicMessageBuilder_.dispose();
              basicMessageBuilder_ = null;
              basicMessage_ = other.basicMessage_;
              bitField0_ = (bitField0_ & ~0x00000001);
              basicMessageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBasicMessageFieldBuilder() : null;
            } else {
              basicMessageBuilder_.addAllMessages(other.basicMessage_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage m =
                    input.readMessage(
                        org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.parser(),
                        extensionRegistry);
                if (basicMessageBuilder_ == null) {
                  ensureBasicMessageIsMutable();
                  basicMessage_.add(m);
                } else {
                  basicMessageBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> basicMessage_ =
        java.util.Collections.emptyList();
      private void ensureBasicMessageIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          basicMessage_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage>(basicMessage_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder> basicMessageBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> getBasicMessageList() {
        if (basicMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(basicMessage_);
        } else {
          return basicMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public int getBasicMessageCount() {
        if (basicMessageBuilder_ == null) {
          return basicMessage_.size();
        } else {
          return basicMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getBasicMessage(int index) {
        if (basicMessageBuilder_ == null) {
          return basicMessage_.get(index);
        } else {
          return basicMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder setBasicMessage(
          int index, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage value) {
        if (basicMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasicMessageIsMutable();
          basicMessage_.set(index, value);
          onChanged();
        } else {
          basicMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder setBasicMessage(
          int index, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder builderForValue) {
        if (basicMessageBuilder_ == null) {
          ensureBasicMessageIsMutable();
          basicMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          basicMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder addBasicMessage(org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage value) {
        if (basicMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasicMessageIsMutable();
          basicMessage_.add(value);
          onChanged();
        } else {
          basicMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder addBasicMessage(
          int index, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage value) {
        if (basicMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasicMessageIsMutable();
          basicMessage_.add(index, value);
          onChanged();
        } else {
          basicMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder addBasicMessage(
          org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder builderForValue) {
        if (basicMessageBuilder_ == null) {
          ensureBasicMessageIsMutable();
          basicMessage_.add(builderForValue.build());
          onChanged();
        } else {
          basicMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder addBasicMessage(
          int index, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder builderForValue) {
        if (basicMessageBuilder_ == null) {
          ensureBasicMessageIsMutable();
          basicMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          basicMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder addAllBasicMessage(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage> values) {
        if (basicMessageBuilder_ == null) {
          ensureBasicMessageIsMutable();
          addAll(
              values, basicMessage_);
          onChanged();
        } else {
          basicMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder clearBasicMessage() {
        if (basicMessageBuilder_ == null) {
          basicMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          basicMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public Builder removeBasicMessage(int index) {
        if (basicMessageBuilder_ == null) {
          ensureBasicMessageIsMutable();
          basicMessage_.remove(index);
          onChanged();
        } else {
          basicMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder getBasicMessageBuilder(
          int index) {
        return getBasicMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder getBasicMessageOrBuilder(
          int index) {
        if (basicMessageBuilder_ == null) {
          return basicMessage_.get(index);  } else {
          return basicMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder> 
           getBasicMessageOrBuilderList() {
        if (basicMessageBuilder_ != null) {
          return basicMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(basicMessage_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder addBasicMessageBuilder() {
        return getBasicMessageFieldBuilder().addBuilder(
            org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder addBasicMessageBuilder(
          int index) {
        return getBasicMessageFieldBuilder().addBuilder(
            index, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicMessage basic_message = 1;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder> 
           getBasicMessageBuilderList() {
        return getBasicMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder> 
          getBasicMessageFieldBuilder() {
        if (basicMessageBuilder_ == null) {
          basicMessageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder>(
                  basicMessage_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          basicMessage_ = null;
        }
        return basicMessageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.RepeatedMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.RepeatedMessage)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RepeatedMessage>
        PARSER = new com.google.protobuf.AbstractParser<RepeatedMessage>() {
      @java.lang.Override
      public RepeatedMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RepeatedMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RepeatedMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.RepeatedMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleMessageMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.SimpleMessageMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    int getStringMapdataCount();
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    boolean containsStringMapdata(
        java.lang.String key);
    /**
     * Use {@link #getStringMapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringMapdata();
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringMapdataMap();
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    /* nullable */
java.lang.String getStringMapdataOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    java.lang.String getStringMapdataOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    int getInt32MapdataCount();
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    boolean containsInt32Mapdata(
        int key);
    /**
     * Use {@link #getInt32MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32Mapdata();
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32MapdataMap();
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    int getInt32MapdataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    int getInt32MapdataOrThrow(
        int key);

    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    int getUint32MapdataCount();
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    boolean containsUint32Mapdata(
        int key);
    /**
     * Use {@link #getUint32MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32Mapdata();
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32MapdataMap();
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    int getUint32MapdataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    int getUint32MapdataOrThrow(
        int key);

    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    int getSint32MapdataCount();
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    boolean containsSint32Mapdata(
        int key);
    /**
     * Use {@link #getSint32MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSint32Mapdata();
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSint32MapdataMap();
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    int getSint32MapdataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    int getSint32MapdataOrThrow(
        int key);

    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    int getFloat32MapdataCount();
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    boolean containsFloat32Mapdata(
        int key);
    /**
     * Use {@link #getFloat32MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFloat32Mapdata();
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFloat32MapdataMap();
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    int getFloat32MapdataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    int getFloat32MapdataOrThrow(
        int key);

    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    int getSfixed32MapdataCount();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    boolean containsSfixed32Mapdata(
        int key);
    /**
     * Use {@link #getSfixed32MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSfixed32Mapdata();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSfixed32MapdataMap();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    int getSfixed32MapdataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    int getSfixed32MapdataOrThrow(
        int key);

    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    int getInt64MapdataCount();
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    boolean containsInt64Mapdata(
        long key);
    /**
     * Use {@link #getInt64MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getInt64Mapdata();
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getInt64MapdataMap();
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    long getInt64MapdataOrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    long getInt64MapdataOrThrow(
        long key);

    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    int getUint64MapdataCount();
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    boolean containsUint64Mapdata(
        long key);
    /**
     * Use {@link #getUint64MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getUint64Mapdata();
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getUint64MapdataMap();
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    long getUint64MapdataOrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    long getUint64MapdataOrThrow(
        long key);

    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    int getSint64MapdataCount();
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    boolean containsSint64Mapdata(
        long key);
    /**
     * Use {@link #getSint64MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getSint64Mapdata();
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getSint64MapdataMap();
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    long getSint64MapdataOrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    long getSint64MapdataOrThrow(
        long key);

    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    int getFixed64MapdataCount();
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    boolean containsFixed64Mapdata(
        long key);
    /**
     * Use {@link #getFixed64MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getFixed64Mapdata();
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getFixed64MapdataMap();
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    long getFixed64MapdataOrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    long getFixed64MapdataOrThrow(
        long key);

    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    int getSfixed64MapdataCount();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    boolean containsSfixed64Mapdata(
        long key);
    /**
     * Use {@link #getSfixed64MapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getSfixed64Mapdata();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getSfixed64MapdataMap();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    long getSfixed64MapdataOrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    long getSfixed64MapdataOrThrow(
        long key);

    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    int getDoubleMapdataCount();
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    boolean containsDoubleMapdata(
        java.lang.String key);
    /**
     * Use {@link #getDoubleMapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleMapdata();
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleMapdataMap();
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    double getDoubleMapdataOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    double getDoubleMapdataOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    int getFloatMapdataCount();
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    boolean containsFloatMapdata(
        java.lang.String key);
    /**
     * Use {@link #getFloatMapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatMapdata();
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatMapdataMap();
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    float getFloatMapdataOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    float getFloatMapdataOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    int getBoolMapdataCount();
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    boolean containsBoolMapdata(
        boolean key);
    /**
     * Use {@link #getBoolMapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getBoolMapdata();
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getBoolMapdataMap();
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    boolean getBoolMapdataOrDefault(
        boolean key,
        boolean defaultValue);
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    boolean getBoolMapdataOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    int getBytesMapdataCount();
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    boolean containsBytesMapdata(
        java.lang.String key);
    /**
     * Use {@link #getBytesMapdataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesMapdata();
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesMapdataMap();
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    /* nullable */
com.google.protobuf.ByteString getBytesMapdataOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    com.google.protobuf.ByteString getBytesMapdataOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageMap}
   */
  public static final class SimpleMessageMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageMap)
      SimpleMessageMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessageMap.newBuilder() to construct.
    private SimpleMessageMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessageMap() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleMessageMap();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetStringMapdata();
        case 4:
          return internalGetInt32Mapdata();
        case 5:
          return internalGetUint32Mapdata();
        case 6:
          return internalGetSint32Mapdata();
        case 7:
          return internalGetFloat32Mapdata();
        case 8:
          return internalGetSfixed32Mapdata();
        case 9:
          return internalGetInt64Mapdata();
        case 10:
          return internalGetUint64Mapdata();
        case 11:
          return internalGetSint64Mapdata();
        case 12:
          return internalGetFixed64Mapdata();
        case 13:
          return internalGetSfixed64Mapdata();
        case 14:
          return internalGetDoubleMapdata();
        case 15:
          return internalGetFloatMapdata();
        case 16:
          return internalGetBoolMapdata();
        case 17:
          return internalGetBytesMapdata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object value_ = "";
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRING_MAPDATA_FIELD_NUMBER = 3;
    private static final class StringMapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringMapdata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringMapdata() {
      if (stringMapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringMapdataDefaultEntryHolder.defaultEntry);
      }
      return stringMapdata_;
    }
    public int getStringMapdataCount() {
      return internalGetStringMapdata().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    @java.lang.Override
    public boolean containsStringMapdata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStringMapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringMapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringMapdata() {
      return getStringMapdataMap();
    }
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getStringMapdataMap() {
      return internalGetStringMapdata().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getStringMapdataOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringMapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getStringMapdataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringMapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_MAPDATA_FIELD_NUMBER = 4;
    private static final class Int32MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32Mapdata_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32Mapdata() {
      if (int32Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32MapdataDefaultEntryHolder.defaultEntry);
      }
      return int32Mapdata_;
    }
    public int getInt32MapdataCount() {
      return internalGetInt32Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    @java.lang.Override
    public boolean containsInt32Mapdata(
        int key) {

      return internalGetInt32Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32Mapdata() {
      return getInt32MapdataMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32MapdataMap() {
      return internalGetInt32Mapdata().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    @java.lang.Override
    public int getInt32MapdataOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
     */
    @java.lang.Override
    public int getInt32MapdataOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UINT32_MAPDATA_FIELD_NUMBER = 5;
    private static final class Uint32MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> uint32Mapdata_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUint32Mapdata() {
      if (uint32Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint32MapdataDefaultEntryHolder.defaultEntry);
      }
      return uint32Mapdata_;
    }
    public int getUint32MapdataCount() {
      return internalGetUint32Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    @java.lang.Override
    public boolean containsUint32Mapdata(
        int key) {

      return internalGetUint32Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint32MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32Mapdata() {
      return getUint32MapdataMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32MapdataMap() {
      return internalGetUint32Mapdata().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    @java.lang.Override
    public int getUint32MapdataOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
     */
    @java.lang.Override
    public int getUint32MapdataOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SINT32_MAPDATA_FIELD_NUMBER = 6;
    private static final class Sint32MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> sint32Mapdata_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetSint32Mapdata() {
      if (sint32Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sint32MapdataDefaultEntryHolder.defaultEntry);
      }
      return sint32Mapdata_;
    }
    public int getSint32MapdataCount() {
      return internalGetSint32Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    @java.lang.Override
    public boolean containsSint32Mapdata(
        int key) {

      return internalGetSint32Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSint32MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32Mapdata() {
      return getSint32MapdataMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32MapdataMap() {
      return internalGetSint32Mapdata().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    @java.lang.Override
    public int getSint32MapdataOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSint32Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
     */
    @java.lang.Override
    public int getSint32MapdataOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSint32Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOAT32_MAPDATA_FIELD_NUMBER = 7;
    private static final class Float32MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> float32Mapdata_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetFloat32Mapdata() {
      if (float32Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Float32MapdataDefaultEntryHolder.defaultEntry);
      }
      return float32Mapdata_;
    }
    public int getFloat32MapdataCount() {
      return internalGetFloat32Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    @java.lang.Override
    public boolean containsFloat32Mapdata(
        int key) {

      return internalGetFloat32Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloat32MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getFloat32Mapdata() {
      return getFloat32MapdataMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getFloat32MapdataMap() {
      return internalGetFloat32Mapdata().getMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    @java.lang.Override
    public int getFloat32MapdataOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFloat32Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
     */
    @java.lang.Override
    public int getFloat32MapdataOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFloat32Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SFIXED32_MAPDATA_FIELD_NUMBER = 8;
    private static final class Sfixed32MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> sfixed32Mapdata_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetSfixed32Mapdata() {
      if (sfixed32Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sfixed32MapdataDefaultEntryHolder.defaultEntry);
      }
      return sfixed32Mapdata_;
    }
    public int getSfixed32MapdataCount() {
      return internalGetSfixed32Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    @java.lang.Override
    public boolean containsSfixed32Mapdata(
        int key) {

      return internalGetSfixed32Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSfixed32MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32Mapdata() {
      return getSfixed32MapdataMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32MapdataMap() {
      return internalGetSfixed32Mapdata().getMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    @java.lang.Override
    public int getSfixed32MapdataOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSfixed32Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
     */
    @java.lang.Override
    public int getSfixed32MapdataOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSfixed32Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT64_MAPDATA_FIELD_NUMBER = 9;
    private static final class Int64MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> int64Mapdata_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetInt64Mapdata() {
      if (int64Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int64MapdataDefaultEntryHolder.defaultEntry);
      }
      return int64Mapdata_;
    }
    public int getInt64MapdataCount() {
      return internalGetInt64Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    @java.lang.Override
    public boolean containsInt64Mapdata(
        long key) {

      return internalGetInt64Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt64MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getInt64Mapdata() {
      return getInt64MapdataMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, java.lang.Long> getInt64MapdataMap() {
      return internalGetInt64Mapdata().getMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    @java.lang.Override
    public long getInt64MapdataOrDefault(
        long key,
        long defaultValue) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetInt64Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
     */
    @java.lang.Override
    public long getInt64MapdataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetInt64Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UINT64_MAPDATA_FIELD_NUMBER = 10;
    private static final class Uint64MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> uint64Mapdata_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetUint64Mapdata() {
      if (uint64Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint64MapdataDefaultEntryHolder.defaultEntry);
      }
      return uint64Mapdata_;
    }
    public int getUint64MapdataCount() {
      return internalGetUint64Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    @java.lang.Override
    public boolean containsUint64Mapdata(
        long key) {

      return internalGetUint64Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint64MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getUint64Mapdata() {
      return getUint64MapdataMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, java.lang.Long> getUint64MapdataMap() {
      return internalGetUint64Mapdata().getMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    @java.lang.Override
    public long getUint64MapdataOrDefault(
        long key,
        long defaultValue) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetUint64Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
     */
    @java.lang.Override
    public long getUint64MapdataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetUint64Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SINT64_MAPDATA_FIELD_NUMBER = 11;
    private static final class Sint64MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> sint64Mapdata_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetSint64Mapdata() {
      if (sint64Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sint64MapdataDefaultEntryHolder.defaultEntry);
      }
      return sint64Mapdata_;
    }
    public int getSint64MapdataCount() {
      return internalGetSint64Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    @java.lang.Override
    public boolean containsSint64Mapdata(
        long key) {

      return internalGetSint64Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSint64MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getSint64Mapdata() {
      return getSint64MapdataMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, java.lang.Long> getSint64MapdataMap() {
      return internalGetSint64Mapdata().getMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    @java.lang.Override
    public long getSint64MapdataOrDefault(
        long key,
        long defaultValue) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetSint64Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
     */
    @java.lang.Override
    public long getSint64MapdataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetSint64Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FIXED64_MAPDATA_FIELD_NUMBER = 12;
    private static final class Fixed64MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> fixed64Mapdata_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetFixed64Mapdata() {
      if (fixed64Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Fixed64MapdataDefaultEntryHolder.defaultEntry);
      }
      return fixed64Mapdata_;
    }
    public int getFixed64MapdataCount() {
      return internalGetFixed64Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    @java.lang.Override
    public boolean containsFixed64Mapdata(
        long key) {

      return internalGetFixed64Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFixed64MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getFixed64Mapdata() {
      return getFixed64MapdataMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, java.lang.Long> getFixed64MapdataMap() {
      return internalGetFixed64Mapdata().getMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    @java.lang.Override
    public long getFixed64MapdataOrDefault(
        long key,
        long defaultValue) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetFixed64Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
     */
    @java.lang.Override
    public long getFixed64MapdataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetFixed64Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SFIXED64_MAPDATA_FIELD_NUMBER = 13;
    private static final class Sfixed64MapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> sfixed64Mapdata_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetSfixed64Mapdata() {
      if (sfixed64Mapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sfixed64MapdataDefaultEntryHolder.defaultEntry);
      }
      return sfixed64Mapdata_;
    }
    public int getSfixed64MapdataCount() {
      return internalGetSfixed64Mapdata().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    @java.lang.Override
    public boolean containsSfixed64Mapdata(
        long key) {

      return internalGetSfixed64Mapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSfixed64MapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getSfixed64Mapdata() {
      return getSfixed64MapdataMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, java.lang.Long> getSfixed64MapdataMap() {
      return internalGetSfixed64Mapdata().getMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    @java.lang.Override
    public long getSfixed64MapdataOrDefault(
        long key,
        long defaultValue) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetSfixed64Mapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
     */
    @java.lang.Override
    public long getSfixed64MapdataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetSfixed64Mapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DOUBLE_MAPDATA_FIELD_NUMBER = 14;
    private static final class DoubleMapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleMapdata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetDoubleMapdata() {
      if (doubleMapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleMapdataDefaultEntryHolder.defaultEntry);
      }
      return doubleMapdata_;
    }
    public int getDoubleMapdataCount() {
      return internalGetDoubleMapdata().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    @java.lang.Override
    public boolean containsDoubleMapdata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetDoubleMapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleMapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleMapdata() {
      return getDoubleMapdataMap();
    }
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleMapdataMap() {
      return internalGetDoubleMapdata().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    @java.lang.Override
    public double getDoubleMapdataOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleMapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
     */
    @java.lang.Override
    public double getDoubleMapdataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleMapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOAT_MAPDATA_FIELD_NUMBER = 15;
    private static final class FloatMapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> floatMapdata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetFloatMapdata() {
      if (floatMapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FloatMapdataDefaultEntryHolder.defaultEntry);
      }
      return floatMapdata_;
    }
    public int getFloatMapdataCount() {
      return internalGetFloatMapdata().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    @java.lang.Override
    public boolean containsFloatMapdata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetFloatMapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloatMapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getFloatMapdata() {
      return getFloatMapdataMap();
    }
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Float> getFloatMapdataMap() {
      return internalGetFloatMapdata().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    @java.lang.Override
    public float getFloatMapdataOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatMapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
     */
    @java.lang.Override
    public float getFloatMapdataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatMapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOL_MAPDATA_FIELD_NUMBER = 16;
    private static final class BoolMapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Boolean>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Boolean> boolMapdata_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
    internalGetBoolMapdata() {
      if (boolMapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BoolMapdataDefaultEntryHolder.defaultEntry);
      }
      return boolMapdata_;
    }
    public int getBoolMapdataCount() {
      return internalGetBoolMapdata().getMap().size();
    }
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    @java.lang.Override
    public boolean containsBoolMapdata(
        boolean key) {

      return internalGetBoolMapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBoolMapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getBoolMapdata() {
      return getBoolMapdataMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getBoolMapdataMap() {
      return internalGetBoolMapdata().getMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    @java.lang.Override
    public boolean getBoolMapdataOrDefault(
        boolean key,
        boolean defaultValue) {

      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetBoolMapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
     */
    @java.lang.Override
    public boolean getBoolMapdataOrThrow(
        boolean key) {

      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetBoolMapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BYTES_MAPDATA_FIELD_NUMBER = 17;
    private static final class BytesMapdataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> bytesMapdata_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetBytesMapdata() {
      if (bytesMapdata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BytesMapdataDefaultEntryHolder.defaultEntry);
      }
      return bytesMapdata_;
    }
    public int getBytesMapdataCount() {
      return internalGetBytesMapdata().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    @java.lang.Override
    public boolean containsBytesMapdata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetBytesMapdata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBytesMapdataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesMapdata() {
      return getBytesMapdataMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesMapdataMap() {
      return internalGetBytesMapdata().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.ByteString getBytesMapdataOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesMapdata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesMapdataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesMapdata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringMapdata(),
          StringMapdataDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32Mapdata(),
          Int32MapdataDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUint32Mapdata(),
          Uint32MapdataDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSint32Mapdata(),
          Sint32MapdataDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFloat32Mapdata(),
          Float32MapdataDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSfixed32Mapdata(),
          Sfixed32MapdataDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetInt64Mapdata(),
          Int64MapdataDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetUint64Mapdata(),
          Uint64MapdataDefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetSint64Mapdata(),
          Sint64MapdataDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetFixed64Mapdata(),
          Fixed64MapdataDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetSfixed64Mapdata(),
          Sfixed64MapdataDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDoubleMapdata(),
          DoubleMapdataDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFloatMapdata(),
          FloatMapdataDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetBoolMapdata(),
          BoolMapdataDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBytesMapdata(),
          BytesMapdataDefaultEntryHolder.defaultEntry,
          17);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringMapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringMapdata__ = StringMapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, stringMapdata__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32Mapdata__ = Int32MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, int32Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUint32Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        uint32Mapdata__ = Uint32MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, uint32Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetSint32Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        sint32Mapdata__ = Sint32MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, sint32Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetFloat32Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        float32Mapdata__ = Float32MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, float32Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetSfixed32Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        sfixed32Mapdata__ = Sfixed32MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, sfixed32Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetInt64Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        int64Mapdata__ = Int64MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, int64Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetUint64Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        uint64Mapdata__ = Uint64MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, uint64Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetSint64Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        sint64Mapdata__ = Sint64MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, sint64Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetFixed64Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        fixed64Mapdata__ = Fixed64MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, fixed64Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetSfixed64Mapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        sfixed64Mapdata__ = Sfixed64MapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, sfixed64Mapdata__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetDoubleMapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        doubleMapdata__ = DoubleMapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, doubleMapdata__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetFloatMapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        floatMapdata__ = FloatMapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, floatMapdata__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Boolean> entry
           : internalGetBoolMapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
        boolMapdata__ = BoolMapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, boolMapdata__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetBytesMapdata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        bytesMapdata__ = BytesMapdataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, bytesMapdata__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!internalGetStringMapdata().equals(
          other.internalGetStringMapdata())) return false;
      if (!internalGetInt32Mapdata().equals(
          other.internalGetInt32Mapdata())) return false;
      if (!internalGetUint32Mapdata().equals(
          other.internalGetUint32Mapdata())) return false;
      if (!internalGetSint32Mapdata().equals(
          other.internalGetSint32Mapdata())) return false;
      if (!internalGetFloat32Mapdata().equals(
          other.internalGetFloat32Mapdata())) return false;
      if (!internalGetSfixed32Mapdata().equals(
          other.internalGetSfixed32Mapdata())) return false;
      if (!internalGetInt64Mapdata().equals(
          other.internalGetInt64Mapdata())) return false;
      if (!internalGetUint64Mapdata().equals(
          other.internalGetUint64Mapdata())) return false;
      if (!internalGetSint64Mapdata().equals(
          other.internalGetSint64Mapdata())) return false;
      if (!internalGetFixed64Mapdata().equals(
          other.internalGetFixed64Mapdata())) return false;
      if (!internalGetSfixed64Mapdata().equals(
          other.internalGetSfixed64Mapdata())) return false;
      if (!internalGetDoubleMapdata().equals(
          other.internalGetDoubleMapdata())) return false;
      if (!internalGetFloatMapdata().equals(
          other.internalGetFloatMapdata())) return false;
      if (!internalGetBoolMapdata().equals(
          other.internalGetBoolMapdata())) return false;
      if (!internalGetBytesMapdata().equals(
          other.internalGetBytesMapdata())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      if (!internalGetStringMapdata().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringMapdata().hashCode();
      }
      if (!internalGetInt32Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32Mapdata().hashCode();
      }
      if (!internalGetUint32Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + UINT32_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUint32Mapdata().hashCode();
      }
      if (!internalGetSint32Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + SINT32_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSint32Mapdata().hashCode();
      }
      if (!internalGetFloat32Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + FLOAT32_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloat32Mapdata().hashCode();
      }
      if (!internalGetSfixed32Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + SFIXED32_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSfixed32Mapdata().hashCode();
      }
      if (!internalGetInt64Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + INT64_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt64Mapdata().hashCode();
      }
      if (!internalGetUint64Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + UINT64_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUint64Mapdata().hashCode();
      }
      if (!internalGetSint64Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + SINT64_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSint64Mapdata().hashCode();
      }
      if (!internalGetFixed64Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + FIXED64_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFixed64Mapdata().hashCode();
      }
      if (!internalGetSfixed64Mapdata().getMap().isEmpty()) {
        hash = (37 * hash) + SFIXED64_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSfixed64Mapdata().hashCode();
      }
      if (!internalGetDoubleMapdata().getMap().isEmpty()) {
        hash = (37 * hash) + DOUBLE_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDoubleMapdata().hashCode();
      }
      if (!internalGetFloatMapdata().getMap().isEmpty()) {
        hash = (37 * hash) + FLOAT_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloatMapdata().hashCode();
      }
      if (!internalGetBoolMapdata().getMap().isEmpty()) {
        hash = (37 * hash) + BOOL_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBoolMapdata().hashCode();
      }
      if (!internalGetBytesMapdata().getMap().isEmpty()) {
        hash = (37 * hash) + BYTES_MAPDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBytesMapdata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageMap)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetStringMapdata();
          case 4:
            return internalGetInt32Mapdata();
          case 5:
            return internalGetUint32Mapdata();
          case 6:
            return internalGetSint32Mapdata();
          case 7:
            return internalGetFloat32Mapdata();
          case 8:
            return internalGetSfixed32Mapdata();
          case 9:
            return internalGetInt64Mapdata();
          case 10:
            return internalGetUint64Mapdata();
          case 11:
            return internalGetSint64Mapdata();
          case 12:
            return internalGetFixed64Mapdata();
          case 13:
            return internalGetSfixed64Mapdata();
          case 14:
            return internalGetDoubleMapdata();
          case 15:
            return internalGetFloatMapdata();
          case 16:
            return internalGetBoolMapdata();
          case 17:
            return internalGetBytesMapdata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableStringMapdata();
          case 4:
            return internalGetMutableInt32Mapdata();
          case 5:
            return internalGetMutableUint32Mapdata();
          case 6:
            return internalGetMutableSint32Mapdata();
          case 7:
            return internalGetMutableFloat32Mapdata();
          case 8:
            return internalGetMutableSfixed32Mapdata();
          case 9:
            return internalGetMutableInt64Mapdata();
          case 10:
            return internalGetMutableUint64Mapdata();
          case 11:
            return internalGetMutableSint64Mapdata();
          case 12:
            return internalGetMutableFixed64Mapdata();
          case 13:
            return internalGetMutableSfixed64Mapdata();
          case 14:
            return internalGetMutableDoubleMapdata();
          case 15:
            return internalGetMutableFloatMapdata();
          case 16:
            return internalGetMutableBoolMapdata();
          case 17:
            return internalGetMutableBytesMapdata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = "";
        internalGetMutableStringMapdata().clear();
        internalGetMutableInt32Mapdata().clear();
        internalGetMutableUint32Mapdata().clear();
        internalGetMutableSint32Mapdata().clear();
        internalGetMutableFloat32Mapdata().clear();
        internalGetMutableSfixed32Mapdata().clear();
        internalGetMutableInt64Mapdata().clear();
        internalGetMutableUint64Mapdata().clear();
        internalGetMutableSint64Mapdata().clear();
        internalGetMutableFixed64Mapdata().clear();
        internalGetMutableSfixed64Mapdata().clear();
        internalGetMutableDoubleMapdata().clear();
        internalGetMutableFloatMapdata().clear();
        internalGetMutableBoolMapdata().clear();
        internalGetMutableBytesMapdata().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stringMapdata_ = internalGetStringMapdata();
          result.stringMapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.int32Mapdata_ = internalGetInt32Mapdata();
          result.int32Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.uint32Mapdata_ = internalGetUint32Mapdata();
          result.uint32Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.sint32Mapdata_ = internalGetSint32Mapdata();
          result.sint32Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.float32Mapdata_ = internalGetFloat32Mapdata();
          result.float32Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sfixed32Mapdata_ = internalGetSfixed32Mapdata();
          result.sfixed32Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.int64Mapdata_ = internalGetInt64Mapdata();
          result.int64Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.uint64Mapdata_ = internalGetUint64Mapdata();
          result.uint64Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.sint64Mapdata_ = internalGetSint64Mapdata();
          result.sint64Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.fixed64Mapdata_ = internalGetFixed64Mapdata();
          result.fixed64Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.sfixed64Mapdata_ = internalGetSfixed64Mapdata();
          result.sfixed64Mapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.doubleMapdata_ = internalGetDoubleMapdata();
          result.doubleMapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.floatMapdata_ = internalGetFloatMapdata();
          result.floatMapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.boolMapdata_ = internalGetBoolMapdata();
          result.boolMapdata_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.bytesMapdata_ = internalGetBytesMapdata();
          result.bytesMapdata_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        internalGetMutableStringMapdata().mergeFrom(
            other.internalGetStringMapdata());
        bitField0_ |= 0x00000004;
        internalGetMutableInt32Mapdata().mergeFrom(
            other.internalGetInt32Mapdata());
        bitField0_ |= 0x00000008;
        internalGetMutableUint32Mapdata().mergeFrom(
            other.internalGetUint32Mapdata());
        bitField0_ |= 0x00000010;
        internalGetMutableSint32Mapdata().mergeFrom(
            other.internalGetSint32Mapdata());
        bitField0_ |= 0x00000020;
        internalGetMutableFloat32Mapdata().mergeFrom(
            other.internalGetFloat32Mapdata());
        bitField0_ |= 0x00000040;
        internalGetMutableSfixed32Mapdata().mergeFrom(
            other.internalGetSfixed32Mapdata());
        bitField0_ |= 0x00000080;
        internalGetMutableInt64Mapdata().mergeFrom(
            other.internalGetInt64Mapdata());
        bitField0_ |= 0x00000100;
        internalGetMutableUint64Mapdata().mergeFrom(
            other.internalGetUint64Mapdata());
        bitField0_ |= 0x00000200;
        internalGetMutableSint64Mapdata().mergeFrom(
            other.internalGetSint64Mapdata());
        bitField0_ |= 0x00000400;
        internalGetMutableFixed64Mapdata().mergeFrom(
            other.internalGetFixed64Mapdata());
        bitField0_ |= 0x00000800;
        internalGetMutableSfixed64Mapdata().mergeFrom(
            other.internalGetSfixed64Mapdata());
        bitField0_ |= 0x00001000;
        internalGetMutableDoubleMapdata().mergeFrom(
            other.internalGetDoubleMapdata());
        bitField0_ |= 0x00002000;
        internalGetMutableFloatMapdata().mergeFrom(
            other.internalGetFloatMapdata());
        bitField0_ |= 0x00004000;
        internalGetMutableBoolMapdata().mergeFrom(
            other.internalGetBoolMapdata());
        bitField0_ |= 0x00008000;
        internalGetMutableBytesMapdata().mergeFrom(
            other.internalGetBytesMapdata());
        bitField0_ |= 0x00010000;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                value_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                stringMapdata__ = input.readMessage(
                    StringMapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableStringMapdata().getMutableMap().put(
                    stringMapdata__.getKey(), stringMapdata__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                int32Mapdata__ = input.readMessage(
                    Int32MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableInt32Mapdata().getMutableMap().put(
                    int32Mapdata__.getKey(), int32Mapdata__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                uint32Mapdata__ = input.readMessage(
                    Uint32MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableUint32Mapdata().getMutableMap().put(
                    uint32Mapdata__.getKey(), uint32Mapdata__.getValue());
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                sint32Mapdata__ = input.readMessage(
                    Sint32MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSint32Mapdata().getMutableMap().put(
                    sint32Mapdata__.getKey(), sint32Mapdata__.getValue());
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                float32Mapdata__ = input.readMessage(
                    Float32MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableFloat32Mapdata().getMutableMap().put(
                    float32Mapdata__.getKey(), float32Mapdata__.getValue());
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                sfixed32Mapdata__ = input.readMessage(
                    Sfixed32MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSfixed32Mapdata().getMutableMap().put(
                    sfixed32Mapdata__.getKey(), sfixed32Mapdata__.getValue());
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                int64Mapdata__ = input.readMessage(
                    Int64MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableInt64Mapdata().getMutableMap().put(
                    int64Mapdata__.getKey(), int64Mapdata__.getValue());
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                uint64Mapdata__ = input.readMessage(
                    Uint64MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableUint64Mapdata().getMutableMap().put(
                    uint64Mapdata__.getKey(), uint64Mapdata__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                sint64Mapdata__ = input.readMessage(
                    Sint64MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSint64Mapdata().getMutableMap().put(
                    sint64Mapdata__.getKey(), sint64Mapdata__.getValue());
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                fixed64Mapdata__ = input.readMessage(
                    Fixed64MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableFixed64Mapdata().getMutableMap().put(
                    fixed64Mapdata__.getKey(), fixed64Mapdata__.getValue());
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              case 106: {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                sfixed64Mapdata__ = input.readMessage(
                    Sfixed64MapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSfixed64Mapdata().getMutableMap().put(
                    sfixed64Mapdata__.getKey(), sfixed64Mapdata__.getValue());
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 114: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
                doubleMapdata__ = input.readMessage(
                    DoubleMapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableDoubleMapdata().getMutableMap().put(
                    doubleMapdata__.getKey(), doubleMapdata__.getValue());
                bitField0_ |= 0x00002000;
                break;
              } // case 114
              case 122: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
                floatMapdata__ = input.readMessage(
                    FloatMapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableFloatMapdata().getMutableMap().put(
                    floatMapdata__.getKey(), floatMapdata__.getValue());
                bitField0_ |= 0x00004000;
                break;
              } // case 122
              case 130: {
                com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
                boolMapdata__ = input.readMessage(
                    BoolMapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableBoolMapdata().getMutableMap().put(
                    boolMapdata__.getKey(), boolMapdata__.getValue());
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              case 138: {
                com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
                bytesMapdata__ = input.readMessage(
                    BytesMapdataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableBytesMapdata().getMutableMap().put(
                    bytesMapdata__.getKey(), bytesMapdata__.getValue());
                bitField0_ |= 0x00010000;
                break;
              } // case 138
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        value_ = getDefaultInstance().getValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringMapdata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetStringMapdata() {
        if (stringMapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringMapdataDefaultEntryHolder.defaultEntry);
        }
        return stringMapdata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableStringMapdata() {
        if (stringMapdata_ == null) {
          stringMapdata_ = com.google.protobuf.MapField.newMapField(
              StringMapdataDefaultEntryHolder.defaultEntry);
        }
        if (!stringMapdata_.isMutable()) {
          stringMapdata_ = stringMapdata_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return stringMapdata_;
      }
      public int getStringMapdataCount() {
        return internalGetStringMapdata().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      @java.lang.Override
      public boolean containsStringMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetStringMapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringMapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringMapdata() {
        return getStringMapdataMap();
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getStringMapdataMap() {
        return internalGetStringMapdata().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getStringMapdataOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringMapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getStringMapdataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringMapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearStringMapdata() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableStringMapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      public Builder removeStringMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableStringMapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableStringMapdata() {
        bitField0_ |= 0x00000004;
        return internalGetMutableStringMapdata().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      public Builder putStringMapdata(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableStringMapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; string_mapdata = 3;</code>
       */
      public Builder putAllStringMapdata(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringMapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32Mapdata_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetInt32Mapdata() {
        if (int32Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32MapdataDefaultEntryHolder.defaultEntry);
        }
        return int32Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableInt32Mapdata() {
        if (int32Mapdata_ == null) {
          int32Mapdata_ = com.google.protobuf.MapField.newMapField(
              Int32MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!int32Mapdata_.isMutable()) {
          int32Mapdata_ = int32Mapdata_.copy();
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return int32Mapdata_;
      }
      public int getInt32MapdataCount() {
        return internalGetInt32Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      @java.lang.Override
      public boolean containsInt32Mapdata(
          int key) {

        return internalGetInt32Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32Mapdata() {
        return getInt32MapdataMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32MapdataMap() {
        return internalGetInt32Mapdata().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      @java.lang.Override
      public int getInt32MapdataOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      @java.lang.Override
      public int getInt32MapdataOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearInt32Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutableInt32Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      public Builder removeInt32Mapdata(
          int key) {

        internalGetMutableInt32Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableInt32Mapdata() {
        bitField0_ |= 0x00000008;
        return internalGetMutableInt32Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      public Builder putInt32Mapdata(
          int key,
          int value) {


        internalGetMutableInt32Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_mapdata = 4;</code>
       */
      public Builder putAllInt32Mapdata(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000008;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> uint32Mapdata_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetUint32Mapdata() {
        if (uint32Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Uint32MapdataDefaultEntryHolder.defaultEntry);
        }
        return uint32Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableUint32Mapdata() {
        if (uint32Mapdata_ == null) {
          uint32Mapdata_ = com.google.protobuf.MapField.newMapField(
              Uint32MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!uint32Mapdata_.isMutable()) {
          uint32Mapdata_ = uint32Mapdata_.copy();
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return uint32Mapdata_;
      }
      public int getUint32MapdataCount() {
        return internalGetUint32Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      @java.lang.Override
      public boolean containsUint32Mapdata(
          int key) {

        return internalGetUint32Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUint32MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32Mapdata() {
        return getUint32MapdataMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32MapdataMap() {
        return internalGetUint32Mapdata().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      @java.lang.Override
      public int getUint32MapdataOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      @java.lang.Override
      public int getUint32MapdataOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearUint32Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableUint32Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      public Builder removeUint32Mapdata(
          int key) {

        internalGetMutableUint32Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableUint32Mapdata() {
        bitField0_ |= 0x00000010;
        return internalGetMutableUint32Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      public Builder putUint32Mapdata(
          int key,
          int value) {


        internalGetMutableUint32Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; uint32_mapdata = 5;</code>
       */
      public Builder putAllUint32Mapdata(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableUint32Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000010;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> sint32Mapdata_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetSint32Mapdata() {
        if (sint32Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sint32MapdataDefaultEntryHolder.defaultEntry);
        }
        return sint32Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableSint32Mapdata() {
        if (sint32Mapdata_ == null) {
          sint32Mapdata_ = com.google.protobuf.MapField.newMapField(
              Sint32MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!sint32Mapdata_.isMutable()) {
          sint32Mapdata_ = sint32Mapdata_.copy();
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return sint32Mapdata_;
      }
      public int getSint32MapdataCount() {
        return internalGetSint32Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      @java.lang.Override
      public boolean containsSint32Mapdata(
          int key) {

        return internalGetSint32Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSint32MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32Mapdata() {
        return getSint32MapdataMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32MapdataMap() {
        return internalGetSint32Mapdata().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      @java.lang.Override
      public int getSint32MapdataOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSint32Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      @java.lang.Override
      public int getSint32MapdataOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSint32Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSint32Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableSint32Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      public Builder removeSint32Mapdata(
          int key) {

        internalGetMutableSint32Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableSint32Mapdata() {
        bitField0_ |= 0x00000020;
        return internalGetMutableSint32Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      public Builder putSint32Mapdata(
          int key,
          int value) {


        internalGetMutableSint32Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; sint32_mapdata = 6;</code>
       */
      public Builder putAllSint32Mapdata(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableSint32Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000020;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> float32Mapdata_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetFloat32Mapdata() {
        if (float32Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Float32MapdataDefaultEntryHolder.defaultEntry);
        }
        return float32Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableFloat32Mapdata() {
        if (float32Mapdata_ == null) {
          float32Mapdata_ = com.google.protobuf.MapField.newMapField(
              Float32MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!float32Mapdata_.isMutable()) {
          float32Mapdata_ = float32Mapdata_.copy();
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return float32Mapdata_;
      }
      public int getFloat32MapdataCount() {
        return internalGetFloat32Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      @java.lang.Override
      public boolean containsFloat32Mapdata(
          int key) {

        return internalGetFloat32Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloat32MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getFloat32Mapdata() {
        return getFloat32MapdataMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getFloat32MapdataMap() {
        return internalGetFloat32Mapdata().getMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      @java.lang.Override
      public int getFloat32MapdataOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFloat32Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      @java.lang.Override
      public int getFloat32MapdataOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFloat32Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearFloat32Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutableFloat32Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      public Builder removeFloat32Mapdata(
          int key) {

        internalGetMutableFloat32Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableFloat32Mapdata() {
        bitField0_ |= 0x00000040;
        return internalGetMutableFloat32Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      public Builder putFloat32Mapdata(
          int key,
          int value) {


        internalGetMutableFloat32Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; float32_mapdata = 7;</code>
       */
      public Builder putAllFloat32Mapdata(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableFloat32Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000040;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> sfixed32Mapdata_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetSfixed32Mapdata() {
        if (sfixed32Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sfixed32MapdataDefaultEntryHolder.defaultEntry);
        }
        return sfixed32Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableSfixed32Mapdata() {
        if (sfixed32Mapdata_ == null) {
          sfixed32Mapdata_ = com.google.protobuf.MapField.newMapField(
              Sfixed32MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!sfixed32Mapdata_.isMutable()) {
          sfixed32Mapdata_ = sfixed32Mapdata_.copy();
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return sfixed32Mapdata_;
      }
      public int getSfixed32MapdataCount() {
        return internalGetSfixed32Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      @java.lang.Override
      public boolean containsSfixed32Mapdata(
          int key) {

        return internalGetSfixed32Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSfixed32MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32Mapdata() {
        return getSfixed32MapdataMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32MapdataMap() {
        return internalGetSfixed32Mapdata().getMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      @java.lang.Override
      public int getSfixed32MapdataOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSfixed32Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      @java.lang.Override
      public int getSfixed32MapdataOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSfixed32Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSfixed32Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000080);
        internalGetMutableSfixed32Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      public Builder removeSfixed32Mapdata(
          int key) {

        internalGetMutableSfixed32Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableSfixed32Mapdata() {
        bitField0_ |= 0x00000080;
        return internalGetMutableSfixed32Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      public Builder putSfixed32Mapdata(
          int key,
          int value) {


        internalGetMutableSfixed32Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; sfixed32_mapdata = 8;</code>
       */
      public Builder putAllSfixed32Mapdata(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableSfixed32Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000080;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> int64Mapdata_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetInt64Mapdata() {
        if (int64Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int64MapdataDefaultEntryHolder.defaultEntry);
        }
        return int64Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetMutableInt64Mapdata() {
        if (int64Mapdata_ == null) {
          int64Mapdata_ = com.google.protobuf.MapField.newMapField(
              Int64MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!int64Mapdata_.isMutable()) {
          int64Mapdata_ = int64Mapdata_.copy();
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return int64Mapdata_;
      }
      public int getInt64MapdataCount() {
        return internalGetInt64Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      @java.lang.Override
      public boolean containsInt64Mapdata(
          long key) {

        return internalGetInt64Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt64MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getInt64Mapdata() {
        return getInt64MapdataMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, java.lang.Long> getInt64MapdataMap() {
        return internalGetInt64Mapdata().getMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      @java.lang.Override
      public long getInt64MapdataOrDefault(
          long key,
          long defaultValue) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetInt64Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      @java.lang.Override
      public long getInt64MapdataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetInt64Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearInt64Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000100);
        internalGetMutableInt64Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      public Builder removeInt64Mapdata(
          long key) {

        internalGetMutableInt64Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
          getMutableInt64Mapdata() {
        bitField0_ |= 0x00000100;
        return internalGetMutableInt64Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      public Builder putInt64Mapdata(
          long key,
          long value) {


        internalGetMutableInt64Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; int64_mapdata = 9;</code>
       */
      public Builder putAllInt64Mapdata(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableInt64Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000100;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> uint64Mapdata_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetUint64Mapdata() {
        if (uint64Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Uint64MapdataDefaultEntryHolder.defaultEntry);
        }
        return uint64Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetMutableUint64Mapdata() {
        if (uint64Mapdata_ == null) {
          uint64Mapdata_ = com.google.protobuf.MapField.newMapField(
              Uint64MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!uint64Mapdata_.isMutable()) {
          uint64Mapdata_ = uint64Mapdata_.copy();
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return uint64Mapdata_;
      }
      public int getUint64MapdataCount() {
        return internalGetUint64Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      @java.lang.Override
      public boolean containsUint64Mapdata(
          long key) {

        return internalGetUint64Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUint64MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getUint64Mapdata() {
        return getUint64MapdataMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, java.lang.Long> getUint64MapdataMap() {
        return internalGetUint64Mapdata().getMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      @java.lang.Override
      public long getUint64MapdataOrDefault(
          long key,
          long defaultValue) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetUint64Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      @java.lang.Override
      public long getUint64MapdataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetUint64Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearUint64Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableUint64Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      public Builder removeUint64Mapdata(
          long key) {

        internalGetMutableUint64Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
          getMutableUint64Mapdata() {
        bitField0_ |= 0x00000200;
        return internalGetMutableUint64Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      public Builder putUint64Mapdata(
          long key,
          long value) {


        internalGetMutableUint64Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; uint64_mapdata = 10;</code>
       */
      public Builder putAllUint64Mapdata(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableUint64Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000200;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> sint64Mapdata_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetSint64Mapdata() {
        if (sint64Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sint64MapdataDefaultEntryHolder.defaultEntry);
        }
        return sint64Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetMutableSint64Mapdata() {
        if (sint64Mapdata_ == null) {
          sint64Mapdata_ = com.google.protobuf.MapField.newMapField(
              Sint64MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!sint64Mapdata_.isMutable()) {
          sint64Mapdata_ = sint64Mapdata_.copy();
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return sint64Mapdata_;
      }
      public int getSint64MapdataCount() {
        return internalGetSint64Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      @java.lang.Override
      public boolean containsSint64Mapdata(
          long key) {

        return internalGetSint64Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSint64MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getSint64Mapdata() {
        return getSint64MapdataMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, java.lang.Long> getSint64MapdataMap() {
        return internalGetSint64Mapdata().getMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      @java.lang.Override
      public long getSint64MapdataOrDefault(
          long key,
          long defaultValue) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetSint64Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      @java.lang.Override
      public long getSint64MapdataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetSint64Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSint64Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000400);
        internalGetMutableSint64Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      public Builder removeSint64Mapdata(
          long key) {

        internalGetMutableSint64Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
          getMutableSint64Mapdata() {
        bitField0_ |= 0x00000400;
        return internalGetMutableSint64Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      public Builder putSint64Mapdata(
          long key,
          long value) {


        internalGetMutableSint64Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; sint64_mapdata = 11;</code>
       */
      public Builder putAllSint64Mapdata(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableSint64Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000400;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> fixed64Mapdata_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetFixed64Mapdata() {
        if (fixed64Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Fixed64MapdataDefaultEntryHolder.defaultEntry);
        }
        return fixed64Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetMutableFixed64Mapdata() {
        if (fixed64Mapdata_ == null) {
          fixed64Mapdata_ = com.google.protobuf.MapField.newMapField(
              Fixed64MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!fixed64Mapdata_.isMutable()) {
          fixed64Mapdata_ = fixed64Mapdata_.copy();
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return fixed64Mapdata_;
      }
      public int getFixed64MapdataCount() {
        return internalGetFixed64Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      @java.lang.Override
      public boolean containsFixed64Mapdata(
          long key) {

        return internalGetFixed64Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFixed64MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getFixed64Mapdata() {
        return getFixed64MapdataMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, java.lang.Long> getFixed64MapdataMap() {
        return internalGetFixed64Mapdata().getMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      @java.lang.Override
      public long getFixed64MapdataOrDefault(
          long key,
          long defaultValue) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetFixed64Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      @java.lang.Override
      public long getFixed64MapdataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetFixed64Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearFixed64Mapdata() {
        bitField0_ = (bitField0_ & ~0x00000800);
        internalGetMutableFixed64Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      public Builder removeFixed64Mapdata(
          long key) {

        internalGetMutableFixed64Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
          getMutableFixed64Mapdata() {
        bitField0_ |= 0x00000800;
        return internalGetMutableFixed64Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      public Builder putFixed64Mapdata(
          long key,
          long value) {


        internalGetMutableFixed64Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; fixed64_mapdata = 12;</code>
       */
      public Builder putAllFixed64Mapdata(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableFixed64Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000800;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> sfixed64Mapdata_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetSfixed64Mapdata() {
        if (sfixed64Mapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sfixed64MapdataDefaultEntryHolder.defaultEntry);
        }
        return sfixed64Mapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
          internalGetMutableSfixed64Mapdata() {
        if (sfixed64Mapdata_ == null) {
          sfixed64Mapdata_ = com.google.protobuf.MapField.newMapField(
              Sfixed64MapdataDefaultEntryHolder.defaultEntry);
        }
        if (!sfixed64Mapdata_.isMutable()) {
          sfixed64Mapdata_ = sfixed64Mapdata_.copy();
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return sfixed64Mapdata_;
      }
      public int getSfixed64MapdataCount() {
        return internalGetSfixed64Mapdata().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      @java.lang.Override
      public boolean containsSfixed64Mapdata(
          long key) {

        return internalGetSfixed64Mapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSfixed64MapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getSfixed64Mapdata() {
        return getSfixed64MapdataMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, java.lang.Long> getSfixed64MapdataMap() {
        return internalGetSfixed64Mapdata().getMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      @java.lang.Override
      public long getSfixed64MapdataOrDefault(
          long key,
          long defaultValue) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetSfixed64Mapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      @java.lang.Override
      public long getSfixed64MapdataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetSfixed64Mapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSfixed64Mapdata() {
        bitField0_ = (bitField0_ & ~0x00001000);
        internalGetMutableSfixed64Mapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      public Builder removeSfixed64Mapdata(
          long key) {

        internalGetMutableSfixed64Mapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
          getMutableSfixed64Mapdata() {
        bitField0_ |= 0x00001000;
        return internalGetMutableSfixed64Mapdata().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      public Builder putSfixed64Mapdata(
          long key,
          long value) {


        internalGetMutableSfixed64Mapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; sfixed64_mapdata = 13;</code>
       */
      public Builder putAllSfixed64Mapdata(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableSfixed64Mapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00001000;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> doubleMapdata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetDoubleMapdata() {
        if (doubleMapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DoubleMapdataDefaultEntryHolder.defaultEntry);
        }
        return doubleMapdata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetMutableDoubleMapdata() {
        if (doubleMapdata_ == null) {
          doubleMapdata_ = com.google.protobuf.MapField.newMapField(
              DoubleMapdataDefaultEntryHolder.defaultEntry);
        }
        if (!doubleMapdata_.isMutable()) {
          doubleMapdata_ = doubleMapdata_.copy();
        }
        bitField0_ |= 0x00002000;
        onChanged();
        return doubleMapdata_;
      }
      public int getDoubleMapdataCount() {
        return internalGetDoubleMapdata().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      @java.lang.Override
      public boolean containsDoubleMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetDoubleMapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDoubleMapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getDoubleMapdata() {
        return getDoubleMapdataMap();
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Double> getDoubleMapdataMap() {
        return internalGetDoubleMapdata().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      @java.lang.Override
      public double getDoubleMapdataOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleMapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      @java.lang.Override
      public double getDoubleMapdataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleMapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearDoubleMapdata() {
        bitField0_ = (bitField0_ & ~0x00002000);
        internalGetMutableDoubleMapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      public Builder removeDoubleMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableDoubleMapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
          getMutableDoubleMapdata() {
        bitField0_ |= 0x00002000;
        return internalGetMutableDoubleMapdata().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      public Builder putDoubleMapdata(
          java.lang.String key,
          double value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableDoubleMapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; double_mapdata = 14;</code>
       */
      public Builder putAllDoubleMapdata(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableDoubleMapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00002000;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> floatMapdata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
          internalGetFloatMapdata() {
        if (floatMapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FloatMapdataDefaultEntryHolder.defaultEntry);
        }
        return floatMapdata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
          internalGetMutableFloatMapdata() {
        if (floatMapdata_ == null) {
          floatMapdata_ = com.google.protobuf.MapField.newMapField(
              FloatMapdataDefaultEntryHolder.defaultEntry);
        }
        if (!floatMapdata_.isMutable()) {
          floatMapdata_ = floatMapdata_.copy();
        }
        bitField0_ |= 0x00004000;
        onChanged();
        return floatMapdata_;
      }
      public int getFloatMapdataCount() {
        return internalGetFloatMapdata().getMap().size();
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      @java.lang.Override
      public boolean containsFloatMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetFloatMapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloatMapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getFloatMapdata() {
        return getFloatMapdataMap();
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Float> getFloatMapdataMap() {
        return internalGetFloatMapdata().getMap();
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      @java.lang.Override
      public float getFloatMapdataOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatMapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      @java.lang.Override
      public float getFloatMapdataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatMapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearFloatMapdata() {
        bitField0_ = (bitField0_ & ~0x00004000);
        internalGetMutableFloatMapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      public Builder removeFloatMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableFloatMapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
          getMutableFloatMapdata() {
        bitField0_ |= 0x00004000;
        return internalGetMutableFloatMapdata().getMutableMap();
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      public Builder putFloatMapdata(
          java.lang.String key,
          float value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableFloatMapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; float_mapdata = 15;</code>
       */
      public Builder putAllFloatMapdata(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableFloatMapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00004000;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Boolean> boolMapdata_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
          internalGetBoolMapdata() {
        if (boolMapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BoolMapdataDefaultEntryHolder.defaultEntry);
        }
        return boolMapdata_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
          internalGetMutableBoolMapdata() {
        if (boolMapdata_ == null) {
          boolMapdata_ = com.google.protobuf.MapField.newMapField(
              BoolMapdataDefaultEntryHolder.defaultEntry);
        }
        if (!boolMapdata_.isMutable()) {
          boolMapdata_ = boolMapdata_.copy();
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return boolMapdata_;
      }
      public int getBoolMapdataCount() {
        return internalGetBoolMapdata().getMap().size();
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      @java.lang.Override
      public boolean containsBoolMapdata(
          boolean key) {

        return internalGetBoolMapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBoolMapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getBoolMapdata() {
        return getBoolMapdataMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getBoolMapdataMap() {
        return internalGetBoolMapdata().getMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      @java.lang.Override
      public boolean getBoolMapdataOrDefault(
          boolean key,
          boolean defaultValue) {

        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetBoolMapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      @java.lang.Override
      public boolean getBoolMapdataOrThrow(
          boolean key) {

        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetBoolMapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearBoolMapdata() {
        bitField0_ = (bitField0_ & ~0x00008000);
        internalGetMutableBoolMapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      public Builder removeBoolMapdata(
          boolean key) {

        internalGetMutableBoolMapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean>
          getMutableBoolMapdata() {
        bitField0_ |= 0x00008000;
        return internalGetMutableBoolMapdata().getMutableMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      public Builder putBoolMapdata(
          boolean key,
          boolean value) {


        internalGetMutableBoolMapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; bool_mapdata = 16;</code>
       */
      public Builder putAllBoolMapdata(
          java.util.Map<java.lang.Boolean, java.lang.Boolean> values) {
        internalGetMutableBoolMapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00008000;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> bytesMapdata_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
          internalGetBytesMapdata() {
        if (bytesMapdata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BytesMapdataDefaultEntryHolder.defaultEntry);
        }
        return bytesMapdata_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
          internalGetMutableBytesMapdata() {
        if (bytesMapdata_ == null) {
          bytesMapdata_ = com.google.protobuf.MapField.newMapField(
              BytesMapdataDefaultEntryHolder.defaultEntry);
        }
        if (!bytesMapdata_.isMutable()) {
          bytesMapdata_ = bytesMapdata_.copy();
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return bytesMapdata_;
      }
      public int getBytesMapdataCount() {
        return internalGetBytesMapdata().getMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      @java.lang.Override
      public boolean containsBytesMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetBytesMapdata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBytesMapdataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesMapdata() {
        return getBytesMapdataMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesMapdataMap() {
        return internalGetBytesMapdata().getMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      @java.lang.Override
      public /* nullable */
com.google.protobuf.ByteString getBytesMapdataOrDefault(
          java.lang.String key,
          /* nullable */
com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesMapdata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesMapdataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesMapdata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearBytesMapdata() {
        bitField0_ = (bitField0_ & ~0x00010000);
        internalGetMutableBytesMapdata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      public Builder removeBytesMapdata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableBytesMapdata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
          getMutableBytesMapdata() {
        bitField0_ |= 0x00010000;
        return internalGetMutableBytesMapdata().getMutableMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      public Builder putBytesMapdata(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableBytesMapdata().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytes_mapdata = 17;</code>
       */
      public Builder putAllBytesMapdata(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableBytesMapdata().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00010000;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageMap)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageMap)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMessageMap>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMessageMap>() {
      @java.lang.Override
      public SimpleMessageMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleMessageMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessageMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasicEnumMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.BasicEnumMessage)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BasicEnumMessage}
   */
  public static final class BasicEnumMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.BasicEnumMessage)
      BasicEnumMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicEnumMessage.newBuilder() to construct.
    private BasicEnumMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicEnumMessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasicEnumMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum}
     */
    public enum BasicEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NOTHING = 0;</code>
       */
      NOTHING(0),
      /**
       * <code>FIRST = 1;</code>
       */
      FIRST(1),
      /**
       * <code>SECOND = 2;</code>
       */
      SECOND(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NOTHING = 0;</code>
       */
      public static final int NOTHING_VALUE = 0;
      /**
       * <code>FIRST = 1;</code>
       */
      public static final int FIRST_VALUE = 1;
      /**
       * <code>SECOND = 2;</code>
       */
      public static final int SECOND_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BasicEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static BasicEnum forNumber(int value) {
        switch (value) {
          case 0: return NOTHING;
          case 1: return FIRST;
          case 2: return SECOND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BasicEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          BasicEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BasicEnum>() {
              public BasicEnum findValueByNumber(int number) {
                return BasicEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final BasicEnum[] VALUES = values();

      public static BasicEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private BasicEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BasicEnumMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.BasicEnumMessage)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage other) {
        if (other == getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.BasicEnumMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.BasicEnumMessage)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicEnumMessage>
        PARSER = new com.google.protobuf.AbstractParser<BasicEnumMessage>() {
      @java.lang.Override
      public BasicEnumMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BasicEnumMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicEnumMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleMessageEnumOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
     * @return The enum numeric value on the wire for basicEnum.
     */
    int getBasicEnumValue();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
     * @return The basicEnum.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getBasicEnum();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
     * @return The enum numeric value on the wire for nestedEnum.
     */
    int getNestedEnumValue();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
     * @return The nestedEnum.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum getNestedEnum();

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return A list containing the repeatedEnum.
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum> getRepeatedEnumList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return The count of repeatedEnum.
     */
    int getRepeatedEnumCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @param index The index of the element to return.
     * @return The repeatedEnum at the given index.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getRepeatedEnum(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return A list containing the enum numeric values on the wire for repeatedEnum.
     */
    java.util.List<java.lang.Integer>
    getRepeatedEnumValueList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of repeatedEnum at the given index.
     */
    int getRepeatedEnumValue(int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageEnum}
   */
  public static final class SimpleMessageEnum extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum)
      SimpleMessageEnumOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessageEnum.newBuilder() to construct.
    private SimpleMessageEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessageEnum() {
      key_ = "";
      value_ = "";
      basicEnum_ = 0;
      nestedEnum_ = 0;
      repeatedEnum_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleMessageEnum();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NESTED_NOTHING = 0;</code>
       */
      NESTED_NOTHING(0),
      /**
       * <code>NESTED_FIRST = 1;</code>
       */
      NESTED_FIRST(1),
      /**
       * <code>NESTED_SECOND = 2;</code>
       */
      NESTED_SECOND(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NESTED_NOTHING = 0;</code>
       */
      public static final int NESTED_NOTHING_VALUE = 0;
      /**
       * <code>NESTED_FIRST = 1;</code>
       */
      public static final int NESTED_FIRST_VALUE = 1;
      /**
       * <code>NESTED_SECOND = 2;</code>
       */
      public static final int NESTED_SECOND_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return NESTED_NOTHING;
          case 1: return NESTED_FIRST;
          case 2: return NESTED_SECOND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.getDescriptor().getEnumTypes().get(0);
      }

      private static final NestedEnum[] VALUES = values();

      public static NestedEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum)
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object value_ = "";
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASIC_ENUM_FIELD_NUMBER = 3;
    private int basicEnum_ = 0;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
     * @return The enum numeric value on the wire for basicEnum.
     */
    @java.lang.Override public int getBasicEnumValue() {
      return basicEnum_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
     * @return The basicEnum.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getBasicEnum() {
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.forNumber(basicEnum_);
      return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.UNRECOGNIZED : result;
    }

    public static final int NESTED_ENUM_FIELD_NUMBER = 4;
    private int nestedEnum_ = 0;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
     * @return The enum numeric value on the wire for nestedEnum.
     */
    @java.lang.Override public int getNestedEnumValue() {
      return nestedEnum_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
     * @return The nestedEnum.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum getNestedEnum() {
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.forNumber(nestedEnum_);
      return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.UNRECOGNIZED : result;
    }

    public static final int REPEATED_ENUM_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> repeatedEnum_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum> repeatedEnum_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum>() {
              public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum convert(java.lang.Integer from) {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.forNumber(from);
                return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return A list containing the repeatedEnum.
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum> getRepeatedEnumList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum>(repeatedEnum_, repeatedEnum_converter_);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return The count of repeatedEnum.
     */
    @java.lang.Override
    public int getRepeatedEnumCount() {
      return repeatedEnum_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @param index The index of the element to return.
     * @return The repeatedEnum at the given index.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getRepeatedEnum(int index) {
      return repeatedEnum_converter_.convert(repeatedEnum_.get(index));
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @return A list containing the enum numeric values on the wire for repeatedEnum.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getRepeatedEnumValueList() {
      return repeatedEnum_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of repeatedEnum at the given index.
     */
    @java.lang.Override
    public int getRepeatedEnumValue(int index) {
      return repeatedEnum_.get(index);
    }
    private int repeatedEnumMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      if (basicEnum_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.NOTHING.getNumber()) {
        output.writeEnum(3, basicEnum_);
      }
      if (nestedEnum_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.NESTED_NOTHING.getNumber()) {
        output.writeEnum(4, nestedEnum_);
      }
      if (getRepeatedEnumList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(repeatedEnumMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedEnum_.size(); i++) {
        output.writeEnumNoTag(repeatedEnum_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      if (basicEnum_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.NOTHING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, basicEnum_);
      }
      if (nestedEnum_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.NESTED_NOTHING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, nestedEnum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(repeatedEnum_.get(i));
        }
        size += dataSize;
        if (!getRepeatedEnumList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }repeatedEnumMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (basicEnum_ != other.basicEnum_) return false;
      if (nestedEnum_ != other.nestedEnum_) return false;
      if (!repeatedEnum_.equals(other.repeatedEnum_)) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + BASIC_ENUM_FIELD_NUMBER;
      hash = (53 * hash) + basicEnum_;
      hash = (37 * hash) + NESTED_ENUM_FIELD_NUMBER;
      hash = (53 * hash) + nestedEnum_;
      if (getRepeatedEnumCount() > 0) {
        hash = (37 * hash) + REPEATED_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + repeatedEnum_.hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.SimpleMessageEnum}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = "";
        basicEnum_ = 0;
        nestedEnum_ = 0;
        repeatedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum result) {
        if (((bitField0_ & 0x00000010) != 0)) {
          repeatedEnum_ = java.util.Collections.unmodifiableList(repeatedEnum_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.repeatedEnum_ = repeatedEnum_;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.basicEnum_ = basicEnum_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.nestedEnum_ = nestedEnum_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.basicEnum_ != 0) {
          setBasicEnumValue(other.getBasicEnumValue());
        }
        if (other.nestedEnum_ != 0) {
          setNestedEnumValue(other.getNestedEnumValue());
        }
        if (!other.repeatedEnum_.isEmpty()) {
          if (repeatedEnum_.isEmpty()) {
            repeatedEnum_ = other.repeatedEnum_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRepeatedEnumIsMutable();
            repeatedEnum_.addAll(other.repeatedEnum_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                value_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                basicEnum_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                nestedEnum_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                int tmpRaw = input.readEnum();
                ensureRepeatedEnumIsMutable();
                repeatedEnum_.add(tmpRaw);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureRepeatedEnumIsMutable();
                  repeatedEnum_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        value_ = getDefaultInstance().getValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int basicEnum_ = 0;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
       * @return The enum numeric value on the wire for basicEnum.
       */
      @java.lang.Override public int getBasicEnumValue() {
        return basicEnum_;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
       * @param value The enum numeric value on the wire for basicEnum to set.
       * @return This builder for chaining.
       */
      public Builder setBasicEnumValue(int value) {
        basicEnum_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
       * @return The basicEnum.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getBasicEnum() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.forNumber(basicEnum_);
        return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
       * @param value The basicEnum to set.
       * @return This builder for chaining.
       */
      public Builder setBasicEnum(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        basicEnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum basic_enum = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicEnum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        basicEnum_ = 0;
        onChanged();
        return this;
      }

      private int nestedEnum_ = 0;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
       * @return The enum numeric value on the wire for nestedEnum.
       */
      @java.lang.Override public int getNestedEnumValue() {
        return nestedEnum_;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
       * @param value The enum numeric value on the wire for nestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setNestedEnumValue(int value) {
        nestedEnum_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
       * @return The nestedEnum.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum getNestedEnum() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.forNumber(nestedEnum_);
        return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
       * @param value The nestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setNestedEnum(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        nestedEnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.SimpleMessageEnum.NestedEnum nested_enum = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNestedEnum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nestedEnum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedEnum_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedEnumIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          repeatedEnum_ = new java.util.ArrayList<java.lang.Integer>(repeatedEnum_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @return A list containing the repeatedEnum.
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum> getRepeatedEnumList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum>(repeatedEnum_, repeatedEnum_converter_);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @return The count of repeatedEnum.
       */
      public int getRepeatedEnumCount() {
        return repeatedEnum_.size();
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param index The index of the element to return.
       * @return The repeatedEnum at the given index.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum getRepeatedEnum(int index) {
        return repeatedEnum_converter_.convert(repeatedEnum_.get(index));
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param index The index to set the value at.
       * @param value The repeatedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRepeatedEnum(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedEnumIsMutable();
        repeatedEnum_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param value The repeatedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedEnum(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedEnumIsMutable();
        repeatedEnum_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param values The repeatedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRepeatedEnum(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum> values) {
        ensureRepeatedEnumIsMutable();
        for (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.BasicEnumMessage.BasicEnum value : values) {
          repeatedEnum_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeatedEnum() {
        repeatedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @return A list containing the enum numeric values on the wire for repeatedEnum.
       */
      public java.util.List<java.lang.Integer>
      getRepeatedEnumValueList() {
        return java.util.Collections.unmodifiableList(repeatedEnum_);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of repeatedEnum at the given index.
       */
      public int getRepeatedEnumValue(int index) {
        return repeatedEnum_.get(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for repeatedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRepeatedEnumValue(
          int index, int value) {
        ensureRepeatedEnumIsMutable();
        repeatedEnum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param value The enum numeric value on the wire for repeatedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedEnumValue(int value) {
        ensureRepeatedEnumIsMutable();
        repeatedEnum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.BasicEnumMessage.BasicEnum repeated_enum = 5;</code>
       * @param values The enum numeric values on the wire for repeatedEnum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRepeatedEnumValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureRepeatedEnumIsMutable();
        for (int value : values) {
          repeatedEnum_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.SimpleMessageEnum)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMessageEnum>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMessageEnum>() {
      @java.lang.Override
      public SimpleMessageEnum parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleMessageEnum> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMessageEnum> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.SimpleMessageEnum getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OtherExampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.OtherExample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string other = 1;</code>
     * @return The other.
     */
    java.lang.String getOther();
    /**
     * <code>string other = 1;</code>
     * @return The bytes for other.
     */
    com.google.protobuf.ByteString
        getOtherBytes();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OtherExample}
   */
  public static final class OtherExample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.OtherExample)
      OtherExampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OtherExample.newBuilder() to construct.
    private OtherExample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OtherExample() {
      other_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OtherExample();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder.class);
    }

    public static final int OTHER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object other_ = "";
    /**
     * <code>string other = 1;</code>
     * @return The other.
     */
    @java.lang.Override
    public java.lang.String getOther() {
      java.lang.Object ref = other_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        other_ = s;
        return s;
      }
    }
    /**
     * <code>string other = 1;</code>
     * @return The bytes for other.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOtherBytes() {
      java.lang.Object ref = other_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        other_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(other_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, other_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(other_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, other_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample) obj;

      if (!getOther()
          .equals(other.getOther())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OTHER_FIELD_NUMBER;
      hash = (53 * hash) + getOther().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OtherExample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.OtherExample)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        other_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.other_ = other_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getOther().isEmpty()) {
          other_ = other.other_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                other_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object other_ = "";
      /**
       * <code>string other = 1;</code>
       * @return The other.
       */
      public java.lang.String getOther() {
        java.lang.Object ref = other_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          other_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string other = 1;</code>
       * @return The bytes for other.
       */
      public com.google.protobuf.ByteString
          getOtherBytes() {
        java.lang.Object ref = other_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          other_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string other = 1;</code>
       * @param value The other to set.
       * @return This builder for chaining.
       */
      public Builder setOther(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        other_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string other = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOther() {
        other_ = getDefaultInstance().getOther();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string other = 1;</code>
       * @param value The bytes for other to set.
       * @return This builder for chaining.
       */
      public Builder setOtherBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        other_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.OtherExample)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.OtherExample)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OtherExample>
        PARSER = new com.google.protobuf.AbstractParser<OtherExample>() {
      @java.lang.Override
      public OtherExample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OtherExample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OtherExample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IncludedExampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.IncludedExample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string included = 1;</code>
     * @return The included.
     */
    java.lang.String getIncluded();
    /**
     * <code>string included = 1;</code>
     * @return The bytes for included.
     */
    com.google.protobuf.ByteString
        getIncludedBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     * @return Whether the other field is set.
     */
    boolean hasOther();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     * @return The other.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOther();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOtherOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IncludedExample}
   */
  public static final class IncludedExample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.IncludedExample)
      IncludedExampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IncludedExample.newBuilder() to construct.
    private IncludedExample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IncludedExample() {
      included_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IncludedExample();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder.class);
    }

    public static final int INCLUDED_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object included_ = "";
    /**
     * <code>string included = 1;</code>
     * @return The included.
     */
    @java.lang.Override
    public java.lang.String getIncluded() {
      java.lang.Object ref = included_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        included_ = s;
        return s;
      }
    }
    /**
     * <code>string included = 1;</code>
     * @return The bytes for included.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIncludedBytes() {
      java.lang.Object ref = included_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        included_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OTHER_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample other_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     * @return Whether the other field is set.
     */
    @java.lang.Override
    public boolean hasOther() {
      return other_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     * @return The other.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOther() {
      return other_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : other_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOtherOrBuilder() {
      return other_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : other_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(included_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, included_);
      }
      if (other_ != null) {
        output.writeMessage(2, getOther());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(included_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, included_);
      }
      if (other_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOther());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample) obj;

      if (!getIncluded()
          .equals(other.getIncluded())) return false;
      if (hasOther() != other.hasOther()) return false;
      if (hasOther()) {
        if (!getOther()
            .equals(other.getOther())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INCLUDED_FIELD_NUMBER;
      hash = (53 * hash) + getIncluded().hashCode();
      if (hasOther()) {
        hash = (37 * hash) + OTHER_FIELD_NUMBER;
        hash = (53 * hash) + getOther().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IncludedExample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.IncludedExample)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        included_ = "";
        other_ = null;
        if (otherBuilder_ != null) {
          otherBuilder_.dispose();
          otherBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.included_ = included_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.other_ = otherBuilder_ == null
              ? other_
              : otherBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getIncluded().isEmpty()) {
          included_ = other.included_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasOther()) {
          mergeOther(other.getOther());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                included_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getOtherFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object included_ = "";
      /**
       * <code>string included = 1;</code>
       * @return The included.
       */
      public java.lang.String getIncluded() {
        java.lang.Object ref = included_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          included_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string included = 1;</code>
       * @return The bytes for included.
       */
      public com.google.protobuf.ByteString
          getIncludedBytes() {
        java.lang.Object ref = included_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          included_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string included = 1;</code>
       * @param value The included to set.
       * @return This builder for chaining.
       */
      public Builder setIncluded(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        included_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string included = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncluded() {
        included_ = getDefaultInstance().getIncluded();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string included = 1;</code>
       * @param value The bytes for included to set.
       * @return This builder for chaining.
       */
      public Builder setIncludedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        included_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample other_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> otherBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       * @return Whether the other field is set.
       */
      public boolean hasOther() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       * @return The other.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOther() {
        if (otherBuilder_ == null) {
          return other_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : other_;
        } else {
          return otherBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public Builder setOther(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (otherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          other_ = value;
        } else {
          otherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public Builder setOther(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (otherBuilder_ == null) {
          other_ = builderForValue.build();
        } else {
          otherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public Builder mergeOther(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (otherBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            other_ != null &&
            other_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance()) {
            getOtherBuilder().mergeFrom(value);
          } else {
            other_ = value;
          }
        } else {
          otherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public Builder clearOther() {
        bitField0_ = (bitField0_ & ~0x00000002);
        other_ = null;
        if (otherBuilder_ != null) {
          otherBuilder_.dispose();
          otherBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder getOtherBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOtherFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOtherOrBuilder() {
        if (otherBuilder_ != null) {
          return otherBuilder_.getMessageOrBuilder();
        } else {
          return other_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : other_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample other = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
          getOtherFieldBuilder() {
        if (otherBuilder_ == null) {
          otherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder>(
                  getOther(),
                  getParentForChildren(),
                  isClean());
          other_ = null;
        }
        return otherBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.IncludedExample)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.IncludedExample)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IncludedExample>
        PARSER = new com.google.protobuf.AbstractParser<IncludedExample>() {
      @java.lang.Override
      public IncludedExample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IncludedExample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IncludedExample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultipleExampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.MultipleExample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     * @return Whether the includedExample field is set.
     */
    boolean hasIncludedExample();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     * @return The includedExample.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getIncludedExample();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder getIncludedExampleOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.MultipleExample}
   */
  public static final class MultipleExample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.MultipleExample)
      MultipleExampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultipleExample.newBuilder() to construct.
    private MultipleExample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultipleExample() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultipleExample();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample.Builder.class);
    }

    public static final int INCLUDED_EXAMPLE_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample includedExample_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     * @return Whether the includedExample field is set.
     */
    @java.lang.Override
    public boolean hasIncludedExample() {
      return includedExample_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     * @return The includedExample.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getIncludedExample() {
      return includedExample_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.getDefaultInstance() : includedExample_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder getIncludedExampleOrBuilder() {
      return includedExample_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.getDefaultInstance() : includedExample_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (includedExample_ != null) {
        output.writeMessage(1, getIncludedExample());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (includedExample_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIncludedExample());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample) obj;

      if (hasIncludedExample() != other.hasIncludedExample()) return false;
      if (hasIncludedExample()) {
        if (!getIncludedExample()
            .equals(other.getIncludedExample())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIncludedExample()) {
        hash = (37 * hash) + INCLUDED_EXAMPLE_FIELD_NUMBER;
        hash = (53 * hash) + getIncludedExample().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.MultipleExample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.MultipleExample)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        includedExample_ = null;
        if (includedExampleBuilder_ != null) {
          includedExampleBuilder_.dispose();
          includedExampleBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.includedExample_ = includedExampleBuilder_ == null
              ? includedExample_
              : includedExampleBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasIncludedExample()) {
          mergeIncludedExample(other.getIncludedExample());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getIncludedExampleFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample includedExample_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder> includedExampleBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       * @return Whether the includedExample field is set.
       */
      public boolean hasIncludedExample() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       * @return The includedExample.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample getIncludedExample() {
        if (includedExampleBuilder_ == null) {
          return includedExample_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.getDefaultInstance() : includedExample_;
        } else {
          return includedExampleBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public Builder setIncludedExample(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample value) {
        if (includedExampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includedExample_ = value;
        } else {
          includedExampleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public Builder setIncludedExample(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder builderForValue) {
        if (includedExampleBuilder_ == null) {
          includedExample_ = builderForValue.build();
        } else {
          includedExampleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public Builder mergeIncludedExample(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample value) {
        if (includedExampleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            includedExample_ != null &&
            includedExample_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.getDefaultInstance()) {
            getIncludedExampleBuilder().mergeFrom(value);
          } else {
            includedExample_ = value;
          }
        } else {
          includedExampleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public Builder clearIncludedExample() {
        bitField0_ = (bitField0_ & ~0x00000001);
        includedExample_ = null;
        if (includedExampleBuilder_ != null) {
          includedExampleBuilder_.dispose();
          includedExampleBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder getIncludedExampleBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIncludedExampleFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder getIncludedExampleOrBuilder() {
        if (includedExampleBuilder_ != null) {
          return includedExampleBuilder_.getMessageOrBuilder();
        } else {
          return includedExample_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.getDefaultInstance() : includedExample_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IncludedExample included_example = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder> 
          getIncludedExampleFieldBuilder() {
        if (includedExampleBuilder_ == null) {
          includedExampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IncludedExampleOrBuilder>(
                  getIncludedExample(),
                  getParentForChildren(),
                  isClean());
          includedExample_ = null;
        }
        return includedExampleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.MultipleExample)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.MultipleExample)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultipleExample>
        PARSER = new com.google.protobuf.AbstractParser<MultipleExample>() {
      @java.lang.Override
      public MultipleExample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MultipleExample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleExample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.MultipleExample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface recursiveAOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.recursiveA)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyA = 1;</code>
     * @return The keyA.
     */
    java.lang.String getKeyA();
    /**
     * <code>string keyA = 1;</code>
     * @return The bytes for keyA.
     */
    com.google.protobuf.ByteString
        getKeyABytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     * @return Whether the messageB field is set.
     */
    boolean hasMessageB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     * @return The messageB.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getMessageB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder getMessageBOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveA}
   */
  public static final class recursiveA extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.recursiveA)
      recursiveAOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use recursiveA.newBuilder() to construct.
    private recursiveA(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private recursiveA() {
      keyA_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new recursiveA();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder.class);
    }

    public static final int KEYA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object keyA_ = "";
    /**
     * <code>string keyA = 1;</code>
     * @return The keyA.
     */
    @java.lang.Override
    public java.lang.String getKeyA() {
      java.lang.Object ref = keyA_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyA_ = s;
        return s;
      }
    }
    /**
     * <code>string keyA = 1;</code>
     * @return The bytes for keyA.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyABytes() {
      java.lang.Object ref = keyA_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyA_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGEB_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB messageB_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     * @return Whether the messageB field is set.
     */
    @java.lang.Override
    public boolean hasMessageB() {
      return messageB_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     * @return The messageB.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getMessageB() {
      return messageB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.getDefaultInstance() : messageB_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder getMessageBOrBuilder() {
      return messageB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.getDefaultInstance() : messageB_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyA_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyA_);
      }
      if (messageB_ != null) {
        output.writeMessage(2, getMessageB());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyA_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyA_);
      }
      if (messageB_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMessageB());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA) obj;

      if (!getKeyA()
          .equals(other.getKeyA())) return false;
      if (hasMessageB() != other.hasMessageB()) return false;
      if (hasMessageB()) {
        if (!getMessageB()
            .equals(other.getMessageB())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYA_FIELD_NUMBER;
      hash = (53 * hash) + getKeyA().hashCode();
      if (hasMessageB()) {
        hash = (37 * hash) + MESSAGEB_FIELD_NUMBER;
        hash = (53 * hash) + getMessageB().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveA}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.recursiveA)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyA_ = "";
        messageB_ = null;
        if (messageBBuilder_ != null) {
          messageBBuilder_.dispose();
          messageBBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyA_ = keyA_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.messageB_ = messageBBuilder_ == null
              ? messageB_
              : messageBBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKeyA().isEmpty()) {
          keyA_ = other.keyA_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasMessageB()) {
          mergeMessageB(other.getMessageB());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                keyA_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMessageBFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object keyA_ = "";
      /**
       * <code>string keyA = 1;</code>
       * @return The keyA.
       */
      public java.lang.String getKeyA() {
        java.lang.Object ref = keyA_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyA_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string keyA = 1;</code>
       * @return The bytes for keyA.
       */
      public com.google.protobuf.ByteString
          getKeyABytes() {
        java.lang.Object ref = keyA_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyA_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyA = 1;</code>
       * @param value The keyA to set.
       * @return This builder for chaining.
       */
      public Builder setKeyA(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        keyA_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string keyA = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyA() {
        keyA_ = getDefaultInstance().getKeyA();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string keyA = 1;</code>
       * @param value The bytes for keyA to set.
       * @return This builder for chaining.
       */
      public Builder setKeyABytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        keyA_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB messageB_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder> messageBBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       * @return Whether the messageB field is set.
       */
      public boolean hasMessageB() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       * @return The messageB.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getMessageB() {
        if (messageBBuilder_ == null) {
          return messageB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.getDefaultInstance() : messageB_;
        } else {
          return messageBBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public Builder setMessageB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB value) {
        if (messageBBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageB_ = value;
        } else {
          messageBBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public Builder setMessageB(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder builderForValue) {
        if (messageBBuilder_ == null) {
          messageB_ = builderForValue.build();
        } else {
          messageBBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public Builder mergeMessageB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB value) {
        if (messageBBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            messageB_ != null &&
            messageB_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.getDefaultInstance()) {
            getMessageBBuilder().mergeFrom(value);
          } else {
            messageB_ = value;
          }
        } else {
          messageBBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public Builder clearMessageB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageB_ = null;
        if (messageBBuilder_ != null) {
          messageBBuilder_.dispose();
          messageBBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder getMessageBBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMessageBFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder getMessageBOrBuilder() {
        if (messageBBuilder_ != null) {
          return messageBBuilder_.getMessageOrBuilder();
        } else {
          return messageB_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.getDefaultInstance() : messageB_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveB messageB = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder> 
          getMessageBFieldBuilder() {
        if (messageBBuilder_ == null) {
          messageBBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder>(
                  getMessageB(),
                  getParentForChildren(),
                  isClean());
          messageB_ = null;
        }
        return messageBBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.recursiveA)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.recursiveA)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<recursiveA>
        PARSER = new com.google.protobuf.AbstractParser<recursiveA>() {
      @java.lang.Override
      public recursiveA parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<recursiveA> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<recursiveA> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface recursiveBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.recursiveB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyB = 1;</code>
     * @return The keyB.
     */
    java.lang.String getKeyB();
    /**
     * <code>string keyB = 1;</code>
     * @return The bytes for keyB.
     */
    com.google.protobuf.ByteString
        getKeyBBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     * @return Whether the messageA field is set.
     */
    boolean hasMessageA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     * @return The messageA.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getMessageA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder getMessageAOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveB}
   */
  public static final class recursiveB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.recursiveB)
      recursiveBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use recursiveB.newBuilder() to construct.
    private recursiveB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private recursiveB() {
      keyB_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new recursiveB();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder.class);
    }

    public static final int KEYB_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object keyB_ = "";
    /**
     * <code>string keyB = 1;</code>
     * @return The keyB.
     */
    @java.lang.Override
    public java.lang.String getKeyB() {
      java.lang.Object ref = keyB_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyB_ = s;
        return s;
      }
    }
    /**
     * <code>string keyB = 1;</code>
     * @return The bytes for keyB.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBBytes() {
      java.lang.Object ref = keyB_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyB_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGEA_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA messageA_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     * @return Whether the messageA field is set.
     */
    @java.lang.Override
    public boolean hasMessageA() {
      return messageA_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     * @return The messageA.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getMessageA() {
      return messageA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.getDefaultInstance() : messageA_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder getMessageAOrBuilder() {
      return messageA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.getDefaultInstance() : messageA_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyB_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyB_);
      }
      if (messageA_ != null) {
        output.writeMessage(2, getMessageA());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyB_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyB_);
      }
      if (messageA_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMessageA());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB) obj;

      if (!getKeyB()
          .equals(other.getKeyB())) return false;
      if (hasMessageA() != other.hasMessageA()) return false;
      if (hasMessageA()) {
        if (!getMessageA()
            .equals(other.getMessageA())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYB_FIELD_NUMBER;
      hash = (53 * hash) + getKeyB().hashCode();
      if (hasMessageA()) {
        hash = (37 * hash) + MESSAGEA_FIELD_NUMBER;
        hash = (53 * hash) + getMessageA().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.recursiveB)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyB_ = "";
        messageA_ = null;
        if (messageABuilder_ != null) {
          messageABuilder_.dispose();
          messageABuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyB_ = keyB_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.messageA_ = messageABuilder_ == null
              ? messageA_
              : messageABuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKeyB().isEmpty()) {
          keyB_ = other.keyB_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasMessageA()) {
          mergeMessageA(other.getMessageA());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                keyB_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMessageAFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object keyB_ = "";
      /**
       * <code>string keyB = 1;</code>
       * @return The keyB.
       */
      public java.lang.String getKeyB() {
        java.lang.Object ref = keyB_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyB_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string keyB = 1;</code>
       * @return The bytes for keyB.
       */
      public com.google.protobuf.ByteString
          getKeyBBytes() {
        java.lang.Object ref = keyB_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyB_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyB = 1;</code>
       * @param value The keyB to set.
       * @return This builder for chaining.
       */
      public Builder setKeyB(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        keyB_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string keyB = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyB() {
        keyB_ = getDefaultInstance().getKeyB();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string keyB = 1;</code>
       * @param value The bytes for keyB to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        keyB_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA messageA_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder> messageABuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       * @return Whether the messageA field is set.
       */
      public boolean hasMessageA() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       * @return The messageA.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA getMessageA() {
        if (messageABuilder_ == null) {
          return messageA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.getDefaultInstance() : messageA_;
        } else {
          return messageABuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public Builder setMessageA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA value) {
        if (messageABuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageA_ = value;
        } else {
          messageABuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public Builder setMessageA(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder builderForValue) {
        if (messageABuilder_ == null) {
          messageA_ = builderForValue.build();
        } else {
          messageABuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public Builder mergeMessageA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA value) {
        if (messageABuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            messageA_ != null &&
            messageA_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.getDefaultInstance()) {
            getMessageABuilder().mergeFrom(value);
          } else {
            messageA_ = value;
          }
        } else {
          messageABuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public Builder clearMessageA() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageA_ = null;
        if (messageABuilder_ != null) {
          messageABuilder_.dispose();
          messageABuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder getMessageABuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMessageAFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder getMessageAOrBuilder() {
        if (messageABuilder_ != null) {
          return messageABuilder_.getMessageOrBuilder();
        } else {
          return messageA_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.getDefaultInstance() : messageA_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveA messageA = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder> 
          getMessageAFieldBuilder() {
        if (messageABuilder_ == null) {
          messageABuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveAOrBuilder>(
                  getMessageA(),
                  getParentForChildren(),
                  isClean());
          messageA_ = null;
        }
        return messageABuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.recursiveB)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.recursiveB)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<recursiveB>
        PARSER = new com.google.protobuf.AbstractParser<recursiveB>() {
      @java.lang.Override
      public recursiveB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<recursiveB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<recursiveB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface recursiveCOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.recursiveC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyC = 1;</code>
     * @return The keyC.
     */
    java.lang.String getKeyC();
    /**
     * <code>string keyC = 1;</code>
     * @return The bytes for keyC.
     */
    com.google.protobuf.ByteString
        getKeyCBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     * @return Whether the messageD field is set.
     */
    boolean hasMessageD();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     * @return The messageD.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getMessageD();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder getMessageDOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveC}
   */
  public static final class recursiveC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.recursiveC)
      recursiveCOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use recursiveC.newBuilder() to construct.
    private recursiveC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private recursiveC() {
      keyC_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new recursiveC();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder.class);
    }

    public static final int KEYC_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object keyC_ = "";
    /**
     * <code>string keyC = 1;</code>
     * @return The keyC.
     */
    @java.lang.Override
    public java.lang.String getKeyC() {
      java.lang.Object ref = keyC_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyC_ = s;
        return s;
      }
    }
    /**
     * <code>string keyC = 1;</code>
     * @return The bytes for keyC.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyCBytes() {
      java.lang.Object ref = keyC_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyC_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGED_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD messageD_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     * @return Whether the messageD field is set.
     */
    @java.lang.Override
    public boolean hasMessageD() {
      return messageD_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     * @return The messageD.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getMessageD() {
      return messageD_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.getDefaultInstance() : messageD_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder getMessageDOrBuilder() {
      return messageD_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.getDefaultInstance() : messageD_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyC_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyC_);
      }
      if (messageD_ != null) {
        output.writeMessage(2, getMessageD());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyC_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyC_);
      }
      if (messageD_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMessageD());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC) obj;

      if (!getKeyC()
          .equals(other.getKeyC())) return false;
      if (hasMessageD() != other.hasMessageD()) return false;
      if (hasMessageD()) {
        if (!getMessageD()
            .equals(other.getMessageD())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYC_FIELD_NUMBER;
      hash = (53 * hash) + getKeyC().hashCode();
      if (hasMessageD()) {
        hash = (37 * hash) + MESSAGED_FIELD_NUMBER;
        hash = (53 * hash) + getMessageD().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.recursiveC)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyC_ = "";
        messageD_ = null;
        if (messageDBuilder_ != null) {
          messageDBuilder_.dispose();
          messageDBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyC_ = keyC_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.messageD_ = messageDBuilder_ == null
              ? messageD_
              : messageDBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKeyC().isEmpty()) {
          keyC_ = other.keyC_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasMessageD()) {
          mergeMessageD(other.getMessageD());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                keyC_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMessageDFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object keyC_ = "";
      /**
       * <code>string keyC = 1;</code>
       * @return The keyC.
       */
      public java.lang.String getKeyC() {
        java.lang.Object ref = keyC_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyC_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string keyC = 1;</code>
       * @return The bytes for keyC.
       */
      public com.google.protobuf.ByteString
          getKeyCBytes() {
        java.lang.Object ref = keyC_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyC_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyC = 1;</code>
       * @param value The keyC to set.
       * @return This builder for chaining.
       */
      public Builder setKeyC(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        keyC_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string keyC = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyC() {
        keyC_ = getDefaultInstance().getKeyC();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string keyC = 1;</code>
       * @param value The bytes for keyC to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        keyC_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD messageD_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder> messageDBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       * @return Whether the messageD field is set.
       */
      public boolean hasMessageD() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       * @return The messageD.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getMessageD() {
        if (messageDBuilder_ == null) {
          return messageD_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.getDefaultInstance() : messageD_;
        } else {
          return messageDBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public Builder setMessageD(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD value) {
        if (messageDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageD_ = value;
        } else {
          messageDBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public Builder setMessageD(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder builderForValue) {
        if (messageDBuilder_ == null) {
          messageD_ = builderForValue.build();
        } else {
          messageDBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public Builder mergeMessageD(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD value) {
        if (messageDBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            messageD_ != null &&
            messageD_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.getDefaultInstance()) {
            getMessageDBuilder().mergeFrom(value);
          } else {
            messageD_ = value;
          }
        } else {
          messageDBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public Builder clearMessageD() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageD_ = null;
        if (messageDBuilder_ != null) {
          messageDBuilder_.dispose();
          messageDBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder getMessageDBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMessageDFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder getMessageDOrBuilder() {
        if (messageDBuilder_ != null) {
          return messageDBuilder_.getMessageOrBuilder();
        } else {
          return messageD_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.getDefaultInstance() : messageD_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.recursiveD messageD = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder> 
          getMessageDFieldBuilder() {
        if (messageDBuilder_ == null) {
          messageDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder>(
                  getMessageD(),
                  getParentForChildren(),
                  isClean());
          messageD_ = null;
        }
        return messageDBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.recursiveC)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.recursiveC)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<recursiveC>
        PARSER = new com.google.protobuf.AbstractParser<recursiveC>() {
      @java.lang.Override
      public recursiveC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<recursiveC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<recursiveC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface recursiveDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.recursiveD)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyD = 1;</code>
     * @return The keyD.
     */
    java.lang.String getKeyD();
    /**
     * <code>string keyD = 1;</code>
     * @return The bytes for keyD.
     */
    com.google.protobuf.ByteString
        getKeyDBytes();

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> 
        getMessageCList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getMessageC(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    int getMessageCCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder> 
        getMessageCOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder getMessageCOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveD}
   */
  public static final class recursiveD extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.recursiveD)
      recursiveDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use recursiveD.newBuilder() to construct.
    private recursiveD(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private recursiveD() {
      keyD_ = "";
      messageC_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new recursiveD();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder.class);
    }

    public static final int KEYD_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object keyD_ = "";
    /**
     * <code>string keyD = 1;</code>
     * @return The keyD.
     */
    @java.lang.Override
    public java.lang.String getKeyD() {
      java.lang.Object ref = keyD_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyD_ = s;
        return s;
      }
    }
    /**
     * <code>string keyD = 1;</code>
     * @return The bytes for keyD.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyDBytes() {
      java.lang.Object ref = keyD_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyD_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGEC_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> messageC_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> getMessageCList() {
      return messageC_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder> 
        getMessageCOrBuilderList() {
      return messageC_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    @java.lang.Override
    public int getMessageCCount() {
      return messageC_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getMessageC(int index) {
      return messageC_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder getMessageCOrBuilder(
        int index) {
      return messageC_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyD_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyD_);
      }
      for (int i = 0; i < messageC_.size(); i++) {
        output.writeMessage(2, messageC_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyD_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyD_);
      }
      for (int i = 0; i < messageC_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, messageC_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD) obj;

      if (!getKeyD()
          .equals(other.getKeyD())) return false;
      if (!getMessageCList()
          .equals(other.getMessageCList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYD_FIELD_NUMBER;
      hash = (53 * hash) + getKeyD().hashCode();
      if (getMessageCCount() > 0) {
        hash = (37 * hash) + MESSAGEC_FIELD_NUMBER;
        hash = (53 * hash) + getMessageCList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.recursiveD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.recursiveD)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyD_ = "";
        if (messageCBuilder_ == null) {
          messageC_ = java.util.Collections.emptyList();
        } else {
          messageC_ = null;
          messageCBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD result) {
        if (messageCBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            messageC_ = java.util.Collections.unmodifiableList(messageC_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.messageC_ = messageC_;
        } else {
          result.messageC_ = messageCBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyD_ = keyD_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKeyD().isEmpty()) {
          keyD_ = other.keyD_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (messageCBuilder_ == null) {
          if (!other.messageC_.isEmpty()) {
            if (messageC_.isEmpty()) {
              messageC_ = other.messageC_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageCIsMutable();
              messageC_.addAll(other.messageC_);
            }
            onChanged();
          }
        } else {
          if (!other.messageC_.isEmpty()) {
            if (messageCBuilder_.isEmpty()) {
              messageCBuilder_.dispose();
              messageCBuilder_ = null;
              messageC_ = other.messageC_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageCBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageCFieldBuilder() : null;
            } else {
              messageCBuilder_.addAllMessages(other.messageC_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                keyD_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC m =
                    input.readMessage(
                        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.parser(),
                        extensionRegistry);
                if (messageCBuilder_ == null) {
                  ensureMessageCIsMutable();
                  messageC_.add(m);
                } else {
                  messageCBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object keyD_ = "";
      /**
       * <code>string keyD = 1;</code>
       * @return The keyD.
       */
      public java.lang.String getKeyD() {
        java.lang.Object ref = keyD_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyD_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string keyD = 1;</code>
       * @return The bytes for keyD.
       */
      public com.google.protobuf.ByteString
          getKeyDBytes() {
        java.lang.Object ref = keyD_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyD_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyD = 1;</code>
       * @param value The keyD to set.
       * @return This builder for chaining.
       */
      public Builder setKeyD(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        keyD_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string keyD = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyD() {
        keyD_ = getDefaultInstance().getKeyD();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string keyD = 1;</code>
       * @param value The bytes for keyD to set.
       * @return This builder for chaining.
       */
      public Builder setKeyDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        keyD_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> messageC_ =
        java.util.Collections.emptyList();
      private void ensureMessageCIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          messageC_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC>(messageC_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder> messageCBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> getMessageCList() {
        if (messageCBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messageC_);
        } else {
          return messageCBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public int getMessageCCount() {
        if (messageCBuilder_ == null) {
          return messageC_.size();
        } else {
          return messageCBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC getMessageC(int index) {
        if (messageCBuilder_ == null) {
          return messageC_.get(index);
        } else {
          return messageCBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder setMessageC(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC value) {
        if (messageCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageCIsMutable();
          messageC_.set(index, value);
          onChanged();
        } else {
          messageCBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder setMessageC(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder builderForValue) {
        if (messageCBuilder_ == null) {
          ensureMessageCIsMutable();
          messageC_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageCBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder addMessageC(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC value) {
        if (messageCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageCIsMutable();
          messageC_.add(value);
          onChanged();
        } else {
          messageCBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder addMessageC(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC value) {
        if (messageCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageCIsMutable();
          messageC_.add(index, value);
          onChanged();
        } else {
          messageCBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder addMessageC(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder builderForValue) {
        if (messageCBuilder_ == null) {
          ensureMessageCIsMutable();
          messageC_.add(builderForValue.build());
          onChanged();
        } else {
          messageCBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder addMessageC(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder builderForValue) {
        if (messageCBuilder_ == null) {
          ensureMessageCIsMutable();
          messageC_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageCBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder addAllMessageC(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC> values) {
        if (messageCBuilder_ == null) {
          ensureMessageCIsMutable();
          addAll(
              values, messageC_);
          onChanged();
        } else {
          messageCBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder clearMessageC() {
        if (messageCBuilder_ == null) {
          messageC_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageCBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public Builder removeMessageC(int index) {
        if (messageCBuilder_ == null) {
          ensureMessageCIsMutable();
          messageC_.remove(index);
          onChanged();
        } else {
          messageCBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder getMessageCBuilder(
          int index) {
        return getMessageCFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder getMessageCOrBuilder(
          int index) {
        if (messageCBuilder_ == null) {
          return messageC_.get(index);  } else {
          return messageCBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder> 
           getMessageCOrBuilderList() {
        if (messageCBuilder_ != null) {
          return messageCBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messageC_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder addMessageCBuilder() {
        return getMessageCFieldBuilder().addBuilder(
            org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder addMessageCBuilder(
          int index) {
        return getMessageCFieldBuilder().addBuilder(
            index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.recursiveC messageC = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder> 
           getMessageCBuilderList() {
        return getMessageCFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder> 
          getMessageCFieldBuilder() {
        if (messageCBuilder_ == null) {
          messageCBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveCOrBuilder>(
                  messageC_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          messageC_ = null;
        }
        return messageCBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.recursiveD)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.recursiveD)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<recursiveD>
        PARSER = new com.google.protobuf.AbstractParser<recursiveD>() {
      @java.lang.Override
      public recursiveD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<recursiveD> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<recursiveD> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.recursiveD getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface requiredMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.requiredMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    int getCol1();

    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    java.lang.String getCol2();
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    com.google.protobuf.ByteString
        getCol2Bytes();

    /**
     * <code>int32 col_3 = 4;</code>
     * @return The col3.
     */
    int getCol3();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.requiredMsg}
   */
  public static final class requiredMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.requiredMsg)
      requiredMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use requiredMsg.newBuilder() to construct.
    private requiredMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private requiredMsg() {
      key_ = "";
      col2_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new requiredMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_1_FIELD_NUMBER = 2;
    private int col1_ = 0;
    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    @java.lang.Override
    public int getCol1() {
      return col1_;
    }

    public static final int COL_2_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object col2_ = "";
    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    @java.lang.Override
    public java.lang.String getCol2() {
      java.lang.Object ref = col2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        col2_ = s;
        return s;
      }
    }
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCol2Bytes() {
      java.lang.Object ref = col2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        col2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_3_FIELD_NUMBER = 4;
    private int col3_ = 0;
    /**
     * <code>int32 col_3 = 4;</code>
     * @return The col3.
     */
    @java.lang.Override
    public int getCol3() {
      return col3_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (col1_ != 0) {
        output.writeInt32(2, col1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col2_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, col2_);
      }
      if (col3_ != 0) {
        output.writeInt32(4, col3_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (col1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, col1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col2_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, col2_);
      }
      if (col3_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, col3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (getCol1()
          != other.getCol1()) return false;
      if (!getCol2()
          .equals(other.getCol2())) return false;
      if (getCol3()
          != other.getCol3()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + COL_1_FIELD_NUMBER;
      hash = (53 * hash) + getCol1();
      hash = (37 * hash) + COL_2_FIELD_NUMBER;
      hash = (53 * hash) + getCol2().hashCode();
      hash = (37 * hash) + COL_3_FIELD_NUMBER;
      hash = (53 * hash) + getCol3();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.requiredMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.requiredMsg)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        col1_ = 0;
        col2_ = "";
        col3_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.col1_ = col1_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.col2_ = col2_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.col3_ = col3_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getCol1() != 0) {
          setCol1(other.getCol1());
        }
        if (!other.getCol2().isEmpty()) {
          col2_ = other.col2_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getCol3() != 0) {
          setCol3(other.getCol3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                col1_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                col2_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                col3_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int col1_ ;
      /**
       * <code>int32 col_1 = 2;</code>
       * @return The col1.
       */
      @java.lang.Override
      public int getCol1() {
        return col1_;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @param value The col1 to set.
       * @return This builder for chaining.
       */
      public Builder setCol1(int value) {

        col1_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        col1_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object col2_ = "";
      /**
       * <code>string col_2 = 3;</code>
       * @return The col2.
       */
      public java.lang.String getCol2() {
        java.lang.Object ref = col2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          col2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return The bytes for col2.
       */
      public com.google.protobuf.ByteString
          getCol2Bytes() {
        java.lang.Object ref = col2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          col2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        col2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol2() {
        col2_ = getDefaultInstance().getCol2();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The bytes for col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        col2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int col3_ ;
      /**
       * <code>int32 col_3 = 4;</code>
       * @return The col3.
       */
      @java.lang.Override
      public int getCol3() {
        return col3_;
      }
      /**
       * <code>int32 col_3 = 4;</code>
       * @param value The col3 to set.
       * @return This builder for chaining.
       */
      public Builder setCol3(int value) {

        col3_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 col_3 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        col3_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.requiredMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.requiredMsg)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<requiredMsg>
        PARSER = new com.google.protobuf.AbstractParser<requiredMsg>() {
      @java.lang.Override
      public requiredMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<requiredMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<requiredMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.requiredMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface timeStampMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.timeStampMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     * @return Whether the stmp field is set.
     */
    boolean hasStmp();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     * @return The stmp.
     */
    org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getStmp();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getStmpOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.timeStampMsg}
   */
  public static final class timeStampMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.timeStampMsg)
      timeStampMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use timeStampMsg.newBuilder() to construct.
    private timeStampMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private timeStampMsg() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new timeStampMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STMP_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp stmp_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     * @return Whether the stmp field is set.
     */
    @java.lang.Override
    public boolean hasStmp() {
      return stmp_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     * @return The stmp.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getStmp() {
      return stmp_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : stmp_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getStmpOrBuilder() {
      return stmp_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : stmp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (stmp_ != null) {
        output.writeMessage(2, getStmp());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (stmp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStmp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (hasStmp() != other.hasStmp()) return false;
      if (hasStmp()) {
        if (!getStmp()
            .equals(other.getStmp())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (hasStmp()) {
        hash = (37 * hash) + STMP_FIELD_NUMBER;
        hash = (53 * hash) + getStmp().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.timeStampMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.timeStampMsg)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        stmp_ = null;
        if (stmpBuilder_ != null) {
          stmpBuilder_.dispose();
          stmpBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stmp_ = stmpBuilder_ == null
              ? stmp_
              : stmpBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasStmp()) {
          mergeStmp(other.getStmp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getStmpFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp stmp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder> stmpBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       * @return Whether the stmp field is set.
       */
      public boolean hasStmp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       * @return The stmp.
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getStmp() {
        if (stmpBuilder_ == null) {
          return stmp_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : stmp_;
        } else {
          return stmpBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public Builder setStmp(org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp value) {
        if (stmpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stmp_ = value;
        } else {
          stmpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public Builder setStmp(
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder builderForValue) {
        if (stmpBuilder_ == null) {
          stmp_ = builderForValue.build();
        } else {
          stmpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public Builder mergeStmp(org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp value) {
        if (stmpBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            stmp_ != null &&
            stmp_ != org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance()) {
            getStmpBuilder().mergeFrom(value);
          } else {
            stmp_ = value;
          }
        } else {
          stmpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public Builder clearStmp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stmp_ = null;
        if (stmpBuilder_ != null) {
          stmpBuilder_.dispose();
          stmpBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder getStmpBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStmpFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getStmpOrBuilder() {
        if (stmpBuilder_ != null) {
          return stmpBuilder_.getMessageOrBuilder();
        } else {
          return stmp_ == null ?
              org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : stmp_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp stmp = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder> 
          getStmpFieldBuilder() {
        if (stmpBuilder_ == null) {
          stmpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder>(
                  getStmp(),
                  getParentForChildren(),
                  isClean());
          stmp_ = null;
        }
        return stmpBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.timeStampMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.timeStampMsg)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<timeStampMsg>
        PARSER = new com.google.protobuf.AbstractParser<timeStampMsg>() {
      @java.lang.Override
      public timeStampMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<timeStampMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<timeStampMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.timeStampMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface durationMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.durationMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     * @return Whether the duration field is set.
     */
    boolean hasDuration();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     * @return The duration.
     */
    org.apache.spark.sql.protobuf.protos.DurationProto.Duration getDuration();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder getDurationOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.durationMsg}
   */
  public static final class durationMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.durationMsg)
      durationMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use durationMsg.newBuilder() to construct.
    private durationMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private durationMsg() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new durationMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.DurationProto.Duration duration_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     * @return Whether the duration field is set.
     */
    @java.lang.Override
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     * @return The duration.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.DurationProto.Duration getDuration() {
      return duration_ == null ? org.apache.spark.sql.protobuf.protos.DurationProto.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder getDurationOrBuilder() {
      return duration_ == null ? org.apache.spark.sql.protobuf.protos.DurationProto.Duration.getDefaultInstance() : duration_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (duration_ != null) {
        output.writeMessage(2, getDuration());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (duration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDuration());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (!getDuration()
            .equals(other.getDuration())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.durationMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.durationMsg)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        duration_ = null;
        if (durationBuilder_ != null) {
          durationBuilder_.dispose();
          durationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.duration_ = durationBuilder_ == null
              ? duration_
              : durationBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDuration()) {
          mergeDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getDurationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.DurationProto.Duration duration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.DurationProto.Duration, org.apache.spark.sql.protobuf.protos.DurationProto.Duration.Builder, org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder> durationBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       * @return Whether the duration field is set.
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       * @return The duration.
       */
      public org.apache.spark.sql.protobuf.protos.DurationProto.Duration getDuration() {
        if (durationBuilder_ == null) {
          return duration_ == null ? org.apache.spark.sql.protobuf.protos.DurationProto.Duration.getDefaultInstance() : duration_;
        } else {
          return durationBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public Builder setDuration(org.apache.spark.sql.protobuf.protos.DurationProto.Duration value) {
        if (durationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          duration_ = value;
        } else {
          durationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public Builder setDuration(
          org.apache.spark.sql.protobuf.protos.DurationProto.Duration.Builder builderForValue) {
        if (durationBuilder_ == null) {
          duration_ = builderForValue.build();
        } else {
          durationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public Builder mergeDuration(org.apache.spark.sql.protobuf.protos.DurationProto.Duration value) {
        if (durationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            duration_ != null &&
            duration_ != org.apache.spark.sql.protobuf.protos.DurationProto.Duration.getDefaultInstance()) {
            getDurationBuilder().mergeFrom(value);
          } else {
            duration_ = value;
          }
        } else {
          durationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = null;
        if (durationBuilder_ != null) {
          durationBuilder_.dispose();
          durationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.DurationProto.Duration.Builder getDurationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDurationFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder getDurationOrBuilder() {
        if (durationBuilder_ != null) {
          return durationBuilder_.getMessageOrBuilder();
        } else {
          return duration_ == null ?
              org.apache.spark.sql.protobuf.protos.DurationProto.Duration.getDefaultInstance() : duration_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Duration duration = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.DurationProto.Duration, org.apache.spark.sql.protobuf.protos.DurationProto.Duration.Builder, org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder> 
          getDurationFieldBuilder() {
        if (durationBuilder_ == null) {
          durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.DurationProto.Duration, org.apache.spark.sql.protobuf.protos.DurationProto.Duration.Builder, org.apache.spark.sql.protobuf.protos.DurationProto.DurationOrBuilder>(
                  getDuration(),
                  getParentForChildren(),
                  isClean());
          duration_ = null;
        }
        return durationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.durationMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.durationMsg)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<durationMsg>
        PARSER = new com.google.protobuf.AbstractParser<durationMsg>() {
      @java.lang.Override
      public durationMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<durationMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<durationMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.durationMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OneOfEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.OneOfEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>int32 col_1 = 2;</code>
     * @return Whether the col1 field is set.
     */
    boolean hasCol1();
    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    int getCol1();

    /**
     * <code>string col_2 = 3;</code>
     * @return Whether the col2 field is set.
     */
    boolean hasCol2();
    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    java.lang.String getCol2();
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    com.google.protobuf.ByteString
        getCol2Bytes();

    /**
     * <code>int64 col_3 = 4;</code>
     * @return Whether the col3 field is set.
     */
    boolean hasCol3();
    /**
     * <code>int64 col_3 = 4;</code>
     * @return The col3.
     */
    long getCol3();

    /**
     * <code>repeated string col_4 = 5;</code>
     * @return A list containing the col4.
     */
    java.util.List<java.lang.String>
        getCol4List();
    /**
     * <code>repeated string col_4 = 5;</code>
     * @return The count of col4.
     */
    int getCol4Count();
    /**
     * <code>repeated string col_4 = 5;</code>
     * @param index The index of the element to return.
     * @return The col4 at the given index.
     */
    java.lang.String getCol4(int index);
    /**
     * <code>repeated string col_4 = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the col4 at the given index.
     */
    com.google.protobuf.ByteString
        getCol4Bytes(int index);

    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.PayloadCase getPayloadCase();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OneOfEvent}
   */
  public static final class OneOfEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.OneOfEvent)
      OneOfEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OneOfEvent.newBuilder() to construct.
    private OneOfEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OneOfEvent() {
      key_ = "";
      col4_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OneOfEvent();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.Builder.class);
    }

    private int payloadCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      COL_1(2),
      COL_2(3),
      COL_3(4),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 2: return COL_1;
          case 3: return COL_2;
          case 4: return COL_3;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_1_FIELD_NUMBER = 2;
    /**
     * <code>int32 col_1 = 2;</code>
     * @return Whether the col1 field is set.
     */
    @java.lang.Override
    public boolean hasCol1() {
      return payloadCase_ == 2;
    }
    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    @java.lang.Override
    public int getCol1() {
      if (payloadCase_ == 2) {
        return (java.lang.Integer) payload_;
      }
      return 0;
    }

    public static final int COL_2_FIELD_NUMBER = 3;
    /**
     * <code>string col_2 = 3;</code>
     * @return Whether the col2 field is set.
     */
    public boolean hasCol2() {
      return payloadCase_ == 3;
    }
    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    public java.lang.String getCol2() {
      java.lang.Object ref = "";
      if (payloadCase_ == 3) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (payloadCase_ == 3) {
          payload_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    public com.google.protobuf.ByteString
        getCol2Bytes() {
      java.lang.Object ref = "";
      if (payloadCase_ == 3) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (payloadCase_ == 3) {
          payload_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_3_FIELD_NUMBER = 4;
    /**
     * <code>int64 col_3 = 4;</code>
     * @return Whether the col3 field is set.
     */
    @java.lang.Override
    public boolean hasCol3() {
      return payloadCase_ == 4;
    }
    /**
     * <code>int64 col_3 = 4;</code>
     * @return The col3.
     */
    @java.lang.Override
    public long getCol3() {
      if (payloadCase_ == 4) {
        return (java.lang.Long) payload_;
      }
      return 0L;
    }

    public static final int COL_4_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList col4_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string col_4 = 5;</code>
     * @return A list containing the col4.
     */
    public com.google.protobuf.ProtocolStringList
        getCol4List() {
      return col4_;
    }
    /**
     * <code>repeated string col_4 = 5;</code>
     * @return The count of col4.
     */
    public int getCol4Count() {
      return col4_.size();
    }
    /**
     * <code>repeated string col_4 = 5;</code>
     * @param index The index of the element to return.
     * @return The col4 at the given index.
     */
    public java.lang.String getCol4(int index) {
      return col4_.get(index);
    }
    /**
     * <code>repeated string col_4 = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the col4 at the given index.
     */
    public com.google.protobuf.ByteString
        getCol4Bytes(int index) {
      return col4_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (payloadCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, payload_);
      }
      if (payloadCase_ == 4) {
        output.writeInt64(
            4, (long)((java.lang.Long) payload_));
      }
      for (int i = 0; i < col4_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, col4_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (payloadCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, payload_);
      }
      if (payloadCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              4, (long)((java.lang.Long) payload_));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < col4_.size(); i++) {
          dataSize += computeStringSizeNoTag(col4_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCol4List().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getCol4List()
          .equals(other.getCol4List())) return false;
      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 2:
          if (getCol1()
              != other.getCol1()) return false;
          break;
        case 3:
          if (!getCol2()
              .equals(other.getCol2())) return false;
          break;
        case 4:
          if (getCol3()
              != other.getCol3()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (getCol4Count() > 0) {
        hash = (37 * hash) + COL_4_FIELD_NUMBER;
        hash = (53 * hash) + getCol4List().hashCode();
      }
      switch (payloadCase_) {
        case 2:
          hash = (37 * hash) + COL_1_FIELD_NUMBER;
          hash = (53 * hash) + getCol1();
          break;
        case 3:
          hash = (37 * hash) + COL_2_FIELD_NUMBER;
          hash = (53 * hash) + getCol2().hashCode();
          break;
        case 4:
          hash = (37 * hash) + COL_3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCol3());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OneOfEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.OneOfEvent)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        col4_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          col4_.makeImmutable();
          result.col4_ = col4_;
        }
      }

      private void buildPartialOneofs(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent result) {
        result.payloadCase_ = payloadCase_;
        result.payload_ = this.payload_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.col4_.isEmpty()) {
          if (col4_.isEmpty()) {
            col4_ = other.col4_;
            bitField0_ |= 0x00000010;
          } else {
            ensureCol4IsMutable();
            col4_.addAll(other.col4_);
          }
          onChanged();
        }
        switch (other.getPayloadCase()) {
          case COL_1: {
            setCol1(other.getCol1());
            break;
          }
          case COL_2: {
            payloadCase_ = 3;
            payload_ = other.payload_;
            onChanged();
            break;
          }
          case COL_3: {
            setCol3(other.getCol3());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                payload_ = input.readInt32();
                payloadCase_ = 2;
                break;
              } // case 16
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                payloadCase_ = 3;
                payload_ = s;
                break;
              } // case 26
              case 32: {
                payload_ = input.readInt64();
                payloadCase_ = 4;
                break;
              } // case 32
              case 42: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureCol4IsMutable();
                col4_.add(s);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       * <code>int32 col_1 = 2;</code>
       * @return Whether the col1 field is set.
       */
      public boolean hasCol1() {
        return payloadCase_ == 2;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @return The col1.
       */
      public int getCol1() {
        if (payloadCase_ == 2) {
          return (java.lang.Integer) payload_;
        }
        return 0;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @param value The col1 to set.
       * @return This builder for chaining.
       */
      public Builder setCol1(int value) {

        payloadCase_ = 2;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol1() {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string col_2 = 3;</code>
       * @return Whether the col2 field is set.
       */
      @java.lang.Override
      public boolean hasCol2() {
        return payloadCase_ == 3;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return The col2.
       */
      @java.lang.Override
      public java.lang.String getCol2() {
        java.lang.Object ref = "";
        if (payloadCase_ == 3) {
          ref = payload_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (payloadCase_ == 3) {
            payload_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return The bytes for col2.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCol2Bytes() {
        java.lang.Object ref = "";
        if (payloadCase_ == 3) {
          ref = payload_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (payloadCase_ == 3) {
            payload_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        payloadCase_ = 3;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol2() {
        if (payloadCase_ == 3) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The bytes for col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        payloadCase_ = 3;
        payload_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int64 col_3 = 4;</code>
       * @return Whether the col3 field is set.
       */
      public boolean hasCol3() {
        return payloadCase_ == 4;
      }
      /**
       * <code>int64 col_3 = 4;</code>
       * @return The col3.
       */
      public long getCol3() {
        if (payloadCase_ == 4) {
          return (java.lang.Long) payload_;
        }
        return 0L;
      }
      /**
       * <code>int64 col_3 = 4;</code>
       * @param value The col3 to set.
       * @return This builder for chaining.
       */
      public Builder setCol3(long value) {

        payloadCase_ = 4;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 col_3 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol3() {
        if (payloadCase_ == 4) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.LazyStringArrayList col4_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureCol4IsMutable() {
        if (!col4_.isModifiable()) {
          col4_ = new com.google.protobuf.LazyStringArrayList(col4_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @return A list containing the col4.
       */
      public com.google.protobuf.ProtocolStringList
          getCol4List() {
        col4_.makeImmutable();
        return col4_;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @return The count of col4.
       */
      public int getCol4Count() {
        return col4_.size();
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param index The index of the element to return.
       * @return The col4 at the given index.
       */
      public java.lang.String getCol4(int index) {
        return col4_.get(index);
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the col4 at the given index.
       */
      public com.google.protobuf.ByteString
          getCol4Bytes(int index) {
        return col4_.getByteString(index);
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param index The index to set the value at.
       * @param value The col4 to set.
       * @return This builder for chaining.
       */
      public Builder setCol4(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCol4IsMutable();
        col4_.set(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param value The col4 to add.
       * @return This builder for chaining.
       */
      public Builder addCol4(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCol4IsMutable();
        col4_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param values The col4 to add.
       * @return This builder for chaining.
       */
      public Builder addAllCol4(
          java.lang.Iterable<java.lang.String> values) {
        ensureCol4IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, col4_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol4() {
        col4_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string col_4 = 5;</code>
       * @param value The bytes of the col4 to add.
       * @return This builder for chaining.
       */
      public Builder addCol4Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureCol4IsMutable();
        col4_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.OneOfEvent)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.OneOfEvent)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OneOfEvent>
        PARSER = new com.google.protobuf.AbstractParser<OneOfEvent>() {
      @java.lang.Override
      public OneOfEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OneOfEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OneOfEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventWithRecursionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EventWithRecursion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 key = 1;</code>
     * @return The key.
     */
    int getKey();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     * @return Whether the a field is set.
     */
    boolean hasA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     * @return The a.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder getAOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventWithRecursion}
   */
  public static final class EventWithRecursion extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EventWithRecursion)
      EventWithRecursionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventWithRecursion.newBuilder() to construct.
    private EventWithRecursion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventWithRecursion() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventWithRecursion();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private int key_ = 0;
    /**
     * <code>int32 key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public int getKey() {
      return key_;
    }

    public static final int A_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA a_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     * @return Whether the a field is set.
     */
    @java.lang.Override
    public boolean hasA() {
      return a_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     * @return The a.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getA() {
      return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.getDefaultInstance() : a_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder getAOrBuilder() {
      return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.getDefaultInstance() : a_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != 0) {
        output.writeInt32(1, key_);
      }
      if (a_ != null) {
        output.writeMessage(2, getA());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, key_);
      }
      if (a_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getA());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion) obj;

      if (getKey()
          != other.getKey()) return false;
      if (hasA() != other.hasA()) return false;
      if (hasA()) {
        if (!getA()
            .equals(other.getA())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey();
      if (hasA()) {
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + getA().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventWithRecursion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EventWithRecursion)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = 0;
        a_ = null;
        if (aBuilder_ != null) {
          aBuilder_.dispose();
          aBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.a_ = aBuilder_ == null
              ? a_
              : aBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion other) {
        if (other == getDefaultInstance()) return this;
        if (other.getKey() != 0) {
          setKey(other.getKey());
        }
        if (other.hasA()) {
          mergeA(other.getA());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                key_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getAFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int key_ ;
      /**
       * <code>int32 key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public int getKey() {
        return key_;
      }
      /**
       * <code>int32 key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(int value) {

        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA a_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder> aBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       * @return Whether the a field is set.
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       * @return The a.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getA() {
        if (aBuilder_ == null) {
          return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.getDefaultInstance() : a_;
        } else {
          return aBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public Builder setA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA value) {
        if (aBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          a_ = value;
        } else {
          aBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public Builder setA(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder builderForValue) {
        if (aBuilder_ == null) {
          a_ = builderForValue.build();
        } else {
          aBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public Builder mergeA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA value) {
        if (aBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            a_ != null &&
            a_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.getDefaultInstance()) {
            getABuilder().mergeFrom(value);
          } else {
            a_ = value;
          }
        } else {
          aBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000002);
        a_ = null;
        if (aBuilder_ != null) {
          aBuilder_.dispose();
          aBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder getABuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder getAOrBuilder() {
        if (aBuilder_ != null) {
          return aBuilder_.getMessageOrBuilder();
        } else {
          return a_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.getDefaultInstance() : a_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageA a = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder> 
          getAFieldBuilder() {
        if (aBuilder_ == null) {
          aBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder>(
                  getA(),
                  getParentForChildren(),
                  isClean());
          a_ = null;
        }
        return aBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EventWithRecursion)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EventWithRecursion)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventWithRecursion>
        PARSER = new com.google.protobuf.AbstractParser<EventWithRecursion>() {
      @java.lang.Override
      public EventWithRecursion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventWithRecursion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventWithRecursion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface messageAOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.messageA)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     * @return Whether the a field is set.
     */
    boolean hasA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     * @return The a.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     * @return Whether the b field is set.
     */
    boolean hasB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     * @return The b.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder getBOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageA}
   */
  public static final class messageA extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.messageA)
      messageAOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use messageA.newBuilder() to construct.
    private messageA(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private messageA() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new messageA();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageA_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder.class);
    }

    public static final int A_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion a_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     * @return Whether the a field is set.
     */
    @java.lang.Override
    public boolean hasA() {
      return a_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     * @return The a.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getA() {
      return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : a_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAOrBuilder() {
      return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB b_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     * @return Whether the b field is set.
     */
    @java.lang.Override
    public boolean hasB() {
      return b_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     * @return The b.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getB() {
      return b_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.getDefaultInstance() : b_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder getBOrBuilder() {
      return b_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.getDefaultInstance() : b_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (a_ != null) {
        output.writeMessage(1, getA());
      }
      if (b_ != null) {
        output.writeMessage(2, getB());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (a_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getA());
      }
      if (b_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getB());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA) obj;

      if (hasA() != other.hasA()) return false;
      if (hasA()) {
        if (!getA()
            .equals(other.getA())) return false;
      }
      if (hasB() != other.hasB()) return false;
      if (hasB()) {
        if (!getB()
            .equals(other.getB())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasA()) {
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + getA().hashCode();
      }
      if (hasB()) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + getB().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageA}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.messageA)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageAOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageA_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        a_ = null;
        if (aBuilder_ != null) {
          aBuilder_.dispose();
          aBuilder_ = null;
        }
        b_ = null;
        if (bBuilder_ != null) {
          bBuilder_.dispose();
          bBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.a_ = aBuilder_ == null
              ? a_
              : aBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.b_ = bBuilder_ == null
              ? b_
              : bBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasA()) {
          mergeA(other.getA());
        }
        if (other.hasB()) {
          mergeB(other.getB());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getBFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion a_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> aBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       * @return Whether the a field is set.
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       * @return The a.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getA() {
        if (aBuilder_ == null) {
          return a_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : a_;
        } else {
          return aBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public Builder setA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          a_ = value;
        } else {
          aBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public Builder setA(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder builderForValue) {
        if (aBuilder_ == null) {
          a_ = builderForValue.build();
        } else {
          aBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public Builder mergeA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            a_ != null &&
            a_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance()) {
            getABuilder().mergeFrom(value);
          } else {
            a_ = value;
          }
        } else {
          aBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = null;
        if (aBuilder_ != null) {
          aBuilder_.dispose();
          aBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder getABuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAOrBuilder() {
        if (aBuilder_ != null) {
          return aBuilder_.getMessageOrBuilder();
        } else {
          return a_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : a_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion a = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> 
          getAFieldBuilder() {
        if (aBuilder_ == null) {
          aBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder>(
                  getA(),
                  getParentForChildren(),
                  isClean());
          a_ = null;
        }
        return aBuilder_;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB b_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder> bBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       * @return Whether the b field is set.
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       * @return The b.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getB() {
        if (bBuilder_ == null) {
          return b_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.getDefaultInstance() : b_;
        } else {
          return bBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public Builder setB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB value) {
        if (bBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b_ = value;
        } else {
          bBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public Builder setB(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder builderForValue) {
        if (bBuilder_ == null) {
          b_ = builderForValue.build();
        } else {
          bBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public Builder mergeB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB value) {
        if (bBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            b_ != null &&
            b_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.getDefaultInstance()) {
            getBBuilder().mergeFrom(value);
          } else {
            b_ = value;
          }
        } else {
          bBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = null;
        if (bBuilder_ != null) {
          bBuilder_.dispose();
          bBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder getBBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder getBOrBuilder() {
        if (bBuilder_ != null) {
          return bBuilder_.getMessageOrBuilder();
        } else {
          return b_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.getDefaultInstance() : b_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageB b = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder> 
          getBFieldBuilder() {
        if (bBuilder_ == null) {
          bBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder>(
                  getB(),
                  getParentForChildren(),
                  isClean());
          b_ = null;
        }
        return bBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.messageA)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.messageA)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<messageA>
        PARSER = new com.google.protobuf.AbstractParser<messageA>() {
      @java.lang.Override
      public messageA parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<messageA> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<messageA> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageA getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface messageBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.messageB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     * @return Whether the aa field is set.
     */
    boolean hasAa();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     * @return The aa.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAa();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     * @return Whether the c field is set.
     */
    boolean hasC();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     * @return The c.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getC();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder getCOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageB}
   */
  public static final class messageB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.messageB)
      messageBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use messageB.newBuilder() to construct.
    private messageB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private messageB() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new messageB();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder.class);
    }

    public static final int AA_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion aa_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     * @return Whether the aa field is set.
     */
    @java.lang.Override
    public boolean hasAa() {
      return aa_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     * @return The aa.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAa() {
      return aa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aa_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaOrBuilder() {
      return aa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aa_;
    }

    public static final int C_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC c_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     * @return Whether the c field is set.
     */
    @java.lang.Override
    public boolean hasC() {
      return c_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     * @return The c.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getC() {
      return c_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.getDefaultInstance() : c_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder getCOrBuilder() {
      return c_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.getDefaultInstance() : c_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (aa_ != null) {
        output.writeMessage(1, getAa());
      }
      if (c_ != null) {
        output.writeMessage(2, getC());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (aa_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAa());
      }
      if (c_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getC());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB) obj;

      if (hasAa() != other.hasAa()) return false;
      if (hasAa()) {
        if (!getAa()
            .equals(other.getAa())) return false;
      }
      if (hasC() != other.hasC()) return false;
      if (hasC()) {
        if (!getC()
            .equals(other.getC())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAa()) {
        hash = (37 * hash) + AA_FIELD_NUMBER;
        hash = (53 * hash) + getAa().hashCode();
      }
      if (hasC()) {
        hash = (37 * hash) + C_FIELD_NUMBER;
        hash = (53 * hash) + getC().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.messageB)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        aa_ = null;
        if (aaBuilder_ != null) {
          aaBuilder_.dispose();
          aaBuilder_ = null;
        }
        c_ = null;
        if (cBuilder_ != null) {
          cBuilder_.dispose();
          cBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.aa_ = aaBuilder_ == null
              ? aa_
              : aaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.c_ = cBuilder_ == null
              ? c_
              : cBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasAa()) {
          mergeAa(other.getAa());
        }
        if (other.hasC()) {
          mergeC(other.getC());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getCFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion aa_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> aaBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       * @return Whether the aa field is set.
       */
      public boolean hasAa() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       * @return The aa.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAa() {
        if (aaBuilder_ == null) {
          return aa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aa_;
        } else {
          return aaBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public Builder setAa(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          aa_ = value;
        } else {
          aaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public Builder setAa(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder builderForValue) {
        if (aaBuilder_ == null) {
          aa_ = builderForValue.build();
        } else {
          aaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public Builder mergeAa(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            aa_ != null &&
            aa_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance()) {
            getAaBuilder().mergeFrom(value);
          } else {
            aa_ = value;
          }
        } else {
          aaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public Builder clearAa() {
        bitField0_ = (bitField0_ & ~0x00000001);
        aa_ = null;
        if (aaBuilder_ != null) {
          aaBuilder_.dispose();
          aaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder getAaBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAaFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaOrBuilder() {
        if (aaBuilder_ != null) {
          return aaBuilder_.getMessageOrBuilder();
        } else {
          return aa_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aa_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aa = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> 
          getAaFieldBuilder() {
        if (aaBuilder_ == null) {
          aaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder>(
                  getAa(),
                  getParentForChildren(),
                  isClean());
          aa_ = null;
        }
        return aaBuilder_;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC c_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder> cBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       * @return Whether the c field is set.
       */
      public boolean hasC() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       * @return The c.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getC() {
        if (cBuilder_ == null) {
          return c_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.getDefaultInstance() : c_;
        } else {
          return cBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public Builder setC(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC value) {
        if (cBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          c_ = value;
        } else {
          cBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public Builder setC(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder builderForValue) {
        if (cBuilder_ == null) {
          c_ = builderForValue.build();
        } else {
          cBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public Builder mergeC(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC value) {
        if (cBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            c_ != null &&
            c_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.getDefaultInstance()) {
            getCBuilder().mergeFrom(value);
          } else {
            c_ = value;
          }
        } else {
          cBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public Builder clearC() {
        bitField0_ = (bitField0_ & ~0x00000002);
        c_ = null;
        if (cBuilder_ != null) {
          cBuilder_.dispose();
          cBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder getCBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder getCOrBuilder() {
        if (cBuilder_ != null) {
          return cBuilder_.getMessageOrBuilder();
        } else {
          return c_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.getDefaultInstance() : c_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.messageC c = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder> 
          getCFieldBuilder() {
        if (cBuilder_ == null) {
          cBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder>(
                  getC(),
                  getParentForChildren(),
                  isClean());
          c_ = null;
        }
        return cBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.messageB)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.messageB)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<messageB>
        PARSER = new com.google.protobuf.AbstractParser<messageB>() {
      @java.lang.Override
      public messageB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<messageB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<messageB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface messageCOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.messageC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     * @return Whether the aaa field is set.
     */
    boolean hasAaa();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     * @return The aaa.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAaa();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaaOrBuilder();

    /**
     * <code>int32 key = 2;</code>
     * @return The key.
     */
    int getKey();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageC}
   */
  public static final class messageC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.messageC)
      messageCOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use messageC.newBuilder() to construct.
    private messageC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private messageC() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new messageC();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_messageC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder.class);
    }

    public static final int AAA_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion aaa_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     * @return Whether the aaa field is set.
     */
    @java.lang.Override
    public boolean hasAaa() {
      return aaa_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     * @return The aaa.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAaa() {
      return aaa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aaa_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaaOrBuilder() {
      return aaa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aaa_;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private int key_ = 0;
    /**
     * <code>int32 key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public int getKey() {
      return key_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (aaa_ != null) {
        output.writeMessage(1, getAaa());
      }
      if (key_ != 0) {
        output.writeInt32(2, key_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (aaa_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAaa());
      }
      if (key_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, key_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC) obj;

      if (hasAaa() != other.hasAaa()) return false;
      if (hasAaa()) {
        if (!getAaa()
            .equals(other.getAaa())) return false;
      }
      if (getKey()
          != other.getKey()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAaa()) {
        hash = (37 * hash) + AAA_FIELD_NUMBER;
        hash = (53 * hash) + getAaa().hashCode();
      }
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.messageC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.messageC)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        aaa_ = null;
        if (aaaBuilder_ != null) {
          aaaBuilder_.dispose();
          aaaBuilder_ = null;
        }
        key_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.aaa_ = aaaBuilder_ == null
              ? aaa_
              : aaaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.key_ = key_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasAaa()) {
          mergeAaa(other.getAaa());
        }
        if (other.getKey() != 0) {
          setKey(other.getKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAaaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                key_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion aaa_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> aaaBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       * @return Whether the aaa field is set.
       */
      public boolean hasAaa() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       * @return The aaa.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion getAaa() {
        if (aaaBuilder_ == null) {
          return aaa_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aaa_;
        } else {
          return aaaBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public Builder setAaa(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aaaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          aaa_ = value;
        } else {
          aaaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public Builder setAaa(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder builderForValue) {
        if (aaaBuilder_ == null) {
          aaa_ = builderForValue.build();
        } else {
          aaaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public Builder mergeAaa(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion value) {
        if (aaaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            aaa_ != null &&
            aaa_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance()) {
            getAaaBuilder().mergeFrom(value);
          } else {
            aaa_ = value;
          }
        } else {
          aaaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public Builder clearAaa() {
        bitField0_ = (bitField0_ & ~0x00000001);
        aaa_ = null;
        if (aaaBuilder_ != null) {
          aaaBuilder_.dispose();
          aaaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder getAaaBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAaaFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder getAaaOrBuilder() {
        if (aaaBuilder_ != null) {
          return aaaBuilder_.getMessageOrBuilder();
        } else {
          return aaa_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.getDefaultInstance() : aaa_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventWithRecursion aaa = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder> 
          getAaaFieldBuilder() {
        if (aaaBuilder_ == null) {
          aaaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventWithRecursionOrBuilder>(
                  getAaa(),
                  getParentForChildren(),
                  isClean());
          aaa_ = null;
        }
        return aaaBuilder_;
      }

      private int key_ ;
      /**
       * <code>int32 key = 2;</code>
       * @return The key.
       */
      @java.lang.Override
      public int getKey() {
        return key_;
      }
      /**
       * <code>int32 key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(int value) {

        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.messageC)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.messageC)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<messageC>
        PARSER = new com.google.protobuf.AbstractParser<messageC>() {
      @java.lang.Override
      public messageC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<messageC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<messageC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.messageC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmployeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Employee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string firstName = 1;</code>
     * @return The firstName.
     */
    java.lang.String getFirstName();
    /**
     * <code>string firstName = 1;</code>
     * @return The bytes for firstName.
     */
    com.google.protobuf.ByteString
        getFirstNameBytes();

    /**
     * <code>string lastName = 2;</code>
     * @return The lastName.
     */
    java.lang.String getLastName();
    /**
     * <code>string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    com.google.protobuf.ByteString
        getLastNameBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     * @return Whether the ic field is set.
     */
    boolean hasIc();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     * @return The ic.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getIc();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder getIcOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     * @return Whether the em field is set.
     */
    boolean hasEm();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     * @return The em.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getEm();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder getEmOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     * @return Whether the em2 field is set.
     */
    boolean hasEm2();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     * @return The em2.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getEm2();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder getEm2OrBuilder();

    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.RoleCase getRoleCase();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Employee}
   */
  public static final class Employee extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Employee)
      EmployeeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Employee.newBuilder() to construct.
    private Employee(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Employee() {
      firstName_ = "";
      lastName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Employee();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Employee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder.class);
    }

    private int roleCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object role_;
    public enum RoleCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      IC(3),
      EM(4),
      EM2(5),
      ROLE_NOT_SET(0);
      private final int value;
      private RoleCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RoleCase valueOf(int value) {
        return forNumber(value);
      }

      public static RoleCase forNumber(int value) {
        switch (value) {
          case 3: return IC;
          case 4: return EM;
          case 5: return EM2;
          case 0: return ROLE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RoleCase
    getRoleCase() {
      return RoleCase.forNumber(
          roleCase_);
    }

    public static final int FIRSTNAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object firstName_ = "";
    /**
     * <code>string firstName = 1;</code>
     * @return The firstName.
     */
    @java.lang.Override
    public java.lang.String getFirstName() {
      java.lang.Object ref = firstName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        firstName_ = s;
        return s;
      }
    }
    /**
     * <code>string firstName = 1;</code>
     * @return The bytes for firstName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFirstNameBytes() {
      java.lang.Object ref = firstName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firstName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object lastName_ = "";
    /**
     * <code>string lastName = 2;</code>
     * @return The lastName.
     */
    @java.lang.Override
    public java.lang.String getLastName() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastName_ = s;
        return s;
      }
    }
    /**
     * <code>string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastNameBytes() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IC_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     * @return Whether the ic field is set.
     */
    @java.lang.Override
    public boolean hasIc() {
      return roleCase_ == 3;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     * @return The ic.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getIc() {
      if (roleCase_ == 3) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder getIcOrBuilder() {
      if (roleCase_ == 3) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
    }

    public static final int EM_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     * @return Whether the em field is set.
     */
    @java.lang.Override
    public boolean hasEm() {
      return roleCase_ == 4;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     * @return The em.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getEm() {
      if (roleCase_ == 4) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder getEmOrBuilder() {
      if (roleCase_ == 4) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
    }

    public static final int EM2_FIELD_NUMBER = 5;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     * @return Whether the em2 field is set.
     */
    @java.lang.Override
    public boolean hasEm2() {
      return roleCase_ == 5;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     * @return The em2.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getEm2() {
      if (roleCase_ == 5) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder getEm2OrBuilder() {
      if (roleCase_ == 5) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(firstName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, firstName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lastName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, lastName_);
      }
      if (roleCase_ == 3) {
        output.writeMessage(3, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_);
      }
      if (roleCase_ == 4) {
        output.writeMessage(4, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_);
      }
      if (roleCase_ == 5) {
        output.writeMessage(5, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(firstName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, firstName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lastName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, lastName_);
      }
      if (roleCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_);
      }
      if (roleCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_);
      }
      if (roleCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee) obj;

      if (!getFirstName()
          .equals(other.getFirstName())) return false;
      if (!getLastName()
          .equals(other.getLastName())) return false;
      if (!getRoleCase().equals(other.getRoleCase())) return false;
      switch (roleCase_) {
        case 3:
          if (!getIc()
              .equals(other.getIc())) return false;
          break;
        case 4:
          if (!getEm()
              .equals(other.getEm())) return false;
          break;
        case 5:
          if (!getEm2()
              .equals(other.getEm2())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FIRSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getFirstName().hashCode();
      hash = (37 * hash) + LASTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getLastName().hashCode();
      switch (roleCase_) {
        case 3:
          hash = (37 * hash) + IC_FIELD_NUMBER;
          hash = (53 * hash) + getIc().hashCode();
          break;
        case 4:
          hash = (37 * hash) + EM_FIELD_NUMBER;
          hash = (53 * hash) + getEm().hashCode();
          break;
        case 5:
          hash = (37 * hash) + EM2_FIELD_NUMBER;
          hash = (53 * hash) + getEm2().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Employee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Employee)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Employee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        firstName_ = "";
        lastName_ = "";
        if (icBuilder_ != null) {
          icBuilder_.clear();
        }
        if (emBuilder_ != null) {
          emBuilder_.clear();
        }
        if (em2Builder_ != null) {
          em2Builder_.clear();
        }
        roleCase_ = 0;
        role_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.firstName_ = firstName_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lastName_ = lastName_;
        }
      }

      private void buildPartialOneofs(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee result) {
        result.roleCase_ = roleCase_;
        result.role_ = this.role_;
        if (roleCase_ == 3 &&
            icBuilder_ != null) {
          result.role_ = icBuilder_.build();
        }
        if (roleCase_ == 4 &&
            emBuilder_ != null) {
          result.role_ = emBuilder_.build();
        }
        if (roleCase_ == 5 &&
            em2Builder_ != null) {
          result.role_ = em2Builder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getFirstName().isEmpty()) {
          firstName_ = other.firstName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getLastName().isEmpty()) {
          lastName_ = other.lastName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        switch (other.getRoleCase()) {
          case IC: {
            mergeIc(other.getIc());
            break;
          }
          case EM: {
            mergeEm(other.getEm());
            break;
          }
          case EM2: {
            mergeEm2(other.getEm2());
            break;
          }
          case ROLE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                firstName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                lastName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getIcFieldBuilder().getBuilder(),
                    extensionRegistry);
                roleCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getEmFieldBuilder().getBuilder(),
                    extensionRegistry);
                roleCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getEm2FieldBuilder().getBuilder(),
                    extensionRegistry);
                roleCase_ = 5;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int roleCase_ = 0;
      private java.lang.Object role_;
      public RoleCase
          getRoleCase() {
        return RoleCase.forNumber(
            roleCase_);
      }

      public Builder clearRole() {
        roleCase_ = 0;
        role_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object firstName_ = "";
      /**
       * <code>string firstName = 1;</code>
       * @return The firstName.
       */
      public java.lang.String getFirstName() {
        java.lang.Object ref = firstName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          firstName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string firstName = 1;</code>
       * @return The bytes for firstName.
       */
      public com.google.protobuf.ByteString
          getFirstNameBytes() {
        java.lang.Object ref = firstName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firstName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string firstName = 1;</code>
       * @param value The firstName to set.
       * @return This builder for chaining.
       */
      public Builder setFirstName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        firstName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string firstName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstName() {
        firstName_ = getDefaultInstance().getFirstName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string firstName = 1;</code>
       * @param value The bytes for firstName to set.
       * @return This builder for chaining.
       */
      public Builder setFirstNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        firstName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object lastName_ = "";
      /**
       * <code>string lastName = 2;</code>
       * @return The lastName.
       */
      public java.lang.String getLastName() {
        java.lang.Object ref = lastName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string lastName = 2;</code>
       * @return The bytes for lastName.
       */
      public com.google.protobuf.ByteString
          getLastNameBytes() {
        java.lang.Object ref = lastName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lastName = 2;</code>
       * @param value The lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        lastName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string lastName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastName() {
        lastName_ = getDefaultInstance().getLastName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string lastName = 2;</code>
       * @param value The bytes for lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        lastName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder> icBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       * @return Whether the ic field is set.
       */
      @java.lang.Override
      public boolean hasIc() {
        return roleCase_ == 3;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       * @return The ic.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getIc() {
        if (icBuilder_ == null) {
          if (roleCase_ == 3) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
        } else {
          if (roleCase_ == 3) {
            return icBuilder_.getMessage();
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      public Builder setIc(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC value) {
        if (icBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          role_ = value;
          onChanged();
        } else {
          icBuilder_.setMessage(value);
        }
        roleCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      public Builder setIc(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder builderForValue) {
        if (icBuilder_ == null) {
          role_ = builderForValue.build();
          onChanged();
        } else {
          icBuilder_.setMessage(builderForValue.build());
        }
        roleCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      public Builder mergeIc(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC value) {
        if (icBuilder_ == null) {
          if (roleCase_ == 3 &&
              role_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance()) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.newBuilder((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_)
                .mergeFrom(value).buildPartial();
          } else {
            role_ = value;
          }
          onChanged();
        } else {
          if (roleCase_ == 3) {
            icBuilder_.mergeFrom(value);
          } else {
            icBuilder_.setMessage(value);
          }
        }
        roleCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      public Builder clearIc() {
        if (icBuilder_ == null) {
          if (roleCase_ == 3) {
            roleCase_ = 0;
            role_ = null;
            onChanged();
          }
        } else {
          if (roleCase_ == 3) {
            roleCase_ = 0;
            role_ = null;
          }
          icBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder getIcBuilder() {
        return getIcFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder getIcOrBuilder() {
        if ((roleCase_ == 3) && (icBuilder_ != null)) {
          return icBuilder_.getMessageOrBuilder();
        } else {
          if (roleCase_ == 3) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.IC ic = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder> 
          getIcFieldBuilder() {
        if (icBuilder_ == null) {
          if (!(roleCase_ == 3)) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.getDefaultInstance();
          }
          icBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder>(
                  (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) role_,
                  getParentForChildren(),
                  isClean());
          role_ = null;
        }
        roleCase_ = 3;
        onChanged();
        return icBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder> emBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       * @return Whether the em field is set.
       */
      @java.lang.Override
      public boolean hasEm() {
        return roleCase_ == 4;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       * @return The em.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getEm() {
        if (emBuilder_ == null) {
          if (roleCase_ == 4) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
        } else {
          if (roleCase_ == 4) {
            return emBuilder_.getMessage();
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      public Builder setEm(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM value) {
        if (emBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          role_ = value;
          onChanged();
        } else {
          emBuilder_.setMessage(value);
        }
        roleCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      public Builder setEm(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder builderForValue) {
        if (emBuilder_ == null) {
          role_ = builderForValue.build();
          onChanged();
        } else {
          emBuilder_.setMessage(builderForValue.build());
        }
        roleCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      public Builder mergeEm(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM value) {
        if (emBuilder_ == null) {
          if (roleCase_ == 4 &&
              role_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance()) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.newBuilder((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_)
                .mergeFrom(value).buildPartial();
          } else {
            role_ = value;
          }
          onChanged();
        } else {
          if (roleCase_ == 4) {
            emBuilder_.mergeFrom(value);
          } else {
            emBuilder_.setMessage(value);
          }
        }
        roleCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      public Builder clearEm() {
        if (emBuilder_ == null) {
          if (roleCase_ == 4) {
            roleCase_ = 0;
            role_ = null;
            onChanged();
          }
        } else {
          if (roleCase_ == 4) {
            roleCase_ = 0;
            role_ = null;
          }
          emBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder getEmBuilder() {
        return getEmFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder getEmOrBuilder() {
        if ((roleCase_ == 4) && (emBuilder_ != null)) {
          return emBuilder_.getMessageOrBuilder();
        } else {
          if (roleCase_ == 4) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM em = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder> 
          getEmFieldBuilder() {
        if (emBuilder_ == null) {
          if (!(roleCase_ == 4)) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.getDefaultInstance();
          }
          emBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder>(
                  (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) role_,
                  getParentForChildren(),
                  isClean());
          role_ = null;
        }
        roleCase_ = 4;
        onChanged();
        return emBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder> em2Builder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       * @return Whether the em2 field is set.
       */
      @java.lang.Override
      public boolean hasEm2() {
        return roleCase_ == 5;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       * @return The em2.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getEm2() {
        if (em2Builder_ == null) {
          if (roleCase_ == 5) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
        } else {
          if (roleCase_ == 5) {
            return em2Builder_.getMessage();
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      public Builder setEm2(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 value) {
        if (em2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          role_ = value;
          onChanged();
        } else {
          em2Builder_.setMessage(value);
        }
        roleCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      public Builder setEm2(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder builderForValue) {
        if (em2Builder_ == null) {
          role_ = builderForValue.build();
          onChanged();
        } else {
          em2Builder_.setMessage(builderForValue.build());
        }
        roleCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      public Builder mergeEm2(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 value) {
        if (em2Builder_ == null) {
          if (roleCase_ == 5 &&
              role_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance()) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.newBuilder((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_)
                .mergeFrom(value).buildPartial();
          } else {
            role_ = value;
          }
          onChanged();
        } else {
          if (roleCase_ == 5) {
            em2Builder_.mergeFrom(value);
          } else {
            em2Builder_.setMessage(value);
          }
        }
        roleCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      public Builder clearEm2() {
        if (em2Builder_ == null) {
          if (roleCase_ == 5) {
            roleCase_ = 0;
            role_ = null;
            onChanged();
          }
        } else {
          if (roleCase_ == 5) {
            roleCase_ = 0;
            role_ = null;
          }
          em2Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder getEm2Builder() {
        return getEm2FieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder getEm2OrBuilder() {
        if ((roleCase_ == 5) && (em2Builder_ != null)) {
          return em2Builder_.getMessageOrBuilder();
        } else {
          if (roleCase_ == 5) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EM2 em2 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder> 
          getEm2FieldBuilder() {
        if (em2Builder_ == null) {
          if (!(roleCase_ == 5)) {
            role_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.getDefaultInstance();
          }
          em2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder>(
                  (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) role_,
                  getParentForChildren(),
                  isClean());
          role_ = null;
        }
        roleCase_ = 5;
        onChanged();
        return em2Builder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Employee)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Employee)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Employee>
        PARSER = new com.google.protobuf.AbstractParser<Employee>() {
      @java.lang.Override
      public Employee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Employee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Employee> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ICOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.IC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string skills = 1;</code>
     * @return A list containing the skills.
     */
    java.util.List<java.lang.String>
        getSkillsList();
    /**
     * <code>repeated string skills = 1;</code>
     * @return The count of skills.
     */
    int getSkillsCount();
    /**
     * <code>repeated string skills = 1;</code>
     * @param index The index of the element to return.
     * @return The skills at the given index.
     */
    java.lang.String getSkills(int index);
    /**
     * <code>repeated string skills = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the skills at the given index.
     */
    com.google.protobuf.ByteString
        getSkillsBytes(int index);

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     * @return Whether the icManager field is set.
     */
    boolean hasIcManager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     * @return The icManager.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getIcManager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getIcManagerOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IC}
   */
  public static final class IC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.IC)
      ICOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IC.newBuilder() to construct.
    private IC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IC() {
      skills_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IC();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_IC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder.class);
    }

    public static final int SKILLS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList skills_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string skills = 1;</code>
     * @return A list containing the skills.
     */
    public com.google.protobuf.ProtocolStringList
        getSkillsList() {
      return skills_;
    }
    /**
     * <code>repeated string skills = 1;</code>
     * @return The count of skills.
     */
    public int getSkillsCount() {
      return skills_.size();
    }
    /**
     * <code>repeated string skills = 1;</code>
     * @param index The index of the element to return.
     * @return The skills at the given index.
     */
    public java.lang.String getSkills(int index) {
      return skills_.get(index);
    }
    /**
     * <code>repeated string skills = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the skills at the given index.
     */
    public com.google.protobuf.ByteString
        getSkillsBytes(int index) {
      return skills_.getByteString(index);
    }

    public static final int ICMANAGER_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee icManager_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     * @return Whether the icManager field is set.
     */
    @java.lang.Override
    public boolean hasIcManager() {
      return icManager_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     * @return The icManager.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getIcManager() {
      return icManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : icManager_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getIcManagerOrBuilder() {
      return icManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : icManager_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < skills_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, skills_.getRaw(i));
      }
      if (icManager_ != null) {
        output.writeMessage(2, getIcManager());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < skills_.size(); i++) {
          dataSize += computeStringSizeNoTag(skills_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSkillsList().size();
      }
      if (icManager_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIcManager());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) obj;

      if (!getSkillsList()
          .equals(other.getSkillsList())) return false;
      if (hasIcManager() != other.hasIcManager()) return false;
      if (hasIcManager()) {
        if (!getIcManager()
            .equals(other.getIcManager())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSkillsCount() > 0) {
        hash = (37 * hash) + SKILLS_FIELD_NUMBER;
        hash = (53 * hash) + getSkillsList().hashCode();
      }
      if (hasIcManager()) {
        hash = (37 * hash) + ICMANAGER_FIELD_NUMBER;
        hash = (53 * hash) + getIcManager().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.IC)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ICOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        skills_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        icManager_ = null;
        if (icManagerBuilder_ != null) {
          icManagerBuilder_.dispose();
          icManagerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          skills_.makeImmutable();
          result.skills_ = skills_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.icManager_ = icManagerBuilder_ == null
              ? icManager_
              : icManagerBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC other) {
        if (other == getDefaultInstance()) return this;
        if (!other.skills_.isEmpty()) {
          if (skills_.isEmpty()) {
            skills_ = other.skills_;
            bitField0_ |= 0x00000001;
          } else {
            ensureSkillsIsMutable();
            skills_.addAll(other.skills_);
          }
          onChanged();
        }
        if (other.hasIcManager()) {
          mergeIcManager(other.getIcManager());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSkillsIsMutable();
                skills_.add(s);
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getIcManagerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList skills_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureSkillsIsMutable() {
        if (!skills_.isModifiable()) {
          skills_ = new com.google.protobuf.LazyStringArrayList(skills_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @return A list containing the skills.
       */
      public com.google.protobuf.ProtocolStringList
          getSkillsList() {
        skills_.makeImmutable();
        return skills_;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @return The count of skills.
       */
      public int getSkillsCount() {
        return skills_.size();
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param index The index of the element to return.
       * @return The skills at the given index.
       */
      public java.lang.String getSkills(int index) {
        return skills_.get(index);
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the skills at the given index.
       */
      public com.google.protobuf.ByteString
          getSkillsBytes(int index) {
        return skills_.getByteString(index);
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param index The index to set the value at.
       * @param value The skills to set.
       * @return This builder for chaining.
       */
      public Builder setSkills(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSkillsIsMutable();
        skills_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param value The skills to add.
       * @return This builder for chaining.
       */
      public Builder addSkills(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSkillsIsMutable();
        skills_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param values The skills to add.
       * @return This builder for chaining.
       */
      public Builder addAllSkills(
          java.lang.Iterable<java.lang.String> values) {
        ensureSkillsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, skills_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkills() {
        skills_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string skills = 1;</code>
       * @param value The bytes of the skills to add.
       * @return This builder for chaining.
       */
      public Builder addSkillsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSkillsIsMutable();
        skills_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee icManager_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> icManagerBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       * @return Whether the icManager field is set.
       */
      public boolean hasIcManager() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       * @return The icManager.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getIcManager() {
        if (icManagerBuilder_ == null) {
          return icManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : icManager_;
        } else {
          return icManagerBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public Builder setIcManager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (icManagerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          icManager_ = value;
        } else {
          icManagerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public Builder setIcManager(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder builderForValue) {
        if (icManagerBuilder_ == null) {
          icManager_ = builderForValue.build();
        } else {
          icManagerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public Builder mergeIcManager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (icManagerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            icManager_ != null &&
            icManager_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance()) {
            getIcManagerBuilder().mergeFrom(value);
          } else {
            icManager_ = value;
          }
        } else {
          icManagerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public Builder clearIcManager() {
        bitField0_ = (bitField0_ & ~0x00000002);
        icManager_ = null;
        if (icManagerBuilder_ != null) {
          icManagerBuilder_.dispose();
          icManagerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder getIcManagerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIcManagerFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getIcManagerOrBuilder() {
        if (icManagerBuilder_ != null) {
          return icManagerBuilder_.getMessageOrBuilder();
        } else {
          return icManager_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : icManager_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee icManager = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> 
          getIcManagerFieldBuilder() {
        if (icManagerBuilder_ == null) {
          icManagerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder>(
                  getIcManager(),
                  getParentForChildren(),
                  isClean());
          icManager_ = null;
        }
        return icManagerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.IC)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.IC)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IC>
        PARSER = new com.google.protobuf.AbstractParser<IC>() {
      @java.lang.Override
      public IC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.IC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EMOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EM)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 teamsize = 1;</code>
     * @return The teamsize.
     */
    long getTeamsize();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     * @return Whether the emManager field is set.
     */
    boolean hasEmManager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     * @return The emManager.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEmManager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEmManagerOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EM}
   */
  public static final class EM extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EM)
      EMOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EM.newBuilder() to construct.
    private EM(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EM() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EM();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EM_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder.class);
    }

    public static final int TEAMSIZE_FIELD_NUMBER = 1;
    private long teamsize_ = 0L;
    /**
     * <code>int64 teamsize = 1;</code>
     * @return The teamsize.
     */
    @java.lang.Override
    public long getTeamsize() {
      return teamsize_;
    }

    public static final int EMMANAGER_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee emManager_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     * @return Whether the emManager field is set.
     */
    @java.lang.Override
    public boolean hasEmManager() {
      return emManager_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     * @return The emManager.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEmManager() {
      return emManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : emManager_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEmManagerOrBuilder() {
      return emManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : emManager_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (teamsize_ != 0L) {
        output.writeInt64(1, teamsize_);
      }
      if (emManager_ != null) {
        output.writeMessage(2, getEmManager());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (teamsize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, teamsize_);
      }
      if (emManager_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEmManager());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) obj;

      if (getTeamsize()
          != other.getTeamsize()) return false;
      if (hasEmManager() != other.hasEmManager()) return false;
      if (hasEmManager()) {
        if (!getEmManager()
            .equals(other.getEmManager())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEAMSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTeamsize());
      if (hasEmManager()) {
        hash = (37 * hash) + EMMANAGER_FIELD_NUMBER;
        hash = (53 * hash) + getEmManager().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EM}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EM)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EMOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        teamsize_ = 0L;
        emManager_ = null;
        if (emManagerBuilder_ != null) {
          emManagerBuilder_.dispose();
          emManagerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.teamsize_ = teamsize_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.emManager_ = emManagerBuilder_ == null
              ? emManager_
              : emManagerBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM other) {
        if (other == getDefaultInstance()) return this;
        if (other.getTeamsize() != 0L) {
          setTeamsize(other.getTeamsize());
        }
        if (other.hasEmManager()) {
          mergeEmManager(other.getEmManager());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                teamsize_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getEmManagerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long teamsize_ ;
      /**
       * <code>int64 teamsize = 1;</code>
       * @return The teamsize.
       */
      @java.lang.Override
      public long getTeamsize() {
        return teamsize_;
      }
      /**
       * <code>int64 teamsize = 1;</code>
       * @param value The teamsize to set.
       * @return This builder for chaining.
       */
      public Builder setTeamsize(long value) {

        teamsize_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 teamsize = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamsize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamsize_ = 0L;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee emManager_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> emManagerBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       * @return Whether the emManager field is set.
       */
      public boolean hasEmManager() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       * @return The emManager.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEmManager() {
        if (emManagerBuilder_ == null) {
          return emManager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : emManager_;
        } else {
          return emManagerBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public Builder setEmManager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (emManagerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emManager_ = value;
        } else {
          emManagerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public Builder setEmManager(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder builderForValue) {
        if (emManagerBuilder_ == null) {
          emManager_ = builderForValue.build();
        } else {
          emManagerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public Builder mergeEmManager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (emManagerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            emManager_ != null &&
            emManager_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance()) {
            getEmManagerBuilder().mergeFrom(value);
          } else {
            emManager_ = value;
          }
        } else {
          emManagerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public Builder clearEmManager() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emManager_ = null;
        if (emManagerBuilder_ != null) {
          emManagerBuilder_.dispose();
          emManagerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder getEmManagerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEmManagerFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEmManagerOrBuilder() {
        if (emManagerBuilder_ != null) {
          return emManagerBuilder_.getMessageOrBuilder();
        } else {
          return emManager_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : emManager_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee emManager = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> 
          getEmManagerFieldBuilder() {
        if (emManagerBuilder_ == null) {
          emManagerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder>(
                  getEmManager(),
                  getParentForChildren(),
                  isClean());
          emManager_ = null;
        }
        return emManagerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EM)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EM)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EM>
        PARSER = new com.google.protobuf.AbstractParser<EM>() {
      @java.lang.Override
      public EM parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EM> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EM> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EM2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EM2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 teamsize = 1;</code>
     * @return The teamsize.
     */
    long getTeamsize();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     * @return Whether the em2Manager field is set.
     */
    boolean hasEm2Manager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     * @return The em2Manager.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEm2Manager();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEm2ManagerOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EM2}
   */
  public static final class EM2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EM2)
      EM2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EM2.newBuilder() to construct.
    private EM2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EM2() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EM2();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EM2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder.class);
    }

    public static final int TEAMSIZE_FIELD_NUMBER = 1;
    private long teamsize_ = 0L;
    /**
     * <code>int64 teamsize = 1;</code>
     * @return The teamsize.
     */
    @java.lang.Override
    public long getTeamsize() {
      return teamsize_;
    }

    public static final int EM2MANAGER_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee em2Manager_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     * @return Whether the em2Manager field is set.
     */
    @java.lang.Override
    public boolean hasEm2Manager() {
      return em2Manager_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     * @return The em2Manager.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEm2Manager() {
      return em2Manager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : em2Manager_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEm2ManagerOrBuilder() {
      return em2Manager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : em2Manager_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (teamsize_ != 0L) {
        output.writeInt64(1, teamsize_);
      }
      if (em2Manager_ != null) {
        output.writeMessage(2, getEm2Manager());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (teamsize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, teamsize_);
      }
      if (em2Manager_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEm2Manager());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) obj;

      if (getTeamsize()
          != other.getTeamsize()) return false;
      if (hasEm2Manager() != other.hasEm2Manager()) return false;
      if (hasEm2Manager()) {
        if (!getEm2Manager()
            .equals(other.getEm2Manager())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEAMSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTeamsize());
      if (hasEm2Manager()) {
        hash = (37 * hash) + EM2MANAGER_FIELD_NUMBER;
        hash = (53 * hash) + getEm2Manager().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EM2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EM2)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        teamsize_ = 0L;
        em2Manager_ = null;
        if (em2ManagerBuilder_ != null) {
          em2ManagerBuilder_.dispose();
          em2ManagerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.teamsize_ = teamsize_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.em2Manager_ = em2ManagerBuilder_ == null
              ? em2Manager_
              : em2ManagerBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 other) {
        if (other == getDefaultInstance()) return this;
        if (other.getTeamsize() != 0L) {
          setTeamsize(other.getTeamsize());
        }
        if (other.hasEm2Manager()) {
          mergeEm2Manager(other.getEm2Manager());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                teamsize_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getEm2ManagerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long teamsize_ ;
      /**
       * <code>int64 teamsize = 1;</code>
       * @return The teamsize.
       */
      @java.lang.Override
      public long getTeamsize() {
        return teamsize_;
      }
      /**
       * <code>int64 teamsize = 1;</code>
       * @param value The teamsize to set.
       * @return This builder for chaining.
       */
      public Builder setTeamsize(long value) {

        teamsize_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 teamsize = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamsize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamsize_ = 0L;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee em2Manager_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> em2ManagerBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       * @return Whether the em2Manager field is set.
       */
      public boolean hasEm2Manager() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       * @return The em2Manager.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee getEm2Manager() {
        if (em2ManagerBuilder_ == null) {
          return em2Manager_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : em2Manager_;
        } else {
          return em2ManagerBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public Builder setEm2Manager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (em2ManagerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          em2Manager_ = value;
        } else {
          em2ManagerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public Builder setEm2Manager(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder builderForValue) {
        if (em2ManagerBuilder_ == null) {
          em2Manager_ = builderForValue.build();
        } else {
          em2ManagerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public Builder mergeEm2Manager(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee value) {
        if (em2ManagerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            em2Manager_ != null &&
            em2Manager_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance()) {
            getEm2ManagerBuilder().mergeFrom(value);
          } else {
            em2Manager_ = value;
          }
        } else {
          em2ManagerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public Builder clearEm2Manager() {
        bitField0_ = (bitField0_ & ~0x00000002);
        em2Manager_ = null;
        if (em2ManagerBuilder_ != null) {
          em2ManagerBuilder_.dispose();
          em2ManagerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder getEm2ManagerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEm2ManagerFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder getEm2ManagerOrBuilder() {
        if (em2ManagerBuilder_ != null) {
          return em2ManagerBuilder_.getMessageOrBuilder();
        } else {
          return em2Manager_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.getDefaultInstance() : em2Manager_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Employee em2Manager = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder> 
          getEm2ManagerFieldBuilder() {
        if (em2ManagerBuilder_ == null) {
          em2ManagerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Employee.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmployeeOrBuilder>(
                  getEm2Manager(),
                  getParentForChildren(),
                  isClean());
          em2Manager_ = null;
        }
        return em2ManagerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EM2)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EM2)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EM2>
        PARSER = new com.google.protobuf.AbstractParser<EM2>() {
      @java.lang.Override
      public EM2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EM2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EM2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EM2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventPersonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EventPerson)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     * @return Whether the bff field is set.
     */
    boolean hasBff();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     * @return The bff.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getBff();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getBffOrBuilder();
  }
  /**
   * <pre>
   * Used for simple recursive field testing.
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventPerson}
   */
  public static final class EventPerson extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EventPerson)
      EventPersonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventPerson.newBuilder() to construct.
    private EventPerson(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventPerson() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventPerson();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BFF_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson bff_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     * @return Whether the bff field is set.
     */
    @java.lang.Override
    public boolean hasBff() {
      return bff_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     * @return The bff.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getBff() {
      return bff_ == null ? getDefaultInstance() : bff_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getBffOrBuilder() {
      return bff_ == null ? getDefaultInstance() : bff_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (bff_ != null) {
        output.writeMessage(2, getBff());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (bff_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBff());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasBff() != other.hasBff()) return false;
      if (hasBff()) {
        if (!getBff()
            .equals(other.getBff())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasBff()) {
        hash = (37 * hash) + BFF_FIELD_NUMBER;
        hash = (53 * hash) + getBff().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used for simple recursive field testing.
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventPerson}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EventPerson)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        bff_ = null;
        if (bffBuilder_ != null) {
          bffBuilder_.dispose();
          bffBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bff_ = bffBuilder_ == null
              ? bff_
              : bffBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasBff()) {
          mergeBff(other.getBff());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getBffFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson bff_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder> bffBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       * @return Whether the bff field is set.
       */
      public boolean hasBff() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       * @return The bff.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getBff() {
        if (bffBuilder_ == null) {
          return bff_ == null ? getDefaultInstance() : bff_;
        } else {
          return bffBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public Builder setBff(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson value) {
        if (bffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bff_ = value;
        } else {
          bffBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public Builder setBff(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder builderForValue) {
        if (bffBuilder_ == null) {
          bff_ = builderForValue.build();
        } else {
          bffBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public Builder mergeBff(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson value) {
        if (bffBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            bff_ != null &&
            bff_ != getDefaultInstance()) {
            getBffBuilder().mergeFrom(value);
          } else {
            bff_ = value;
          }
        } else {
          bffBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public Builder clearBff() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bff_ = null;
        if (bffBuilder_ != null) {
          bffBuilder_.dispose();
          bffBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder getBffBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBffFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getBffOrBuilder() {
        if (bffBuilder_ != null) {
          return bffBuilder_.getMessageOrBuilder();
        } else {
          return bff_ == null ?
              getDefaultInstance() : bff_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson bff = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder> 
          getBffFieldBuilder() {
        if (bffBuilder_ == null) {
          bffBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder>(
                  getBff(),
                  getParentForChildren(),
                  isClean());
          bff_ = null;
        }
        return bffBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EventPerson)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EventPerson)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventPerson>
        PARSER = new com.google.protobuf.AbstractParser<EventPerson>() {
      @java.lang.Override
      public EventPerson parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventPerson> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventPerson> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventPersonWrapperOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EventPersonWrapper)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     * @return Whether the person field is set.
     */
    boolean hasPerson();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     * @return The person.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getPerson();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getPersonOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventPersonWrapper}
   */
  public static final class EventPersonWrapper extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EventPersonWrapper)
      EventPersonWrapperOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventPersonWrapper.newBuilder() to construct.
    private EventPersonWrapper(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventPersonWrapper() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventPersonWrapper();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper.Builder.class);
    }

    public static final int PERSON_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson person_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     * @return Whether the person field is set.
     */
    @java.lang.Override
    public boolean hasPerson() {
      return person_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     * @return The person.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getPerson() {
      return person_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.getDefaultInstance() : person_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getPersonOrBuilder() {
      return person_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.getDefaultInstance() : person_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (person_ != null) {
        output.writeMessage(1, getPerson());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (person_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPerson());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper) obj;

      if (hasPerson() != other.hasPerson()) return false;
      if (hasPerson()) {
        if (!getPerson()
            .equals(other.getPerson())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPerson()) {
        hash = (37 * hash) + PERSON_FIELD_NUMBER;
        hash = (53 * hash) + getPerson().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventPersonWrapper}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EventPersonWrapper)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapperOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        person_ = null;
        if (personBuilder_ != null) {
          personBuilder_.dispose();
          personBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.person_ = personBuilder_ == null
              ? person_
              : personBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasPerson()) {
          mergePerson(other.getPerson());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPersonFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson person_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder> personBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       * @return Whether the person field is set.
       */
      public boolean hasPerson() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       * @return The person.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson getPerson() {
        if (personBuilder_ == null) {
          return person_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.getDefaultInstance() : person_;
        } else {
          return personBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public Builder setPerson(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson value) {
        if (personBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          person_ = value;
        } else {
          personBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public Builder setPerson(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder builderForValue) {
        if (personBuilder_ == null) {
          person_ = builderForValue.build();
        } else {
          personBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public Builder mergePerson(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson value) {
        if (personBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            person_ != null &&
            person_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.getDefaultInstance()) {
            getPersonBuilder().mergeFrom(value);
          } else {
            person_ = value;
          }
        } else {
          personBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public Builder clearPerson() {
        bitField0_ = (bitField0_ & ~0x00000001);
        person_ = null;
        if (personBuilder_ != null) {
          personBuilder_.dispose();
          personBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder getPersonBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPersonFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder getPersonOrBuilder() {
        if (personBuilder_ != null) {
          return personBuilder_.getMessageOrBuilder();
        } else {
          return person_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.getDefaultInstance() : person_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventPerson person = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder> 
          getPersonFieldBuilder() {
        if (personBuilder_ == null) {
          personBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPerson.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonOrBuilder>(
                  getPerson(),
                  getParentForChildren(),
                  isClean());
          person_ = null;
        }
        return personBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EventPersonWrapper)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EventPersonWrapper)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventPersonWrapper>
        PARSER = new com.google.protobuf.AbstractParser<EventPersonWrapper>() {
      @java.lang.Override
      public EventPersonWrapper parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventPersonWrapper> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventPersonWrapper> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventPersonWrapper getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PersonWithRecursiveArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A protobuf with recursive repeated field
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * A protobuf with recursive repeated field
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> 
        getFriendsList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getFriends(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    int getFriendsCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder> 
        getFriendsOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder getFriendsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray}
   */
  public static final class PersonWithRecursiveArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray)
      PersonWithRecursiveArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PersonWithRecursiveArray.newBuilder() to construct.
    private PersonWithRecursiveArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PersonWithRecursiveArray() {
      name_ = "";
      friends_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PersonWithRecursiveArray();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * A protobuf with recursive repeated field
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A protobuf with recursive repeated field
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRIENDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> friends_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> getFriendsList() {
      return friends_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder> 
        getFriendsOrBuilderList() {
      return friends_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    @java.lang.Override
    public int getFriendsCount() {
      return friends_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getFriends(int index) {
      return friends_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder getFriendsOrBuilder(
        int index) {
      return friends_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < friends_.size(); i++) {
        output.writeMessage(2, friends_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < friends_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, friends_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getFriendsList()
          .equals(other.getFriendsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getFriendsCount() > 0) {
        hash = (37 * hash) + FRIENDS_FIELD_NUMBER;
        hash = (53 * hash) + getFriendsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        if (friendsBuilder_ == null) {
          friends_ = java.util.Collections.emptyList();
        } else {
          friends_ = null;
          friendsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray result) {
        if (friendsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            friends_ = java.util.Collections.unmodifiableList(friends_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.friends_ = friends_;
        } else {
          result.friends_ = friendsBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (friendsBuilder_ == null) {
          if (!other.friends_.isEmpty()) {
            if (friends_.isEmpty()) {
              friends_ = other.friends_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFriendsIsMutable();
              friends_.addAll(other.friends_);
            }
            onChanged();
          }
        } else {
          if (!other.friends_.isEmpty()) {
            if (friendsBuilder_.isEmpty()) {
              friendsBuilder_.dispose();
              friendsBuilder_ = null;
              friends_ = other.friends_;
              bitField0_ = (bitField0_ & ~0x00000002);
              friendsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFriendsFieldBuilder() : null;
            } else {
              friendsBuilder_.addAllMessages(other.friends_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray m =
                    input.readMessage(
                        parser(),
                        extensionRegistry);
                if (friendsBuilder_ == null) {
                  ensureFriendsIsMutable();
                  friends_.add(m);
                } else {
                  friendsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A protobuf with recursive repeated field
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A protobuf with recursive repeated field
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A protobuf with recursive repeated field
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A protobuf with recursive repeated field
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A protobuf with recursive repeated field
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> friends_ =
        java.util.Collections.emptyList();
      private void ensureFriendsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          friends_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray>(friends_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder> friendsBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> getFriendsList() {
        if (friendsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(friends_);
        } else {
          return friendsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public int getFriendsCount() {
        if (friendsBuilder_ == null) {
          return friends_.size();
        } else {
          return friendsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getFriends(int index) {
        if (friendsBuilder_ == null) {
          return friends_.get(index);
        } else {
          return friendsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder setFriends(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.set(index, value);
          onChanged();
        } else {
          friendsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder setFriends(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.set(index, builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder addFriends(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.add(value);
          onChanged();
        } else {
          friendsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder addFriends(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.add(index, value);
          onChanged();
        } else {
          friendsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder addFriends(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.add(builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder addFriends(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.add(index, builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder addAllFriends(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray> values) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          addAll(
              values, friends_);
          onChanged();
        } else {
          friendsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder clearFriends() {
        if (friendsBuilder_ == null) {
          friends_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          friendsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public Builder removeFriends(int index) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.remove(index);
          onChanged();
        } else {
          friendsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder getFriendsBuilder(
          int index) {
        return getFriendsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder getFriendsOrBuilder(
          int index) {
        if (friendsBuilder_ == null) {
          return friends_.get(index);  } else {
          return friendsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder> 
           getFriendsOrBuilderList() {
        if (friendsBuilder_ != null) {
          return friendsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(friends_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder addFriendsBuilder() {
        return getFriendsFieldBuilder().addBuilder(
            getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder addFriendsBuilder(
          int index) {
        return getFriendsFieldBuilder().addBuilder(
            index, getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray friends = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder> 
           getFriendsBuilderList() {
        return getFriendsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder> 
          getFriendsFieldBuilder() {
        if (friendsBuilder_ == null) {
          friendsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArrayOrBuilder>(
                  friends_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          friends_ = null;
        }
        return friendsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveArray)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PersonWithRecursiveArray>
        PARSER = new com.google.protobuf.AbstractParser<PersonWithRecursiveArray>() {
      @java.lang.Override
      public PersonWithRecursiveArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PersonWithRecursiveArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PersonWithRecursiveArray> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PersonWithRecursiveMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A protobuf with recursive field in value
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * A protobuf with recursive field in value
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    int getGroupsCount();
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    boolean containsGroups(
        java.lang.String key);
    /**
     * Use {@link #getGroupsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
    getGroups();
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
    getGroupsMap();
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap defaultValue);
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap}
   */
  public static final class PersonWithRecursiveMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap)
      PersonWithRecursiveMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PersonWithRecursiveMap.newBuilder() to construct.
    private PersonWithRecursiveMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PersonWithRecursiveMap() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PersonWithRecursiveMap();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetGroups();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * A protobuf with recursive field in value
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A protobuf with recursive field in value
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUPS_FIELD_NUMBER = 3;
    private static final class GroupsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> groups_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
    internalGetGroups() {
      if (groups_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GroupsDefaultEntryHolder.defaultEntry);
      }
      return groups_;
    }
    public int getGroupsCount() {
      return internalGetGroups().getMap().size();
    }
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    @java.lang.Override
    public boolean containsGroups(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetGroups().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGroupsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> getGroups() {
      return getGroupsMap();
    }
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> getGroupsMap() {
      return internalGetGroups().getMap();
    }
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> map =
          internalGetGroups().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> map =
          internalGetGroups().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetGroups(),
          GroupsDefaultEntryHolder.defaultEntry,
          3);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> entry
           : internalGetGroups().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
        groups__ = GroupsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, groups__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!internalGetGroups().equals(
          other.internalGetGroups())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (!internalGetGroups().getMap().isEmpty()) {
        hash = (37 * hash) + GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetGroups().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetGroups();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableGroups();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        internalGetMutableGroups().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.groups_ = internalGetGroups();
          result.groups_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        internalGetMutableGroups().mergeFrom(
            other.internalGetGroups());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                com.google.protobuf.MapEntry<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
                groups__ = input.readMessage(
                    GroupsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableGroups().getMutableMap().put(
                    groups__.getKey(), groups__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A protobuf with recursive field in value
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A protobuf with recursive field in value
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A protobuf with recursive field in value
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A protobuf with recursive field in value
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A protobuf with recursive field in value
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> groups_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
          internalGetGroups() {
        if (groups_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              GroupsDefaultEntryHolder.defaultEntry);
        }
        return groups_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
          internalGetMutableGroups() {
        if (groups_ == null) {
          groups_ = com.google.protobuf.MapField.newMapField(
              GroupsDefaultEntryHolder.defaultEntry);
        }
        if (!groups_.isMutable()) {
          groups_ = groups_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return groups_;
      }
      public int getGroupsCount() {
        return internalGetGroups().getMap().size();
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      @java.lang.Override
      public boolean containsGroups(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetGroups().getMap().containsKey(key);
      }
      /**
       * Use {@link #getGroupsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> getGroups() {
        return getGroupsMap();
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> getGroupsMap() {
        return internalGetGroups().getMap();
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrDefault(
          java.lang.String key,
          /* nullable */
org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> map =
            internalGetGroups().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getGroupsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> map =
            internalGetGroups().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearGroups() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableGroups().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      public Builder removeGroups(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableGroups().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap>
          getMutableGroups() {
        bitField0_ |= 0x00000002;
        return internalGetMutableGroups().getMutableMap();
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      public Builder putGroups(
          java.lang.String key,
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableGroups().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap&gt; groups = 3;</code>
       */
      public Builder putAllGroups(
          java.util.Map<java.lang.String, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap> values) {
        internalGetMutableGroups().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.PersonWithRecursiveMap)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PersonWithRecursiveMap>
        PARSER = new com.google.protobuf.AbstractParser<PersonWithRecursiveMap>() {
      @java.lang.Override
      public PersonWithRecursiveMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PersonWithRecursiveMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PersonWithRecursiveMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.PersonWithRecursiveMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OneOfEventWithRecursionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     * @return Whether the recursiveA field is set.
     */
    boolean hasRecursiveA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     * @return The recursiveA.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getRecursiveA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder getRecursiveAOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     * @return Whether the recursiveB field is set.
     */
    boolean hasRecursiveB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     * @return The recursiveB.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getRecursiveB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder getRecursiveBOrBuilder();

    /**
     * <code>string value = 7;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 7;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.PayloadCase getPayloadCase();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion}
   */
  public static final class OneOfEventWithRecursion extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion)
      OneOfEventWithRecursionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OneOfEventWithRecursion.newBuilder() to construct.
    private OneOfEventWithRecursion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OneOfEventWithRecursion() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OneOfEventWithRecursion();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder.class);
    }

    private int payloadCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RECURSIVEA(3),
      RECURSIVEB(6),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 3: return RECURSIVEA;
          case 6: return RECURSIVEB;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECURSIVEA_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     * @return Whether the recursiveA field is set.
     */
    @java.lang.Override
    public boolean hasRecursiveA() {
      return payloadCase_ == 3;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     * @return The recursiveA.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getRecursiveA() {
      if (payloadCase_ == 3) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder getRecursiveAOrBuilder() {
      if (payloadCase_ == 3) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
    }

    public static final int RECURSIVEB_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     * @return Whether the recursiveB field is set.
     */
    @java.lang.Override
    public boolean hasRecursiveB() {
      return payloadCase_ == 6;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     * @return The recursiveB.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getRecursiveB() {
      if (payloadCase_ == 6) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder getRecursiveBOrBuilder() {
      if (payloadCase_ == 6) {
         return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_;
      }
      return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
    }

    public static final int VALUE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object value_ = "";
    /**
     * <code>string value = 7;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 7;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (payloadCase_ == 3) {
        output.writeMessage(3, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_);
      }
      if (payloadCase_ == 6) {
        output.writeMessage(6, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (payloadCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_);
      }
      if (payloadCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 3:
          if (!getRecursiveA()
              .equals(other.getRecursiveA())) return false;
          break;
        case 6:
          if (!getRecursiveB()
              .equals(other.getRecursiveB())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      switch (payloadCase_) {
        case 3:
          hash = (37 * hash) + RECURSIVEA_FIELD_NUMBER;
          hash = (53 * hash) + getRecursiveA().hashCode();
          break;
        case 6:
          hash = (37 * hash) + RECURSIVEB_FIELD_NUMBER;
          hash = (53 * hash) + getRecursiveB().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        if (recursiveABuilder_ != null) {
          recursiveABuilder_.clear();
        }
        if (recursiveBBuilder_ != null) {
          recursiveBBuilder_.clear();
        }
        value_ = "";
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.value_ = value_;
        }
      }

      private void buildPartialOneofs(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion result) {
        result.payloadCase_ = payloadCase_;
        result.payload_ = this.payload_;
        if (payloadCase_ == 3 &&
            recursiveABuilder_ != null) {
          result.payload_ = recursiveABuilder_.build();
        }
        if (payloadCase_ == 6 &&
            recursiveBBuilder_ != null) {
          result.payload_ = recursiveBBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        switch (other.getPayloadCase()) {
          case RECURSIVEA: {
            mergeRecursiveA(other.getRecursiveA());
            break;
          }
          case RECURSIVEB: {
            mergeRecursiveB(other.getRecursiveB());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                input.readMessage(
                    getRecursiveAFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 3;
                break;
              } // case 26
              case 50: {
                input.readMessage(
                    getRecursiveBFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 6;
                break;
              } // case 50
              case 58: {
                value_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder> recursiveABuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       * @return Whether the recursiveA field is set.
       */
      @java.lang.Override
      public boolean hasRecursiveA() {
        return payloadCase_ == 3;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       * @return The recursiveA.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getRecursiveA() {
        if (recursiveABuilder_ == null) {
          if (payloadCase_ == 3) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
        } else {
          if (payloadCase_ == 3) {
            return recursiveABuilder_.getMessage();
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      public Builder setRecursiveA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA value) {
        if (recursiveABuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          recursiveABuilder_.setMessage(value);
        }
        payloadCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      public Builder setRecursiveA(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder builderForValue) {
        if (recursiveABuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          recursiveABuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      public Builder mergeRecursiveA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA value) {
        if (recursiveABuilder_ == null) {
          if (payloadCase_ == 3 &&
              payload_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance()) {
            payload_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.newBuilder((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 3) {
            recursiveABuilder_.mergeFrom(value);
          } else {
            recursiveABuilder_.setMessage(value);
          }
        }
        payloadCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      public Builder clearRecursiveA() {
        if (recursiveABuilder_ == null) {
          if (payloadCase_ == 3) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 3) {
            payloadCase_ = 0;
            payload_ = null;
          }
          recursiveABuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder getRecursiveABuilder() {
        return getRecursiveAFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder getRecursiveAOrBuilder() {
        if ((payloadCase_ == 3) && (recursiveABuilder_ != null)) {
          return recursiveABuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 3) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveA recursiveA = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder> 
          getRecursiveAFieldBuilder() {
        if (recursiveABuilder_ == null) {
          if (!(payloadCase_ == 3)) {
            payload_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.getDefaultInstance();
          }
          recursiveABuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder>(
                  (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 3;
        onChanged();
        return recursiveABuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder> recursiveBBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       * @return Whether the recursiveB field is set.
       */
      @java.lang.Override
      public boolean hasRecursiveB() {
        return payloadCase_ == 6;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       * @return The recursiveB.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getRecursiveB() {
        if (recursiveBBuilder_ == null) {
          if (payloadCase_ == 6) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
        } else {
          if (payloadCase_ == 6) {
            return recursiveBBuilder_.getMessage();
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      public Builder setRecursiveB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB value) {
        if (recursiveBBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          recursiveBBuilder_.setMessage(value);
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      public Builder setRecursiveB(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder builderForValue) {
        if (recursiveBBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          recursiveBBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      public Builder mergeRecursiveB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB value) {
        if (recursiveBBuilder_ == null) {
          if (payloadCase_ == 6 &&
              payload_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance()) {
            payload_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.newBuilder((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 6) {
            recursiveBBuilder_.mergeFrom(value);
          } else {
            recursiveBBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      public Builder clearRecursiveB() {
        if (recursiveBBuilder_ == null) {
          if (payloadCase_ == 6) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 6) {
            payloadCase_ = 0;
            payload_ = null;
          }
          recursiveBBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder getRecursiveBBuilder() {
        return getRecursiveBFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder getRecursiveBOrBuilder() {
        if ((payloadCase_ == 6) && (recursiveBBuilder_ != null)) {
          return recursiveBBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 6) {
            return (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_;
          }
          return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.EventRecursiveB recursiveB = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder> 
          getRecursiveBFieldBuilder() {
        if (recursiveBBuilder_ == null) {
          if (!(payloadCase_ == 6)) {
            payload_ = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.getDefaultInstance();
          }
          recursiveBBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder>(
                  (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 6;
        onChanged();
        return recursiveBBuilder_;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 7;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 7;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 7;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        value_ = getDefaultInstance().getValue();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string value = 7;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        value_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OneOfEventWithRecursion>
        PARSER = new com.google.protobuf.AbstractParser<OneOfEventWithRecursion>() {
      @java.lang.Override
      public OneOfEventWithRecursion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OneOfEventWithRecursion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OneOfEventWithRecursion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventRecursiveAOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EventRecursiveA)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     * @return Whether the recursiveOneOffInA field is set.
     */
    boolean hasRecursiveOneOffInA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     * @return The recursiveOneOffInA.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInA();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInAOrBuilder();

    /**
     * <code>string key = 2;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 2;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventRecursiveA}
   */
  public static final class EventRecursiveA extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EventRecursiveA)
      EventRecursiveAOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventRecursiveA.newBuilder() to construct.
    private EventRecursiveA(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventRecursiveA() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventRecursiveA();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder.class);
    }

    public static final int RECURSIVEONEOFFINA_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion recursiveOneOffInA_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     * @return Whether the recursiveOneOffInA field is set.
     */
    @java.lang.Override
    public boolean hasRecursiveOneOffInA() {
      return recursiveOneOffInA_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     * @return The recursiveOneOffInA.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInA() {
      return recursiveOneOffInA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInA_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInAOrBuilder() {
      return recursiveOneOffInA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInA_;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 2;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (recursiveOneOffInA_ != null) {
        output.writeMessage(1, getRecursiveOneOffInA());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (recursiveOneOffInA_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRecursiveOneOffInA());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) obj;

      if (hasRecursiveOneOffInA() != other.hasRecursiveOneOffInA()) return false;
      if (hasRecursiveOneOffInA()) {
        if (!getRecursiveOneOffInA()
            .equals(other.getRecursiveOneOffInA())) return false;
      }
      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRecursiveOneOffInA()) {
        hash = (37 * hash) + RECURSIVEONEOFFINA_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveOneOffInA().hashCode();
      }
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventRecursiveA}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EventRecursiveA)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveAOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        recursiveOneOffInA_ = null;
        if (recursiveOneOffInABuilder_ != null) {
          recursiveOneOffInABuilder_.dispose();
          recursiveOneOffInABuilder_ = null;
        }
        key_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.recursiveOneOffInA_ = recursiveOneOffInABuilder_ == null
              ? recursiveOneOffInA_
              : recursiveOneOffInABuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.key_ = key_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasRecursiveOneOffInA()) {
          mergeRecursiveOneOffInA(other.getRecursiveOneOffInA());
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRecursiveOneOffInAFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion recursiveOneOffInA_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder> recursiveOneOffInABuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       * @return Whether the recursiveOneOffInA field is set.
       */
      public boolean hasRecursiveOneOffInA() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       * @return The recursiveOneOffInA.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInA() {
        if (recursiveOneOffInABuilder_ == null) {
          return recursiveOneOffInA_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInA_;
        } else {
          return recursiveOneOffInABuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public Builder setRecursiveOneOffInA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion value) {
        if (recursiveOneOffInABuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recursiveOneOffInA_ = value;
        } else {
          recursiveOneOffInABuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public Builder setRecursiveOneOffInA(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder builderForValue) {
        if (recursiveOneOffInABuilder_ == null) {
          recursiveOneOffInA_ = builderForValue.build();
        } else {
          recursiveOneOffInABuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public Builder mergeRecursiveOneOffInA(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion value) {
        if (recursiveOneOffInABuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            recursiveOneOffInA_ != null &&
            recursiveOneOffInA_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance()) {
            getRecursiveOneOffInABuilder().mergeFrom(value);
          } else {
            recursiveOneOffInA_ = value;
          }
        } else {
          recursiveOneOffInABuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public Builder clearRecursiveOneOffInA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recursiveOneOffInA_ = null;
        if (recursiveOneOffInABuilder_ != null) {
          recursiveOneOffInABuilder_.dispose();
          recursiveOneOffInABuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder getRecursiveOneOffInABuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRecursiveOneOffInAFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInAOrBuilder() {
        if (recursiveOneOffInABuilder_ != null) {
          return recursiveOneOffInABuilder_.getMessageOrBuilder();
        } else {
          return recursiveOneOffInA_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInA_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInA = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder> 
          getRecursiveOneOffInAFieldBuilder() {
        if (recursiveOneOffInABuilder_ == null) {
          recursiveOneOffInABuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder>(
                  getRecursiveOneOffInA(),
                  getParentForChildren(),
                  isClean());
          recursiveOneOffInA_ = null;
        }
        return recursiveOneOffInABuilder_;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 2;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 2;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 2;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EventRecursiveA)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EventRecursiveA)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventRecursiveA>
        PARSER = new com.google.protobuf.AbstractParser<EventRecursiveA>() {
      @java.lang.Override
      public EventRecursiveA parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventRecursiveA> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventRecursiveA> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveA getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventRecursiveBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EventRecursiveB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     * @return Whether the recursiveOneOffInB field is set.
     */
    boolean hasRecursiveOneOffInB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     * @return The recursiveOneOffInB.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInB();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInBOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventRecursiveB}
   */
  public static final class EventRecursiveB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EventRecursiveB)
      EventRecursiveBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventRecursiveB.newBuilder() to construct.
    private EventRecursiveB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventRecursiveB() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventRecursiveB();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object value_ = "";
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECURSIVEONEOFFINB_FIELD_NUMBER = 3;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion recursiveOneOffInB_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     * @return Whether the recursiveOneOffInB field is set.
     */
    @java.lang.Override
    public boolean hasRecursiveOneOffInB() {
      return recursiveOneOffInB_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     * @return The recursiveOneOffInB.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInB() {
      return recursiveOneOffInB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInB_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInBOrBuilder() {
      return recursiveOneOffInB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInB_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      if (recursiveOneOffInB_ != null) {
        output.writeMessage(3, getRecursiveOneOffInB());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      if (recursiveOneOffInB_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRecursiveOneOffInB());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (hasRecursiveOneOffInB() != other.hasRecursiveOneOffInB()) return false;
      if (hasRecursiveOneOffInB()) {
        if (!getRecursiveOneOffInB()
            .equals(other.getRecursiveOneOffInB())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      if (hasRecursiveOneOffInB()) {
        hash = (37 * hash) + RECURSIVEONEOFFINB_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveOneOffInB().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EventRecursiveB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EventRecursiveB)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = "";
        recursiveOneOffInB_ = null;
        if (recursiveOneOffInBBuilder_ != null) {
          recursiveOneOffInBBuilder_.dispose();
          recursiveOneOffInBBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.recursiveOneOffInB_ = recursiveOneOffInBBuilder_ == null
              ? recursiveOneOffInB_
              : recursiveOneOffInBBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasRecursiveOneOffInB()) {
          mergeRecursiveOneOffInB(other.getRecursiveOneOffInB());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                value_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getRecursiveOneOffInBFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        value_ = getDefaultInstance().getValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion recursiveOneOffInB_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder> recursiveOneOffInBBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       * @return Whether the recursiveOneOffInB field is set.
       */
      public boolean hasRecursiveOneOffInB() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       * @return The recursiveOneOffInB.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion getRecursiveOneOffInB() {
        if (recursiveOneOffInBBuilder_ == null) {
          return recursiveOneOffInB_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInB_;
        } else {
          return recursiveOneOffInBBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public Builder setRecursiveOneOffInB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion value) {
        if (recursiveOneOffInBBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recursiveOneOffInB_ = value;
        } else {
          recursiveOneOffInBBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public Builder setRecursiveOneOffInB(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder builderForValue) {
        if (recursiveOneOffInBBuilder_ == null) {
          recursiveOneOffInB_ = builderForValue.build();
        } else {
          recursiveOneOffInBBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public Builder mergeRecursiveOneOffInB(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion value) {
        if (recursiveOneOffInBBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            recursiveOneOffInB_ != null &&
            recursiveOneOffInB_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance()) {
            getRecursiveOneOffInBBuilder().mergeFrom(value);
          } else {
            recursiveOneOffInB_ = value;
          }
        } else {
          recursiveOneOffInBBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public Builder clearRecursiveOneOffInB() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recursiveOneOffInB_ = null;
        if (recursiveOneOffInBBuilder_ != null) {
          recursiveOneOffInBBuilder_.dispose();
          recursiveOneOffInBBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder getRecursiveOneOffInBBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRecursiveOneOffInBFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder getRecursiveOneOffInBOrBuilder() {
        if (recursiveOneOffInBBuilder_ != null) {
          return recursiveOneOffInBBuilder_.getMessageOrBuilder();
        } else {
          return recursiveOneOffInB_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.getDefaultInstance() : recursiveOneOffInB_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OneOfEventWithRecursion recursiveOneOffInB = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder> 
          getRecursiveOneOffInBFieldBuilder() {
        if (recursiveOneOffInBBuilder_ == null) {
          recursiveOneOffInBBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursion.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OneOfEventWithRecursionOrBuilder>(
                  getRecursiveOneOffInB(),
                  getParentForChildren(),
                  isClean());
          recursiveOneOffInB_ = null;
        }
        return recursiveOneOffInBBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EventRecursiveB)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EventRecursiveB)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventRecursiveB>
        PARSER = new com.google.protobuf.AbstractParser<EventRecursiveB>() {
      @java.lang.Override
      public EventRecursiveB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventRecursiveB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventRecursiveB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EventRecursiveB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmptyRecursiveProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     * @return Whether the recursiveField field is set.
     */
    boolean hasRecursiveField();
    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     * @return The recursiveField.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveField();
    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveFieldOrBuilder();

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> 
        getRecursiveArrayList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveArray(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    int getRecursiveArrayCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
        getRecursiveArrayOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveArrayOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto}
   */
  public static final class EmptyRecursiveProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto)
      EmptyRecursiveProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EmptyRecursiveProto.newBuilder() to construct.
    private EmptyRecursiveProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EmptyRecursiveProto() {
      recursiveArray_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EmptyRecursiveProto();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder.class);
    }

    public static final int RECURSIVE_FIELD_FIELD_NUMBER = 1;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto recursiveField_;
    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     * @return Whether the recursiveField field is set.
     */
    @java.lang.Override
    public boolean hasRecursiveField() {
      return recursiveField_ != null;
    }
    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     * @return The recursiveField.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveField() {
      return recursiveField_ == null ? getDefaultInstance() : recursiveField_;
    }
    /**
     * <pre>
     * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
     * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveFieldOrBuilder() {
      return recursiveField_ == null ? getDefaultInstance() : recursiveField_;
    }

    public static final int RECURSIVE_ARRAY_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> recursiveArray_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> getRecursiveArrayList() {
      return recursiveArray_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
        getRecursiveArrayOrBuilderList() {
      return recursiveArray_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    @java.lang.Override
    public int getRecursiveArrayCount() {
      return recursiveArray_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveArray(int index) {
      return recursiveArray_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveArrayOrBuilder(
        int index) {
      return recursiveArray_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (recursiveField_ != null) {
        output.writeMessage(1, getRecursiveField());
      }
      for (int i = 0; i < recursiveArray_.size(); i++) {
        output.writeMessage(2, recursiveArray_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (recursiveField_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRecursiveField());
      }
      for (int i = 0; i < recursiveArray_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, recursiveArray_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto) obj;

      if (hasRecursiveField() != other.hasRecursiveField()) return false;
      if (hasRecursiveField()) {
        if (!getRecursiveField()
            .equals(other.getRecursiveField())) return false;
      }
      if (!getRecursiveArrayList()
          .equals(other.getRecursiveArrayList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRecursiveField()) {
        hash = (37 * hash) + RECURSIVE_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveField().hashCode();
      }
      if (getRecursiveArrayCount() > 0) {
        hash = (37 * hash) + RECURSIVE_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveArrayList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        recursiveField_ = null;
        if (recursiveFieldBuilder_ != null) {
          recursiveFieldBuilder_.dispose();
          recursiveFieldBuilder_ = null;
        }
        if (recursiveArrayBuilder_ == null) {
          recursiveArray_ = java.util.Collections.emptyList();
        } else {
          recursiveArray_ = null;
          recursiveArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto result) {
        if (recursiveArrayBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            recursiveArray_ = java.util.Collections.unmodifiableList(recursiveArray_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.recursiveArray_ = recursiveArray_;
        } else {
          result.recursiveArray_ = recursiveArrayBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.recursiveField_ = recursiveFieldBuilder_ == null
              ? recursiveField_
              : recursiveFieldBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasRecursiveField()) {
          mergeRecursiveField(other.getRecursiveField());
        }
        if (recursiveArrayBuilder_ == null) {
          if (!other.recursiveArray_.isEmpty()) {
            if (recursiveArray_.isEmpty()) {
              recursiveArray_ = other.recursiveArray_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRecursiveArrayIsMutable();
              recursiveArray_.addAll(other.recursiveArray_);
            }
            onChanged();
          }
        } else {
          if (!other.recursiveArray_.isEmpty()) {
            if (recursiveArrayBuilder_.isEmpty()) {
              recursiveArrayBuilder_.dispose();
              recursiveArrayBuilder_ = null;
              recursiveArray_ = other.recursiveArray_;
              bitField0_ = (bitField0_ & ~0x00000002);
              recursiveArrayBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecursiveArrayFieldBuilder() : null;
            } else {
              recursiveArrayBuilder_.addAllMessages(other.recursiveArray_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRecursiveFieldFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto m =
                    input.readMessage(
                        parser(),
                        extensionRegistry);
                if (recursiveArrayBuilder_ == null) {
                  ensureRecursiveArrayIsMutable();
                  recursiveArray_.add(m);
                } else {
                  recursiveArrayBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto recursiveField_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> recursiveFieldBuilder_;
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       * @return Whether the recursiveField field is set.
       */
      public boolean hasRecursiveField() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       * @return The recursiveField.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveField() {
        if (recursiveFieldBuilder_ == null) {
          return recursiveField_ == null ? getDefaultInstance() : recursiveField_;
        } else {
          return recursiveFieldBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public Builder setRecursiveField(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (recursiveFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recursiveField_ = value;
        } else {
          recursiveFieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public Builder setRecursiveField(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder builderForValue) {
        if (recursiveFieldBuilder_ == null) {
          recursiveField_ = builderForValue.build();
        } else {
          recursiveFieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public Builder mergeRecursiveField(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (recursiveFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            recursiveField_ != null &&
            recursiveField_ != getDefaultInstance()) {
            getRecursiveFieldBuilder().mergeFrom(value);
          } else {
            recursiveField_ = value;
          }
        } else {
          recursiveFieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public Builder clearRecursiveField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recursiveField_ = null;
        if (recursiveFieldBuilder_ != null) {
          recursiveFieldBuilder_.dispose();
          recursiveFieldBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder getRecursiveFieldBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRecursiveFieldFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveFieldOrBuilder() {
        if (recursiveFieldBuilder_ != null) {
          return recursiveFieldBuilder_.getMessageOrBuilder();
        } else {
          return recursiveField_ == null ?
              getDefaultInstance() : recursiveField_;
        }
      }
      /**
       * <pre>
       * This is a recursive proto with no fields. Used to test edge. Catalyst schema for this
       * should be "nothing" (i.e. completely dropped) irrespective of recursive limit.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
          getRecursiveFieldFieldBuilder() {
        if (recursiveFieldBuilder_ == null) {
          recursiveFieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder>(
                  getRecursiveField(),
                  getParentForChildren(),
                  isClean());
          recursiveField_ = null;
        }
        return recursiveFieldBuilder_;
      }

      private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> recursiveArray_ =
        java.util.Collections.emptyList();
      private void ensureRecursiveArrayIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          recursiveArray_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto>(recursiveArray_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> recursiveArrayBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> getRecursiveArrayList() {
        if (recursiveArrayBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recursiveArray_);
        } else {
          return recursiveArrayBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public int getRecursiveArrayCount() {
        if (recursiveArrayBuilder_ == null) {
          return recursiveArray_.size();
        } else {
          return recursiveArrayBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getRecursiveArray(int index) {
        if (recursiveArrayBuilder_ == null) {
          return recursiveArray_.get(index);
        } else {
          return recursiveArrayBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder setRecursiveArray(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (recursiveArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecursiveArrayIsMutable();
          recursiveArray_.set(index, value);
          onChanged();
        } else {
          recursiveArrayBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder setRecursiveArray(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder builderForValue) {
        if (recursiveArrayBuilder_ == null) {
          ensureRecursiveArrayIsMutable();
          recursiveArray_.set(index, builderForValue.build());
          onChanged();
        } else {
          recursiveArrayBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder addRecursiveArray(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (recursiveArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecursiveArrayIsMutable();
          recursiveArray_.add(value);
          onChanged();
        } else {
          recursiveArrayBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder addRecursiveArray(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (recursiveArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecursiveArrayIsMutable();
          recursiveArray_.add(index, value);
          onChanged();
        } else {
          recursiveArrayBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder addRecursiveArray(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder builderForValue) {
        if (recursiveArrayBuilder_ == null) {
          ensureRecursiveArrayIsMutable();
          recursiveArray_.add(builderForValue.build());
          onChanged();
        } else {
          recursiveArrayBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder addRecursiveArray(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder builderForValue) {
        if (recursiveArrayBuilder_ == null) {
          ensureRecursiveArrayIsMutable();
          recursiveArray_.add(index, builderForValue.build());
          onChanged();
        } else {
          recursiveArrayBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder addAllRecursiveArray(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto> values) {
        if (recursiveArrayBuilder_ == null) {
          ensureRecursiveArrayIsMutable();
          addAll(
              values, recursiveArray_);
          onChanged();
        } else {
          recursiveArrayBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder clearRecursiveArray() {
        if (recursiveArrayBuilder_ == null) {
          recursiveArray_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          recursiveArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public Builder removeRecursiveArray(int index) {
        if (recursiveArrayBuilder_ == null) {
          ensureRecursiveArrayIsMutable();
          recursiveArray_.remove(index);
          onChanged();
        } else {
          recursiveArrayBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder getRecursiveArrayBuilder(
          int index) {
        return getRecursiveArrayFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getRecursiveArrayOrBuilder(
          int index) {
        if (recursiveArrayBuilder_ == null) {
          return recursiveArray_.get(index);  } else {
          return recursiveArrayBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
           getRecursiveArrayOrBuilderList() {
        if (recursiveArrayBuilder_ != null) {
          return recursiveArrayBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recursiveArray_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder addRecursiveArrayBuilder() {
        return getRecursiveArrayFieldBuilder().addBuilder(
            getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder addRecursiveArrayBuilder(
          int index) {
        return getRecursiveArrayFieldBuilder().addBuilder(
            index, getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto recursive_array = 2;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder> 
           getRecursiveArrayBuilderList() {
        return getRecursiveArrayFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
          getRecursiveArrayFieldBuilder() {
        if (recursiveArrayBuilder_ == null) {
          recursiveArrayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder>(
                  recursiveArray_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          recursiveArray_ = null;
        }
        return recursiveArrayBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EmptyRecursiveProto>
        PARSER = new com.google.protobuf.AbstractParser<EmptyRecursiveProto>() {
      @java.lang.Override
      public EmptyRecursiveProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EmptyRecursiveProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EmptyRecursiveProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmptyRecursiveProtoWrapperOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     * @return Whether the emptyRecursive field is set.
     */
    boolean hasEmptyRecursive();
    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     * @return The emptyRecursive.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getEmptyRecursive();
    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getEmptyRecursiveOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper}
   */
  public static final class EmptyRecursiveProtoWrapper extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper)
      EmptyRecursiveProtoWrapperOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EmptyRecursiveProtoWrapper.newBuilder() to construct.
    private EmptyRecursiveProtoWrapper(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EmptyRecursiveProtoWrapper() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EmptyRecursiveProtoWrapper();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMPTY_RECURSIVE_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto emptyRecursive_;
    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     * @return Whether the emptyRecursive field is set.
     */
    @java.lang.Override
    public boolean hasEmptyRecursive() {
      return emptyRecursive_ != null;
    }
    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     * @return The emptyRecursive.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getEmptyRecursive() {
      return emptyRecursive_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.getDefaultInstance() : emptyRecursive_;
    }
    /**
     * <pre>
     * This field will be dropped.
     * </pre>
     *
     * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getEmptyRecursiveOrBuilder() {
      return emptyRecursive_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.getDefaultInstance() : emptyRecursive_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (emptyRecursive_ != null) {
        output.writeMessage(2, getEmptyRecursive());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (emptyRecursive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEmptyRecursive());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasEmptyRecursive() != other.hasEmptyRecursive()) return false;
      if (hasEmptyRecursive()) {
        if (!getEmptyRecursive()
            .equals(other.getEmptyRecursive())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasEmptyRecursive()) {
        hash = (37 * hash) + EMPTY_RECURSIVE_FIELD_NUMBER;
        hash = (53 * hash) + getEmptyRecursive().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapperOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        emptyRecursive_ = null;
        if (emptyRecursiveBuilder_ != null) {
          emptyRecursiveBuilder_.dispose();
          emptyRecursiveBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.emptyRecursive_ = emptyRecursiveBuilder_ == null
              ? emptyRecursive_
              : emptyRecursiveBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasEmptyRecursive()) {
          mergeEmptyRecursive(other.getEmptyRecursive());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getEmptyRecursiveFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto emptyRecursive_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> emptyRecursiveBuilder_;
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       * @return Whether the emptyRecursive field is set.
       */
      public boolean hasEmptyRecursive() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       * @return The emptyRecursive.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto getEmptyRecursive() {
        if (emptyRecursiveBuilder_ == null) {
          return emptyRecursive_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.getDefaultInstance() : emptyRecursive_;
        } else {
          return emptyRecursiveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public Builder setEmptyRecursive(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (emptyRecursiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emptyRecursive_ = value;
        } else {
          emptyRecursiveBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public Builder setEmptyRecursive(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder builderForValue) {
        if (emptyRecursiveBuilder_ == null) {
          emptyRecursive_ = builderForValue.build();
        } else {
          emptyRecursiveBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public Builder mergeEmptyRecursive(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto value) {
        if (emptyRecursiveBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            emptyRecursive_ != null &&
            emptyRecursive_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.getDefaultInstance()) {
            getEmptyRecursiveBuilder().mergeFrom(value);
          } else {
            emptyRecursive_ = value;
          }
        } else {
          emptyRecursiveBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public Builder clearEmptyRecursive() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emptyRecursive_ = null;
        if (emptyRecursiveBuilder_ != null) {
          emptyRecursiveBuilder_.dispose();
          emptyRecursiveBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder getEmptyRecursiveBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEmptyRecursiveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder getEmptyRecursiveOrBuilder() {
        if (emptyRecursiveBuilder_ != null) {
          return emptyRecursiveBuilder_.getMessageOrBuilder();
        } else {
          return emptyRecursive_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.getDefaultInstance() : emptyRecursive_;
        }
      }
      /**
       * <pre>
       * This field will be dropped.
       * </pre>
       *
       * <code>.org.apache.spark.sql.protobuf.protos.EmptyRecursiveProto empty_recursive = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder> 
          getEmptyRecursiveFieldBuilder() {
        if (emptyRecursiveBuilder_ == null) {
          emptyRecursiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProto.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoOrBuilder>(
                  getEmptyRecursive(),
                  getParentForChildren(),
                  isClean());
          emptyRecursive_ = null;
        }
        return emptyRecursiveBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.EmptyRecursiveProtoWrapper)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EmptyRecursiveProtoWrapper>
        PARSER = new com.google.protobuf.AbstractParser<EmptyRecursiveProtoWrapper>() {
      @java.lang.Override
      public EmptyRecursiveProtoWrapper parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EmptyRecursiveProtoWrapper> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EmptyRecursiveProtoWrapper> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.EmptyRecursiveProtoWrapper getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Status)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     * @return Whether the tradeTime field is set.
     */
    boolean hasTradeTime();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     * @return The tradeTime.
     */
    org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getTradeTime();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     */
    org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getTradeTimeOrBuilder();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     * @return The status.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getStatus();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder getStatusOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Status}
   */
  public static final class Status extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Status)
      StatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Status.newBuilder() to construct.
    private Status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Status() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Status();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Status_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int TRADE_TIME_FIELD_NUMBER = 2;
    private org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp tradeTime_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     * @return Whether the tradeTime field is set.
     */
    @java.lang.Override
    public boolean hasTradeTime() {
      return tradeTime_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     * @return The tradeTime.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getTradeTime() {
      return tradeTime_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : tradeTime_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getTradeTimeOrBuilder() {
      return tradeTime_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : tradeTime_;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status status_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return status_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getStatus() {
      return status_ == null ? getDefaultInstance() : status_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder getStatusOrBuilder() {
      return status_ == null ? getDefaultInstance() : status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (tradeTime_ != null) {
        output.writeMessage(2, getTradeTime());
      }
      if (status_ != null) {
        output.writeMessage(3, getStatus());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (tradeTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTradeTime());
      }
      if (status_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status) obj;

      if (getId()
          != other.getId()) return false;
      if (hasTradeTime() != other.hasTradeTime()) return false;
      if (hasTradeTime()) {
        if (!getTradeTime()
            .equals(other.getTradeTime())) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (hasTradeTime()) {
        hash = (37 * hash) + TRADE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTradeTime().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Status}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Status)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        tradeTime_ = null;
        if (tradeTimeBuilder_ != null) {
          tradeTimeBuilder_.dispose();
          tradeTimeBuilder_ = null;
        }
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tradeTime_ = tradeTimeBuilder_ == null
              ? tradeTime_
              : tradeTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.status_ = statusBuilder_ == null
              ? status_
              : statusBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status other) {
        if (other == getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.hasTradeTime()) {
          mergeTradeTime(other.getTradeTime());
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getTradeTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp tradeTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder> tradeTimeBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       * @return Whether the tradeTime field is set.
       */
      public boolean hasTradeTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       * @return The tradeTime.
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp getTradeTime() {
        if (tradeTimeBuilder_ == null) {
          return tradeTime_ == null ? org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : tradeTime_;
        } else {
          return tradeTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public Builder setTradeTime(org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp value) {
        if (tradeTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tradeTime_ = value;
        } else {
          tradeTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public Builder setTradeTime(
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder builderForValue) {
        if (tradeTimeBuilder_ == null) {
          tradeTime_ = builderForValue.build();
        } else {
          tradeTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public Builder mergeTradeTime(org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp value) {
        if (tradeTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tradeTime_ != null &&
            tradeTime_ != org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance()) {
            getTradeTimeBuilder().mergeFrom(value);
          } else {
            tradeTime_ = value;
          }
        } else {
          tradeTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public Builder clearTradeTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tradeTime_ = null;
        if (tradeTimeBuilder_ != null) {
          tradeTimeBuilder_.dispose();
          tradeTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder getTradeTimeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTradeTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      public org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder getTradeTimeOrBuilder() {
        if (tradeTimeBuilder_ != null) {
          return tradeTimeBuilder_.getMessageOrBuilder();
        } else {
          return tradeTime_ == null ?
              org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.getDefaultInstance() : tradeTime_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Timestamp trade_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder> 
          getTradeTimeFieldBuilder() {
        if (tradeTimeBuilder_ == null) {
          tradeTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp, org.apache.spark.sql.protobuf.protos.TimestampProto.Timestamp.Builder, org.apache.spark.sql.protobuf.protos.TimestampProto.TimestampOrBuilder>(
                  getTradeTime(),
                  getParentForChildren(),
                  isClean());
          tradeTime_ = null;
        }
        return tradeTimeBuilder_;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder> statusBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       * @return The status.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public Builder setStatus(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public Builder setStatus(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public Builder mergeStatus(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            status_ != null &&
            status_ != getDefaultInstance()) {
            getStatusBuilder().mergeFrom(value);
          } else {
            status_ = value;
          }
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder getStatusBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              getDefaultInstance() : status_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Status status = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.StatusOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Status)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Status)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Status>
        PARSER = new com.google.protobuf.AbstractParser<Status>() {
      @java.lang.Override
      public Status parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Status> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Status> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Status getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoWithAnyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.ProtoWithAny)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string event_name = 1;</code>
     * @return The eventName.
     */
    java.lang.String getEventName();
    /**
     * <code>string event_name = 1;</code>
     * @return The bytes for eventName.
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    /**
     * <code>.google.protobuf.Any details = 3;</code>
     * @return Whether the details field is set.
     */
    boolean hasDetails();
    /**
     * <code>.google.protobuf.Any details = 3;</code>
     * @return The details.
     */
    com.google.protobuf.Any getDetails();
    /**
     * <code>.google.protobuf.Any details = 3;</code>
     */
    com.google.protobuf.AnyOrBuilder getDetailsOrBuilder();
  }
  /**
   * <pre>
   * Messages for testing Any fields
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.ProtoWithAny}
   */
  public static final class ProtoWithAny extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.ProtoWithAny)
      ProtoWithAnyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoWithAny.newBuilder() to construct.
    private ProtoWithAny(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoWithAny() {
      eventName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoWithAny();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny.Builder.class);
    }

    public static final int EVENT_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object eventName_ = "";
    /**
     * <code>string event_name = 1;</code>
     * @return The eventName.
     */
    @java.lang.Override
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eventName_ = s;
        return s;
      }
    }
    /**
     * <code>string event_name = 1;</code>
     * @return The bytes for eventName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DETAILS_FIELD_NUMBER = 3;
    private com.google.protobuf.Any details_;
    /**
     * <code>.google.protobuf.Any details = 3;</code>
     * @return Whether the details field is set.
     */
    @java.lang.Override
    public boolean hasDetails() {
      return details_ != null;
    }
    /**
     * <code>.google.protobuf.Any details = 3;</code>
     * @return The details.
     */
    @java.lang.Override
    public com.google.protobuf.Any getDetails() {
      return details_ == null ? com.google.protobuf.Any.getDefaultInstance() : details_;
    }
    /**
     * <code>.google.protobuf.Any details = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getDetailsOrBuilder() {
      return details_ == null ? com.google.protobuf.Any.getDefaultInstance() : details_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(eventName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, eventName_);
      }
      if (details_ != null) {
        output.writeMessage(3, getDetails());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(eventName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, eventName_);
      }
      if (details_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDetails());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny) obj;

      if (!getEventName()
          .equals(other.getEventName())) return false;
      if (hasDetails() != other.hasDetails()) return false;
      if (hasDetails()) {
        if (!getDetails()
            .equals(other.getDetails())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EVENT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getEventName().hashCode();
      if (hasDetails()) {
        hash = (37 * hash) + DETAILS_FIELD_NUMBER;
        hash = (53 * hash) + getDetails().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Messages for testing Any fields
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.ProtoWithAny}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.ProtoWithAny)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        eventName_ = "";
        details_ = null;
        if (detailsBuilder_ != null) {
          detailsBuilder_.dispose();
          detailsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.eventName_ = eventName_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.details_ = detailsBuilder_ == null
              ? details_
              : detailsBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getEventName().isEmpty()) {
          eventName_ = other.eventName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDetails()) {
          mergeDetails(other.getDetails());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                eventName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                input.readMessage(
                    getDetailsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object eventName_ = "";
      /**
       * <code>string event_name = 1;</code>
       * @return The eventName.
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          eventName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string event_name = 1;</code>
       * @return The bytes for eventName.
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string event_name = 1;</code>
       * @param value The eventName to set.
       * @return This builder for chaining.
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        eventName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string event_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventName() {
        eventName_ = getDefaultInstance().getEventName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string event_name = 1;</code>
       * @param value The bytes for eventName to set.
       * @return This builder for chaining.
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        eventName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any details_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> detailsBuilder_;
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       * @return Whether the details field is set.
       */
      public boolean hasDetails() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       * @return The details.
       */
      public com.google.protobuf.Any getDetails() {
        if (detailsBuilder_ == null) {
          return details_ == null ? com.google.protobuf.Any.getDefaultInstance() : details_;
        } else {
          return detailsBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public Builder setDetails(com.google.protobuf.Any value) {
        if (detailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          details_ = value;
        } else {
          detailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public Builder setDetails(
          com.google.protobuf.Any.Builder builderForValue) {
        if (detailsBuilder_ == null) {
          details_ = builderForValue.build();
        } else {
          detailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public Builder mergeDetails(com.google.protobuf.Any value) {
        if (detailsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            details_ != null &&
            details_ != com.google.protobuf.Any.getDefaultInstance()) {
            getDetailsBuilder().mergeFrom(value);
          } else {
            details_ = value;
          }
        } else {
          detailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public Builder clearDetails() {
        bitField0_ = (bitField0_ & ~0x00000002);
        details_ = null;
        if (detailsBuilder_ != null) {
          detailsBuilder_.dispose();
          detailsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public com.google.protobuf.Any.Builder getDetailsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDetailsOrBuilder() {
        if (detailsBuilder_ != null) {
          return detailsBuilder_.getMessageOrBuilder();
        } else {
          return details_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : details_;
        }
      }
      /**
       * <code>.google.protobuf.Any details = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDetailsFieldBuilder() {
        if (detailsBuilder_ == null) {
          detailsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getDetails(),
                  getParentForChildren(),
                  isClean());
          details_ = null;
        }
        return detailsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.ProtoWithAny)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.ProtoWithAny)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoWithAny>
        PARSER = new com.google.protobuf.AbstractParser<ProtoWithAny>() {
      @java.lang.Override
      public ProtoWithAny parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoWithAny> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoWithAny> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAny getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoWithAnyArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string description = 1;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getItemsList();
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    com.google.protobuf.Any getItems(int index);
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    com.google.protobuf.AnyOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A container of Any fields
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray}
   */
  public static final class ProtoWithAnyArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray)
      ProtoWithAnyArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoWithAnyArray.newBuilder() to construct.
    private ProtoWithAnyArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoWithAnyArray() {
      description_ = "";
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoWithAnyArray();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray.Builder.class);
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <code>string description = 1;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.google.protobuf.Any> items_;
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.Any> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Any getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.Any items = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, description_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, description_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray) obj;

      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A container of Any fields
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        description_ = "";
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
        } else {
          items_ = null;
          itemsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray result) {
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.description_ = description_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.Any m =
                    input.readMessage(
                        com.google.protobuf.Any.parser(),
                        extensionRegistry);
                if (itemsBuilder_ == null) {
                  ensureItemsIsMutable();
                  items_.add(m);
                } else {
                  itemsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object description_ = "";
      /**
       * <code>string description = 1;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 1;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 1;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string description = 1;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.Any> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          items_ = new java.util.ArrayList<com.google.protobuf.Any>(items_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public java.util.List<com.google.protobuf.Any> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public com.google.protobuf.Any getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder setItems(
          int index, com.google.protobuf.Any value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder setItems(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder addItems(com.google.protobuf.Any value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder addItems(
          int index, com.google.protobuf.Any value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder addItems(
          com.google.protobuf.Any.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder addItems(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends com.google.protobuf.Any> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public com.google.protobuf.Any.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public com.google.protobuf.AnyOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public com.google.protobuf.Any.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public com.google.protobuf.Any.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <code>repeated .google.protobuf.Any items = 2;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.ProtoWithAnyArray)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoWithAnyArray>
        PARSER = new com.google.protobuf.AbstractParser<ProtoWithAnyArray>() {
      @java.lang.Override
      public ProtoWithAnyArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoWithAnyArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoWithAnyArray> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.ProtoWithAnyArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Proto3AllTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Proto3AllTypes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 int = 1;</code>
     * @return The int.
     */
    long getInt();

    /**
     * <code>string text = 2;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>string text = 2;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enum numeric value on the wire for enumVal.
     */
    int getEnumValValue();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enumVal.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getEnumVal();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     * @return Whether the message field is set.
     */
    boolean hasMessage();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     * @return The message.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getMessage();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getMessageOrBuilder();

    /**
     * <code>optional int64 optional_int = 5;</code>
     * @return Whether the optionalInt field is set.
     */
    boolean hasOptionalInt();
    /**
     * <code>optional int64 optional_int = 5;</code>
     * @return The optionalInt.
     */
    long getOptionalInt();

    /**
     * <code>optional string optional_text = 6;</code>
     * @return Whether the optionalText field is set.
     */
    boolean hasOptionalText();
    /**
     * <code>optional string optional_text = 6;</code>
     * @return The optionalText.
     */
    java.lang.String getOptionalText();
    /**
     * <code>optional string optional_text = 6;</code>
     * @return The bytes for optionalText.
     */
    com.google.protobuf.ByteString
        getOptionalTextBytes();

    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return Whether the optionalEnumVal field is set.
     */
    boolean hasOptionalEnumVal();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return The enum numeric value on the wire for optionalEnumVal.
     */
    int getOptionalEnumValValue();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return The optionalEnumVal.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getOptionalEnumVal();

    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     * @return Whether the optionalMessage field is set.
     */
    boolean hasOptionalMessage();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     * @return The optionalMessage.
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOptionalMessage();
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOptionalMessageOrBuilder();

    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @return A list containing the repeatedNum.
     */
    java.util.List<java.lang.Long> getRepeatedNumList();
    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @return The count of repeatedNum.
     */
    int getRepeatedNumCount();
    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @param index The index of the element to return.
     * @return The repeatedNum at the given index.
     */
    long getRepeatedNum(int index);

    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> 
        getRepeatedMessageList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getRepeatedMessage(int index);
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    int getRepeatedMessageCount();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
        getRepeatedMessageOrBuilderList();
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getRepeatedMessageOrBuilder(
        int index);

    /**
     * <code>int32 option_a = 11;</code>
     * @return Whether the optionA field is set.
     */
    boolean hasOptionA();
    /**
     * <code>int32 option_a = 11;</code>
     * @return The optionA.
     */
    int getOptionA();

    /**
     * <code>string option_b = 12;</code>
     * @return Whether the optionB field is set.
     */
    boolean hasOptionB();
    /**
     * <code>string option_b = 12;</code>
     * @return The optionB.
     */
    java.lang.String getOptionB();
    /**
     * <code>string option_b = 12;</code>
     * @return The bytes for optionB.
     */
    com.google.protobuf.ByteString
        getOptionBBytes();

    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    int getMapCount();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    boolean containsMap(
        java.lang.String key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMap();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapMap();
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    java.lang.String getMapOrThrow(
        java.lang.String key);

    org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * Contains a representative sample of all types, using the groupings defined
   * here: https://protobuf.dev/programming-guides/field_presence/#presence-in-proto3-apis
   * </pre>
   *
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Proto3AllTypes}
   */
  public static final class Proto3AllTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Proto3AllTypes)
      Proto3AllTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Proto3AllTypes.newBuilder() to construct.
    private Proto3AllTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Proto3AllTypes() {
      text_ = "";
      enumVal_ = 0;
      optionalText_ = "";
      optionalEnumVal_ = 0;
      repeatedNum_ = emptyLongList();
      repeatedMessage_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Proto3AllTypes();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NOTHING = 0;</code>
       */
      NOTHING(0),
      /**
       * <code>FIRST = 1;</code>
       */
      FIRST(1),
      /**
       * <code>SECOND = 2;</code>
       */
      SECOND(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NOTHING = 0;</code>
       */
      public static final int NOTHING_VALUE = 0;
      /**
       * <code>FIRST = 1;</code>
       */
      public static final int FIRST_VALUE = 1;
      /**
       * <code>SECOND = 2;</code>
       */
      public static final int SECOND_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return NOTHING;
          case 1: return FIRST;
          case 2: return SECOND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final NestedEnum[] VALUES = values();

      public static NestedEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum)
    }

    private int bitField0_;
    private int payloadCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      OPTION_A(11),
      OPTION_B(12),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 11: return OPTION_A;
          case 12: return OPTION_B;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int INT_FIELD_NUMBER = 1;
    private long int_ = 0L;
    /**
     * <code>int64 int = 1;</code>
     * @return The int.
     */
    @java.lang.Override
    public long getInt() {
      return int_;
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object text_ = "";
    /**
     * <code>string text = 2;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <code>string text = 2;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENUM_VAL_FIELD_NUMBER = 3;
    private int enumVal_ = 0;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enum numeric value on the wire for enumVal.
     */
    @java.lang.Override public int getEnumValValue() {
      return enumVal_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
     * @return The enumVal.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getEnumVal() {
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.forNumber(enumVal_);
      return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample message_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return message_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     * @return The message.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getMessage() {
      return message_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : message_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getMessageOrBuilder() {
      return message_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : message_;
    }

    public static final int OPTIONAL_INT_FIELD_NUMBER = 5;
    private long optionalInt_ = 0L;
    /**
     * <code>optional int64 optional_int = 5;</code>
     * @return Whether the optionalInt field is set.
     */
    @java.lang.Override
    public boolean hasOptionalInt() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 optional_int = 5;</code>
     * @return The optionalInt.
     */
    @java.lang.Override
    public long getOptionalInt() {
      return optionalInt_;
    }

    public static final int OPTIONAL_TEXT_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object optionalText_ = "";
    /**
     * <code>optional string optional_text = 6;</code>
     * @return Whether the optionalText field is set.
     */
    @java.lang.Override
    public boolean hasOptionalText() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string optional_text = 6;</code>
     * @return The optionalText.
     */
    @java.lang.Override
    public java.lang.String getOptionalText() {
      java.lang.Object ref = optionalText_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionalText_ = s;
        return s;
      }
    }
    /**
     * <code>optional string optional_text = 6;</code>
     * @return The bytes for optionalText.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOptionalTextBytes() {
      java.lang.Object ref = optionalText_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionalText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONAL_ENUM_VAL_FIELD_NUMBER = 7;
    private int optionalEnumVal_ = 0;
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return Whether the optionalEnumVal field is set.
     */
    @java.lang.Override public boolean hasOptionalEnumVal() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return The enum numeric value on the wire for optionalEnumVal.
     */
    @java.lang.Override public int getOptionalEnumValValue() {
      return optionalEnumVal_;
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
     * @return The optionalEnumVal.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getOptionalEnumVal() {
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.forNumber(optionalEnumVal_);
      return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.UNRECOGNIZED : result;
    }

    public static final int OPTIONAL_MESSAGE_FIELD_NUMBER = 8;
    private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample optionalMessage_;
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     * @return Whether the optionalMessage field is set.
     */
    @java.lang.Override
    public boolean hasOptionalMessage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     * @return The optionalMessage.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOptionalMessage() {
      return optionalMessage_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : optionalMessage_;
    }
    /**
     * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOptionalMessageOrBuilder() {
      return optionalMessage_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : optionalMessage_;
    }

    public static final int REPEATED_NUM_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList repeatedNum_;
    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @return A list containing the repeatedNum.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRepeatedNumList() {
      return repeatedNum_;
    }
    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @return The count of repeatedNum.
     */
    public int getRepeatedNumCount() {
      return repeatedNum_.size();
    }
    /**
     * <code>repeated int64 repeated_num = 9;</code>
     * @param index The index of the element to return.
     * @return The repeatedNum at the given index.
     */
    public long getRepeatedNum(int index) {
      return repeatedNum_.getLong(index);
    }
    private int repeatedNumMemoizedSerializedSize = -1;

    public static final int REPEATED_MESSAGE_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> repeatedMessage_;
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> getRepeatedMessageList() {
      return repeatedMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
        getRepeatedMessageOrBuilderList() {
      return repeatedMessage_;
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    @java.lang.Override
    public int getRepeatedMessageCount() {
      return repeatedMessage_.size();
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getRepeatedMessage(int index) {
      return repeatedMessage_.get(index);
    }
    /**
     * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getRepeatedMessageOrBuilder(
        int index) {
      return repeatedMessage_.get(index);
    }

    public static final int OPTION_A_FIELD_NUMBER = 11;
    /**
     * <code>int32 option_a = 11;</code>
     * @return Whether the optionA field is set.
     */
    @java.lang.Override
    public boolean hasOptionA() {
      return payloadCase_ == 11;
    }
    /**
     * <code>int32 option_a = 11;</code>
     * @return The optionA.
     */
    @java.lang.Override
    public int getOptionA() {
      if (payloadCase_ == 11) {
        return (java.lang.Integer) payload_;
      }
      return 0;
    }

    public static final int OPTION_B_FIELD_NUMBER = 12;
    /**
     * <code>string option_b = 12;</code>
     * @return Whether the optionB field is set.
     */
    public boolean hasOptionB() {
      return payloadCase_ == 12;
    }
    /**
     * <code>string option_b = 12;</code>
     * @return The optionB.
     */
    public java.lang.String getOptionB() {
      java.lang.Object ref = "";
      if (payloadCase_ == 12) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (payloadCase_ == 12) {
          payload_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string option_b = 12;</code>
     * @return The bytes for optionB.
     */
    public com.google.protobuf.ByteString
        getOptionBBytes() {
      java.lang.Object ref = "";
      if (payloadCase_ == 12) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (payloadCase_ == 12) {
          payload_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_FIELD_NUMBER = 13;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                      internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> map_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMap() {
      if (map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapDefaultEntryHolder.defaultEntry);
      }
      return map_;
    }
    public int getMapCount() {
      return internalGetMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public boolean containsMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMap() {
      return getMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
      return internalGetMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map = 13;</code>
     */
    @java.lang.Override
    public java.lang.String getMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (int_ != 0L) {
        output.writeInt64(1, int_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
      }
      if (enumVal_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.NOTHING.getNumber()) {
        output.writeEnum(3, enumVal_);
      }
      if (message_ != null) {
        output.writeMessage(4, getMessage());
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(5, optionalInt_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, optionalText_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(7, optionalEnumVal_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(8, getOptionalMessage());
      }
      if (getRepeatedNumList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(repeatedNumMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedNum_.size(); i++) {
        output.writeInt64NoTag(repeatedNum_.getLong(i));
      }
      for (int i = 0; i < repeatedMessage_.size(); i++) {
        output.writeMessage(10, repeatedMessage_.get(i));
      }
      if (payloadCase_ == 11) {
        output.writeInt32(
            11, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 12) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, payload_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMap(),
          MapDefaultEntryHolder.defaultEntry,
          13);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (int_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, int_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
      }
      if (enumVal_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.NOTHING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, enumVal_);
      }
      if (message_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMessage());
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, optionalInt_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, optionalText_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, optionalEnumVal_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getOptionalMessage());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(repeatedNum_.getLong(i));
        }
        size += dataSize;
        if (!getRepeatedNumList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedNumMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < repeatedMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, repeatedMessage_.get(i));
      }
      if (payloadCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              11, (int)((java.lang.Integer) payload_));
      }
      if (payloadCase_ == 12) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, payload_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        map__ = MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, map__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes other = (org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes) obj;

      if (getInt()
          != other.getInt()) return false;
      if (!getText()
          .equals(other.getText())) return false;
      if (enumVal_ != other.enumVal_) return false;
      if (hasMessage() != other.hasMessage()) return false;
      if (hasMessage()) {
        if (!getMessage()
            .equals(other.getMessage())) return false;
      }
      if (hasOptionalInt() != other.hasOptionalInt()) return false;
      if (hasOptionalInt()) {
        if (getOptionalInt()
            != other.getOptionalInt()) return false;
      }
      if (hasOptionalText() != other.hasOptionalText()) return false;
      if (hasOptionalText()) {
        if (!getOptionalText()
            .equals(other.getOptionalText())) return false;
      }
      if (hasOptionalEnumVal() != other.hasOptionalEnumVal()) return false;
      if (hasOptionalEnumVal()) {
        if (optionalEnumVal_ != other.optionalEnumVal_) return false;
      }
      if (hasOptionalMessage() != other.hasOptionalMessage()) return false;
      if (hasOptionalMessage()) {
        if (!getOptionalMessage()
            .equals(other.getOptionalMessage())) return false;
      }
      if (!getRepeatedNumList()
          .equals(other.getRepeatedNumList())) return false;
      if (!getRepeatedMessageList()
          .equals(other.getRepeatedMessageList())) return false;
      if (!internalGetMap().equals(
          other.internalGetMap())) return false;
      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 11:
          if (getOptionA()
              != other.getOptionA()) return false;
          break;
        case 12:
          if (!getOptionB()
              .equals(other.getOptionB())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt());
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (37 * hash) + ENUM_VAL_FIELD_NUMBER;
      hash = (53 * hash) + enumVal_;
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      if (hasOptionalInt()) {
        hash = (37 * hash) + OPTIONAL_INT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOptionalInt());
      }
      if (hasOptionalText()) {
        hash = (37 * hash) + OPTIONAL_TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalText().hashCode();
      }
      if (hasOptionalEnumVal()) {
        hash = (37 * hash) + OPTIONAL_ENUM_VAL_FIELD_NUMBER;
        hash = (53 * hash) + optionalEnumVal_;
      }
      if (hasOptionalMessage()) {
        hash = (37 * hash) + OPTIONAL_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalMessage().hashCode();
      }
      if (getRepeatedNumCount() > 0) {
        hash = (37 * hash) + REPEATED_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedNumList().hashCode();
      }
      if (getRepeatedMessageCount() > 0) {
        hash = (37 * hash) + REPEATED_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedMessageList().hashCode();
      }
      if (!internalGetMap().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap().hashCode();
      }
      switch (payloadCase_) {
        case 11:
          hash = (37 * hash) + OPTION_A_FIELD_NUMBER;
          hash = (53 * hash) + getOptionA();
          break;
        case 12:
          hash = (37 * hash) + OPTION_B_FIELD_NUMBER;
          hash = (53 * hash) + getOptionB().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains a representative sample of all types, using the groupings defined
     * here: https://protobuf.dev/programming-guides/field_presence/#presence-in-proto3-apis
     * </pre>
     *
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Proto3AllTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Proto3AllTypes)
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.class, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getOptionalMessageFieldBuilder();
          getRepeatedMessageFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        int_ = 0L;
        text_ = "";
        enumVal_ = 0;
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        optionalInt_ = 0L;
        optionalText_ = "";
        optionalEnumVal_ = 0;
        optionalMessage_ = null;
        if (optionalMessageBuilder_ != null) {
          optionalMessageBuilder_.dispose();
          optionalMessageBuilder_ = null;
        }
        repeatedNum_ = emptyLongList();
        if (repeatedMessageBuilder_ == null) {
          repeatedMessage_ = java.util.Collections.emptyList();
        } else {
          repeatedMessage_ = null;
          repeatedMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableMap().clear();
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes build() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes buildPartial() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes result = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes result) {
        if (((bitField0_ & 0x00000100) != 0)) {
          repeatedNum_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.repeatedNum_ = repeatedNum_;
        if (repeatedMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            repeatedMessage_ = java.util.Collections.unmodifiableList(repeatedMessage_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.repeatedMessage_ = repeatedMessage_;
        } else {
          result.repeatedMessage_ = repeatedMessageBuilder_.build();
        }
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.int_ = int_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.text_ = text_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.enumVal_ = enumVal_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.message_ = messageBuilder_ == null
              ? message_
              : messageBuilder_.build();
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.optionalInt_ = optionalInt_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.optionalText_ = optionalText_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.optionalEnumVal_ = optionalEnumVal_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.optionalMessage_ = optionalMessageBuilder_ == null
              ? optionalMessage_
              : optionalMessageBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.map_ = internalGetMap();
          result.map_.makeImmutable();
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes result) {
        result.payloadCase_ = payloadCase_;
        result.payload_ = this.payload_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes other) {
        if (other == getDefaultInstance()) return this;
        if (other.getInt() != 0L) {
          setInt(other.getInt());
        }
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.enumVal_ != 0) {
          setEnumValValue(other.getEnumValValue());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasOptionalInt()) {
          setOptionalInt(other.getOptionalInt());
        }
        if (other.hasOptionalText()) {
          optionalText_ = other.optionalText_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (other.hasOptionalEnumVal()) {
          setOptionalEnumVal(other.getOptionalEnumVal());
        }
        if (other.hasOptionalMessage()) {
          mergeOptionalMessage(other.getOptionalMessage());
        }
        if (!other.repeatedNum_.isEmpty()) {
          if (repeatedNum_.isEmpty()) {
            repeatedNum_ = other.repeatedNum_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRepeatedNumIsMutable();
            repeatedNum_.addAll(other.repeatedNum_);
          }
          onChanged();
        }
        if (repeatedMessageBuilder_ == null) {
          if (!other.repeatedMessage_.isEmpty()) {
            if (repeatedMessage_.isEmpty()) {
              repeatedMessage_ = other.repeatedMessage_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureRepeatedMessageIsMutable();
              repeatedMessage_.addAll(other.repeatedMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.repeatedMessage_.isEmpty()) {
            if (repeatedMessageBuilder_.isEmpty()) {
              repeatedMessageBuilder_.dispose();
              repeatedMessageBuilder_ = null;
              repeatedMessage_ = other.repeatedMessage_;
              bitField0_ = (bitField0_ & ~0x00000200);
              repeatedMessageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRepeatedMessageFieldBuilder() : null;
            } else {
              repeatedMessageBuilder_.addAllMessages(other.repeatedMessage_);
            }
          }
        }
        internalGetMutableMap().mergeFrom(
            other.internalGetMap());
        bitField0_ |= 0x00001000;
        switch (other.getPayloadCase()) {
          case OPTION_A: {
            setOptionA(other.getOptionA());
            break;
          }
          case OPTION_B: {
            payloadCase_ = 12;
            payload_ = other.payload_;
            onChanged();
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                text_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                enumVal_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getMessageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                optionalInt_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                optionalText_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 56: {
                optionalEnumVal_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                input.readMessage(
                    getOptionalMessageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                long v = input.readInt64();
                ensureRepeatedNumIsMutable();
                repeatedNum_.addLong(v);
                break;
              } // case 72
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRepeatedNumIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  repeatedNum_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 74
              case 82: {
                org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample m =
                    input.readMessage(
                        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.parser(),
                        extensionRegistry);
                if (repeatedMessageBuilder_ == null) {
                  ensureRepeatedMessageIsMutable();
                  repeatedMessage_.add(m);
                } else {
                  repeatedMessageBuilder_.addMessage(m);
                }
                break;
              } // case 82
              case 88: {
                payload_ = input.readInt32();
                payloadCase_ = 11;
                break;
              } // case 88
              case 98: {
                java.lang.String s = input.readStringRequireUtf8();
                payloadCase_ = 12;
                payload_ = s;
                break;
              } // case 98
              case 106: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                map__ = input.readMessage(
                    MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMap().getMutableMap().put(
                    map__.getKey(), map__.getValue());
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private long int_ ;
      /**
       * <code>int64 int = 1;</code>
       * @return The int.
       */
      @java.lang.Override
      public long getInt() {
        return int_;
      }
      /**
       * <code>int64 int = 1;</code>
       * @param value The int to set.
       * @return This builder for chaining.
       */
      public Builder setInt(long value) {

        int_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        int_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>string text = 2;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string text = 2;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string text = 2;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string text = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        text_ = getDefaultInstance().getText();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string text = 2;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int enumVal_ = 0;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
       * @return The enum numeric value on the wire for enumVal.
       */
      @java.lang.Override public int getEnumValValue() {
        return enumVal_;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
       * @param value The enum numeric value on the wire for enumVal to set.
       * @return This builder for chaining.
       */
      public Builder setEnumValValue(int value) {
        enumVal_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
       * @return The enumVal.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getEnumVal() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.forNumber(enumVal_);
        return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
       * @param value The enumVal to set.
       * @return This builder for chaining.
       */
      public Builder setEnumVal(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        enumVal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum enum_val = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnumVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enumVal_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample message_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> messageBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       * @return Whether the message field is set.
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       * @return The message.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getMessage() {
        if (messageBuilder_ == null) {
          return message_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public Builder setMessage(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public Builder setMessage(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public Builder mergeMessage(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            message_ != null &&
            message_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance()) {
            getMessageBuilder().mergeFrom(value);
          } else {
            message_ = value;
          }
        } else {
          messageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder getMessageBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : message_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.OtherExample message = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder>(
                  getMessage(),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private long optionalInt_ ;
      /**
       * <code>optional int64 optional_int = 5;</code>
       * @return Whether the optionalInt field is set.
       */
      @java.lang.Override
      public boolean hasOptionalInt() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int64 optional_int = 5;</code>
       * @return The optionalInt.
       */
      @java.lang.Override
      public long getOptionalInt() {
        return optionalInt_;
      }
      /**
       * <code>optional int64 optional_int = 5;</code>
       * @param value The optionalInt to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalInt(long value) {

        optionalInt_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 optional_int = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionalInt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        optionalInt_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object optionalText_ = "";
      /**
       * <code>optional string optional_text = 6;</code>
       * @return Whether the optionalText field is set.
       */
      public boolean hasOptionalText() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional string optional_text = 6;</code>
       * @return The optionalText.
       */
      public java.lang.String getOptionalText() {
        java.lang.Object ref = optionalText_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          optionalText_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string optional_text = 6;</code>
       * @return The bytes for optionalText.
       */
      public com.google.protobuf.ByteString
          getOptionalTextBytes() {
        java.lang.Object ref = optionalText_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          optionalText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string optional_text = 6;</code>
       * @param value The optionalText to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalText(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        optionalText_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional string optional_text = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionalText() {
        optionalText_ = getDefaultInstance().getOptionalText();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>optional string optional_text = 6;</code>
       * @param value The bytes for optionalText to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        optionalText_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private int optionalEnumVal_ = 0;
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @return Whether the optionalEnumVal field is set.
       */
      @java.lang.Override public boolean hasOptionalEnumVal() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @return The enum numeric value on the wire for optionalEnumVal.
       */
      @java.lang.Override public int getOptionalEnumValValue() {
        return optionalEnumVal_;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @param value The enum numeric value on the wire for optionalEnumVal to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalEnumValValue(int value) {
        optionalEnumVal_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @return The optionalEnumVal.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum getOptionalEnumVal() {
        org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum result = org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.forNumber(optionalEnumVal_);
        return result == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @param value The optionalEnumVal to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalEnumVal(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        optionalEnumVal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.Proto3AllTypes.NestedEnum optional_enum_val = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionalEnumVal() {
        bitField0_ = (bitField0_ & ~0x00000040);
        optionalEnumVal_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample optionalMessage_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> optionalMessageBuilder_;
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       * @return Whether the optionalMessage field is set.
       */
      public boolean hasOptionalMessage() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       * @return The optionalMessage.
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getOptionalMessage() {
        if (optionalMessageBuilder_ == null) {
          return optionalMessage_ == null ? org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : optionalMessage_;
        } else {
          return optionalMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public Builder setOptionalMessage(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (optionalMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionalMessage_ = value;
        } else {
          optionalMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public Builder setOptionalMessage(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (optionalMessageBuilder_ == null) {
          optionalMessage_ = builderForValue.build();
        } else {
          optionalMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public Builder mergeOptionalMessage(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (optionalMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            optionalMessage_ != null &&
            optionalMessage_ != org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance()) {
            getOptionalMessageBuilder().mergeFrom(value);
          } else {
            optionalMessage_ = value;
          }
        } else {
          optionalMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public Builder clearOptionalMessage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        optionalMessage_ = null;
        if (optionalMessageBuilder_ != null) {
          optionalMessageBuilder_.dispose();
          optionalMessageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder getOptionalMessageBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getOptionalMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getOptionalMessageOrBuilder() {
        if (optionalMessageBuilder_ != null) {
          return optionalMessageBuilder_.getMessageOrBuilder();
        } else {
          return optionalMessage_ == null ?
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance() : optionalMessage_;
        }
      }
      /**
       * <code>optional .org.apache.spark.sql.protobuf.protos.OtherExample optional_message = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
          getOptionalMessageFieldBuilder() {
        if (optionalMessageBuilder_ == null) {
          optionalMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder>(
                  getOptionalMessage(),
                  getParentForChildren(),
                  isClean());
          optionalMessage_ = null;
        }
        return optionalMessageBuilder_;
      }

      private com.google.protobuf.Internal.LongList repeatedNum_ = emptyLongList();
      private void ensureRepeatedNumIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          repeatedNum_ = mutableCopy(repeatedNum_);
          bitField0_ |= 0x00000100;
        }
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @return A list containing the repeatedNum.
       */
      public java.util.List<java.lang.Long>
          getRepeatedNumList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(repeatedNum_) : repeatedNum_;
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @return The count of repeatedNum.
       */
      public int getRepeatedNumCount() {
        return repeatedNum_.size();
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @param index The index of the element to return.
       * @return The repeatedNum at the given index.
       */
      public long getRepeatedNum(int index) {
        return repeatedNum_.getLong(index);
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @param index The index to set the value at.
       * @param value The repeatedNum to set.
       * @return This builder for chaining.
       */
      public Builder setRepeatedNum(
          int index, long value) {

        ensureRepeatedNumIsMutable();
        repeatedNum_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @param value The repeatedNum to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedNum(long value) {

        ensureRepeatedNumIsMutable();
        repeatedNum_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @param values The repeatedNum to add.
       * @return This builder for chaining.
       */
      public Builder addAllRepeatedNum(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedNumIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_num = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeatedNum() {
        repeatedNum_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> repeatedMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedMessageIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          repeatedMessage_ = new java.util.ArrayList<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample>(repeatedMessage_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> repeatedMessageBuilder_;

      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> getRepeatedMessageList() {
        if (repeatedMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(repeatedMessage_);
        } else {
          return repeatedMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public int getRepeatedMessageCount() {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.size();
        } else {
          return repeatedMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample getRepeatedMessage(int index) {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.get(index);
        } else {
          return repeatedMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder setRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.set(index, value);
          onChanged();
        } else {
          repeatedMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder setRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder addRepeatedMessage(org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(value);
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder addRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample value) {
        if (repeatedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(index, value);
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder addRepeatedMessage(
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder addRepeatedMessage(
          int index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder builderForValue) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          repeatedMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder addAllRepeatedMessage(
          java.lang.Iterable<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample> values) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          addAll(
              values, repeatedMessage_);
          onChanged();
        } else {
          repeatedMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder clearRepeatedMessage() {
        if (repeatedMessageBuilder_ == null) {
          repeatedMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          repeatedMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public Builder removeRepeatedMessage(int index) {
        if (repeatedMessageBuilder_ == null) {
          ensureRepeatedMessageIsMutable();
          repeatedMessage_.remove(index);
          onChanged();
        } else {
          repeatedMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder getRepeatedMessageBuilder(
          int index) {
        return getRepeatedMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder getRepeatedMessageOrBuilder(
          int index) {
        if (repeatedMessageBuilder_ == null) {
          return repeatedMessage_.get(index);  } else {
          return repeatedMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public java.util.List<? extends org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
           getRepeatedMessageOrBuilderList() {
        if (repeatedMessageBuilder_ != null) {
          return repeatedMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(repeatedMessage_);
        }
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder addRepeatedMessageBuilder() {
        return getRepeatedMessageFieldBuilder().addBuilder(
            org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder addRepeatedMessageBuilder(
          int index) {
        return getRepeatedMessageFieldBuilder().addBuilder(
            index, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.spark.sql.protobuf.protos.OtherExample repeated_message = 10;</code>
       */
      public java.util.List<org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder> 
           getRepeatedMessageBuilderList() {
        return getRepeatedMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder> 
          getRepeatedMessageFieldBuilder() {
        if (repeatedMessageBuilder_ == null) {
          repeatedMessageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExample.Builder, org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.OtherExampleOrBuilder>(
                  repeatedMessage_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          repeatedMessage_ = null;
        }
        return repeatedMessageBuilder_;
      }

      /**
       * <code>int32 option_a = 11;</code>
       * @return Whether the optionA field is set.
       */
      public boolean hasOptionA() {
        return payloadCase_ == 11;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @return The optionA.
       */
      public int getOptionA() {
        if (payloadCase_ == 11) {
          return (java.lang.Integer) payload_;
        }
        return 0;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @param value The optionA to set.
       * @return This builder for chaining.
       */
      public Builder setOptionA(int value) {

        payloadCase_ = 11;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 option_a = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionA() {
        if (payloadCase_ == 11) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string option_b = 12;</code>
       * @return Whether the optionB field is set.
       */
      @java.lang.Override
      public boolean hasOptionB() {
        return payloadCase_ == 12;
      }
      /**
       * <code>string option_b = 12;</code>
       * @return The optionB.
       */
      @java.lang.Override
      public java.lang.String getOptionB() {
        java.lang.Object ref = "";
        if (payloadCase_ == 12) {
          ref = payload_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (payloadCase_ == 12) {
            payload_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string option_b = 12;</code>
       * @return The bytes for optionB.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOptionBBytes() {
        java.lang.Object ref = "";
        if (payloadCase_ == 12) {
          ref = payload_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (payloadCase_ == 12) {
            payload_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string option_b = 12;</code>
       * @param value The optionB to set.
       * @return This builder for chaining.
       */
      public Builder setOptionB(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        payloadCase_ = 12;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string option_b = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionB() {
        if (payloadCase_ == 12) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string option_b = 12;</code>
       * @param value The bytes for optionB to set.
       * @return This builder for chaining.
       */
      public Builder setOptionBBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        payloadCase_ = 12;
        payload_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> map_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMap() {
        if (map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        return map_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMap() {
        if (map_ == null) {
          map_ = com.google.protobuf.MapField.newMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        if (!map_.isMutable()) {
          map_ = map_.copy();
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return map_;
      }
      public int getMapCount() {
        return internalGetMap().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public boolean containsMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMap() {
        return getMapMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
        return internalGetMap().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getMapOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      @java.lang.Override
      public java.lang.String getMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMap() {
        bitField0_ = (bitField0_ & ~0x00001000);
        internalGetMutableMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder removeMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableMap() {
        bitField0_ |= 0x00001000;
        return internalGetMutableMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder putMap(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 13;</code>
       */
      public Builder putAllMap(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00001000;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Proto3AllTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Proto3AllTypes)
    private static final org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes();
    }

    public static org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Proto3AllTypes>
        PARSER = new com.google.protobuf.AbstractParser<Proto3AllTypes>() {
      @java.lang.Override
      public Proto3AllTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Proto3AllTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Proto3AllTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.SimpleMessageProtos.Proto3AllTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_messageA_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_messageB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_messageC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Employee_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_IC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EM_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EM2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Status_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025functions_suite.proto\022$org.apache.spar" +
      "k.sql.protobuf.protos\032\017timestamp.proto\032\016" +
      "duration.proto\032\022basicmessage.proto\032\031goog" +
      "le/protobuf/any.proto\"\270\001\n\026SimpleMessageJ" +
      "avaTypes\022\n\n\002id\030\001 \001(\003\022\024\n\014string_value\030\002 \001" +
      "(\t\022\023\n\013int32_value\030\003 \001(\005\022\023\n\013int64_value\030\004" +
      " \001(\003\022\024\n\014double_value\030\005 \001(\001\022\023\n\013float_valu" +
      "e\030\006 \001(\002\022\022\n\nbool_value\030\007 \001(\010\022\023\n\013bytes_val" +
      "ue\030\010 \001(\014\"\345\002\n\rSimpleMessage\022\n\n\002id\030\001 \001(\003\022\024" +
      "\n\014string_value\030\002 \001(\t\022\023\n\013int32_value\030\003 \001(" +
      "\005\022\024\n\014uint32_value\030\004 \001(\r\022\024\n\014sint32_value\030" +
      "\005 \001(\021\022\025\n\rfixed32_value\030\006 \001(\007\022\026\n\016sfixed32" +
      "_value\030\007 \001(\017\022\023\n\013int64_value\030\010 \001(\003\022\024\n\014uin" +
      "t64_value\030\t \001(\004\022\024\n\014sint64_value\030\n \001(\022\022\025\n" +
      "\rfixed64_value\030\013 \001(\006\022\026\n\016sfixed64_value\030\014" +
      " \001(\020\022\024\n\014double_value\030\r \001(\001\022\023\n\013float_valu" +
      "e\030\016 \001(\002\022\022\n\nbool_value\030\017 \001(\010\022\023\n\013bytes_val" +
      "ue\030\020 \001(\014\"\363\002\n\025SimpleMessageRepeated\022\013\n\003ke" +
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\025\n\rrstring_value\030" +
      "\003 \003(\t\022\024\n\014rint32_value\030\004 \003(\005\022\023\n\013rbool_val" +
      "ue\030\005 \003(\010\022\024\n\014rint64_value\030\006 \003(\003\022\024\n\014rfloat" +
      "_value\030\007 \003(\002\022\025\n\rrdouble_value\030\010 \003(\001\022\024\n\014r" +
      "bytes_value\030\t \003(\014\022\\\n\014rnested_enum\030\n \003(\0162" +
      "F.org.apache.spark.sql.protobuf.protos.S" +
      "impleMessageRepeated.NestedEnum\"E\n\nNeste" +
      "dEnum\022\022\n\016NESTED_NOTHING\020\000\022\020\n\014NESTED_FIRS" +
      "T\020\001\022\021\n\rNESTED_SECOND\020\002\"\\\n\017RepeatedMessag" +
      "e\022I\n\rbasic_message\030\001 \003(\01322.org.apache.sp" +
      "ark.sql.protobuf.protos.BasicMessage\"\245\022\n" +
      "\020SimpleMessageMap\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030" +
      "\002 \001(\t\022a\n\016string_mapdata\030\003 \003(\0132I.org.apac" +
      "he.spark.sql.protobuf.protos.SimpleMessa" +
      "geMap.StringMapdataEntry\022_\n\rint32_mapdat" +
      "a\030\004 \003(\0132H.org.apache.spark.sql.protobuf." +
      "protos.SimpleMessageMap.Int32MapdataEntr" +
      "y\022a\n\016uint32_mapdata\030\005 \003(\0132I.org.apache.s" +
      "park.sql.protobuf.protos.SimpleMessageMa" +
      "p.Uint32MapdataEntry\022a\n\016sint32_mapdata\030\006" +
      " \003(\0132I.org.apache.spark.sql.protobuf.pro" +
      "tos.SimpleMessageMap.Sint32MapdataEntry\022" +
      "c\n\017float32_mapdata\030\007 \003(\0132J.org.apache.sp" +
      "ark.sql.protobuf.protos.SimpleMessageMap" +
      ".Float32MapdataEntry\022e\n\020sfixed32_mapdata" +
      "\030\010 \003(\0132K.org.apache.spark.sql.protobuf.p" +
      "rotos.SimpleMessageMap.Sfixed32MapdataEn" +
      "try\022_\n\rint64_mapdata\030\t \003(\0132H.org.apache." +
      "spark.sql.protobuf.protos.SimpleMessageM" +
      "ap.Int64MapdataEntry\022a\n\016uint64_mapdata\030\n" +
      " \003(\0132I.org.apache.spark.sql.protobuf.pro" +
      "tos.SimpleMessageMap.Uint64MapdataEntry\022" +
      "a\n\016sint64_mapdata\030\013 \003(\0132I.org.apache.spa" +
      "rk.sql.protobuf.protos.SimpleMessageMap." +
      "Sint64MapdataEntry\022c\n\017fixed64_mapdata\030\014 " +
      "\003(\0132J.org.apache.spark.sql.protobuf.prot" +
      "os.SimpleMessageMap.Fixed64MapdataEntry\022" +
      "e\n\020sfixed64_mapdata\030\r \003(\0132K.org.apache.s" +
      "park.sql.protobuf.protos.SimpleMessageMa" +
      "p.Sfixed64MapdataEntry\022a\n\016double_mapdata" +
      "\030\016 \003(\0132I.org.apache.spark.sql.protobuf.p" +
      "rotos.SimpleMessageMap.DoubleMapdataEntr" +
      "y\022_\n\rfloat_mapdata\030\017 \003(\0132H.org.apache.sp" +
      "ark.sql.protobuf.protos.SimpleMessageMap" +
      ".FloatMapdataEntry\022]\n\014bool_mapdata\030\020 \003(\013" +
      "2G.org.apache.spark.sql.protobuf.protos." +
      "SimpleMessageMap.BoolMapdataEntry\022_\n\rbyt" +
      "es_mapdata\030\021 \003(\0132H.org.apache.spark.sql." +
      "protobuf.protos.SimpleMessageMap.BytesMa" +
      "pdataEntry\0324\n\022StringMapdataEntry\022\013\n\003key\030" +
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0323\n\021Int32Mapdata" +
      "Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n" +
      "\022Uint32MapdataEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005valu" +
      "e\030\002 \001(\r:\0028\001\0324\n\022Sint32MapdataEntry\022\013\n\003key" +
      "\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001\0325\n\023Float32Mapd" +
      "ataEntry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028\001" +
      "\0326\n\024Sfixed32MapdataEntry\022\013\n\003key\030\001 \001(\017\022\r\n" +
      "\005value\030\002 \001(\017:\0028\001\0323\n\021Int64MapdataEntry\022\013\n" +
      "\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\0324\n\022Uint64M" +
      "apdataEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:" +
      "\0028\001\0324\n\022Sint64MapdataEntry\022\013\n\003key\030\001 \001(\022\022\r" +
      "\n\005value\030\002 \001(\022:\0028\001\0325\n\023Fixed64MapdataEntry" +
      "\022\013\n\003key\030\001 \001(\006\022\r\n\005value\030\002 \001(\006:\0028\001\0326\n\024Sfix" +
      "ed64MapdataEntry\022\013\n\003key\030\001 \001(\020\022\r\n\005value\030\002" +
      " \001(\020:\0028\001\0324\n\022DoubleMapdataEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\0323\n\021FloatMapdataEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\0322\n\020B" +
      "oolMapdataEntry\022\013\n\003key\030\001 \001(\010\022\r\n\005value\030\002 " +
      "\001(\010:\0028\001\0323\n\021BytesMapdataEntry\022\013\n\003key\030\001 \001(" +
      "\t\022\r\n\005value\030\002 \001(\014:\0028\001\"C\n\020BasicEnumMessage" +
      "\"/\n\tBasicEnum\022\013\n\007NOTHING\020\000\022\t\n\005FIRST\020\001\022\n\n" +
      "\006SECOND\020\002\"\376\002\n\021SimpleMessageEnum\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\t\022T\n\nbasic_enum\030\003 \001(\0162" +
      "@.org.apache.spark.sql.protobuf.protos.B" +
      "asicEnumMessage.BasicEnum\022W\n\013nested_enum" +
      "\030\004 \001(\0162B.org.apache.spark.sql.protobuf.p" +
      "rotos.SimpleMessageEnum.NestedEnum\022W\n\rre" +
      "peated_enum\030\005 \003(\0162@.org.apache.spark.sql" +
      ".protobuf.protos.BasicEnumMessage.BasicE" +
      "num\"E\n\nNestedEnum\022\022\n\016NESTED_NOTHING\020\000\022\020\n" +
      "\014NESTED_FIRST\020\001\022\021\n\rNESTED_SECOND\020\002\"\035\n\014Ot" +
      "herExample\022\r\n\005other\030\001 \001(\t\"f\n\017IncludedExa" +
      "mple\022\020\n\010included\030\001 \001(\t\022A\n\005other\030\002 \001(\01322." +
      "org.apache.spark.sql.protobuf.protos.Oth" +
      "erExample\"b\n\017MultipleExample\022O\n\020included" +
      "_example\030\001 \001(\01325.org.apache.spark.sql.pr" +
      "otobuf.protos.IncludedExample\"^\n\nrecursi" +
      "veA\022\014\n\004keyA\030\001 \001(\t\022B\n\010messageB\030\002 \001(\01320.or" +
      "g.apache.spark.sql.protobuf.protos.recur" +
      "siveB\"^\n\nrecursiveB\022\014\n\004keyB\030\001 \001(\t\022B\n\010mes" +
      "sageA\030\002 \001(\01320.org.apache.spark.sql.proto" +
      "buf.protos.recursiveA\"^\n\nrecursiveC\022\014\n\004k" +
      "eyC\030\001 \001(\t\022B\n\010messageD\030\002 \001(\01320.org.apache" +
      ".spark.sql.protobuf.protos.recursiveD\"^\n" +
      "\nrecursiveD\022\014\n\004keyD\030\001 \001(\t\022B\n\010messageC\030\002 " +
      "\003(\01320.org.apache.spark.sql.protobuf.prot" +
      "os.recursiveC\"G\n\013requiredMsg\022\013\n\003key\030\001 \001(" +
      "\t\022\r\n\005col_1\030\002 \001(\005\022\r\n\005col_2\030\003 \001(\t\022\r\n\005col_3" +
      "\030\004 \001(\005\"Z\n\014timeStampMsg\022\013\n\003key\030\001 \001(\t\022=\n\004s" +
      "tmp\030\002 \001(\0132/.org.apache.spark.sql.protobu" +
      "f.protos.Timestamp\"\\\n\013durationMsg\022\013\n\003key" +
      "\030\001 \001(\t\022@\n\010duration\030\002 \001(\0132..org.apache.sp" +
      "ark.sql.protobuf.protos.Duration\"f\n\nOneO" +
      "fEvent\022\013\n\003key\030\001 \001(\t\022\017\n\005col_1\030\002 \001(\005H\000\022\017\n\005" +
      "col_2\030\003 \001(\tH\000\022\017\n\005col_3\030\004 \001(\003H\000\022\r\n\005col_4\030" +
      "\005 \003(\tB\t\n\007payload\"\\\n\022EventWithRecursion\022\013" +
      "\n\003key\030\001 \001(\005\0229\n\001a\030\002 \001(\0132..org.apache.spar" +
      "k.sql.protobuf.protos.messageA\"\212\001\n\010messa" +
      "geA\022C\n\001a\030\001 \001(\01328.org.apache.spark.sql.pr" +
      "otobuf.protos.EventWithRecursion\0229\n\001b\030\002 " +
      "\001(\0132..org.apache.spark.sql.protobuf.prot" +
      "os.messageB\"\213\001\n\010messageB\022D\n\002aa\030\001 \001(\01328.o" +
      "rg.apache.spark.sql.protobuf.protos.Even" +
      "tWithRecursion\0229\n\001c\030\002 \001(\0132..org.apache.s" +
      "park.sql.protobuf.protos.messageC\"^\n\010mes" +
      "sageC\022E\n\003aaa\030\001 \001(\01328.org.apache.spark.sq" +
      "l.protobuf.protos.EventWithRecursion\022\013\n\003" +
      "key\030\002 \001(\005\"\341\001\n\010Employee\022\021\n\tfirstName\030\001 \001(" +
      "\t\022\020\n\010lastName\030\002 \001(\t\0226\n\002ic\030\003 \001(\0132(.org.ap" +
      "ache.spark.sql.protobuf.protos.ICH\000\0226\n\002e" +
      "m\030\004 \001(\0132(.org.apache.spark.sql.protobuf." +
      "protos.EMH\000\0228\n\003em2\030\005 \001(\0132).org.apache.sp" +
      "ark.sql.protobuf.protos.EM2H\000B\006\n\004role\"W\n" +
      "\002IC\022\016\n\006skills\030\001 \003(\t\022A\n\ticManager\030\002 \001(\0132." +
      ".org.apache.spark.sql.protobuf.protos.Em" +
      "ployee\"Y\n\002EM\022\020\n\010teamsize\030\001 \001(\003\022A\n\temMana" +
      "ger\030\002 \001(\0132..org.apache.spark.sql.protobu" +
      "f.protos.Employee\"[\n\003EM2\022\020\n\010teamsize\030\001 \001" +
      "(\003\022B\n\nem2Manager\030\002 \001(\0132..org.apache.spar" +
      "k.sql.protobuf.protos.Employee\"[\n\013EventP" +
      "erson\022\014\n\004name\030\001 \001(\t\022>\n\003bff\030\002 \001(\01321.org.a" +
      "pache.spark.sql.protobuf.protos.EventPer" +
      "son\"W\n\022EventPersonWrapper\022A\n\006person\030\001 \001(" +
      "\01321.org.apache.spark.sql.protobuf.protos" +
      ".EventPerson\"y\n\030PersonWithRecursiveArray" +
      "\022\014\n\004name\030\001 \001(\t\022O\n\007friends\030\002 \003(\0132>.org.ap" +
      "ache.spark.sql.protobuf.protos.PersonWit" +
      "hRecursiveArray\"\355\001\n\026PersonWithRecursiveM" +
      "ap\022\014\n\004name\030\001 \001(\t\022X\n\006groups\030\003 \003(\0132H.org.a" +
      "pache.spark.sql.protobuf.protos.PersonWi" +
      "thRecursiveMap.GroupsEntry\032k\n\013GroupsEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022K\n\005value\030\002 \001(\0132<.org.apac" +
      "he.spark.sql.protobuf.protos.PersonWithR" +
      "ecursiveMap:\0028\001\"\332\001\n\027OneOfEventWithRecurs" +
      "ion\022\013\n\003key\030\001 \001(\t\022K\n\nrecursiveA\030\003 \001(\01325.o" +
      "rg.apache.spark.sql.protobuf.protos.Even" +
      "tRecursiveAH\000\022K\n\nrecursiveB\030\006 \001(\01325.org." +
      "apache.spark.sql.protobuf.protos.EventRe" +
      "cursiveBH\000\022\r\n\005value\030\007 \001(\tB\t\n\007payload\"y\n\017" +
      "EventRecursiveA\022Y\n\022recursiveOneOffInA\030\001 " +
      "\001(\0132=.org.apache.spark.sql.protobuf.prot" +
      "os.OneOfEventWithRecursion\022\013\n\003key\030\002 \001(\t\"" +
      "\210\001\n\017EventRecursiveB\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\t\022Y\n\022recursiveOneOffInB\030\003 \001(\0132=.or" +
      "g.apache.spark.sql.protobuf.protos.OneOf" +
      "EventWithRecursion\"\275\001\n\023EmptyRecursivePro" +
      "to\022R\n\017recursive_field\030\001 \001(\01329.org.apache" +
      ".spark.sql.protobuf.protos.EmptyRecursiv" +
      "eProto\022R\n\017recursive_array\030\002 \003(\01329.org.ap" +
      "ache.spark.sql.protobuf.protos.EmptyRecu" +
      "rsiveProto\"~\n\032EmptyRecursiveProtoWrapper" +
      "\022\014\n\004name\030\001 \001(\t\022R\n\017empty_recursive\030\002 \001(\0132" +
      "9.org.apache.spark.sql.protobuf.protos.E" +
      "mptyRecursiveProto\"\227\001\n\006Status\022\n\n\002id\030\001 \001(" +
      "\005\022C\n\ntrade_time\030\002 \001(\0132/.org.apache.spark" +
      ".sql.protobuf.protos.Timestamp\022<\n\006status" +
      "\030\003 \001(\0132,.org.apache.spark.sql.protobuf.p" +
      "rotos.Status\"I\n\014ProtoWithAny\022\022\n\nevent_na" +
      "me\030\001 \001(\t\022%\n\007details\030\003 \001(\0132\024.google.proto" +
      "buf.Any\"M\n\021ProtoWithAnyArray\022\023\n\013descript" +
      "ion\030\001 \001(\t\022#\n\005items\030\002 \003(\0132\024.google.protob" +
      "uf.Any\"\275\006\n\016Proto3AllTypes\022\013\n\003int\030\001 \001(\003\022\014" +
      "\n\004text\030\002 \001(\t\022Q\n\010enum_val\030\003 \001(\0162?.org.apa" +
      "che.spark.sql.protobuf.protos.Proto3AllT" +
      "ypes.NestedEnum\022C\n\007message\030\004 \001(\01322.org.a" +
      "pache.spark.sql.protobuf.protos.OtherExa" +
      "mple\022\031\n\014optional_int\030\005 \001(\003H\001\210\001\001\022\032\n\roptio" +
      "nal_text\030\006 \001(\tH\002\210\001\001\022_\n\021optional_enum_val" +
      "\030\007 \001(\0162?.org.apache.spark.sql.protobuf.p" +
      "rotos.Proto3AllTypes.NestedEnumH\003\210\001\001\022Q\n\020" +
      "optional_message\030\010 \001(\01322.org.apache.spar" +
      "k.sql.protobuf.protos.OtherExampleH\004\210\001\001\022" +
      "\024\n\014repeated_num\030\t \003(\003\022L\n\020repeated_messag" +
      "e\030\n \003(\01322.org.apache.spark.sql.protobuf." +
      "protos.OtherExample\022\022\n\010option_a\030\013 \001(\005H\000\022" +
      "\022\n\010option_b\030\014 \001(\tH\000\022J\n\003map\030\r \003(\0132=.org.a" +
      "pache.spark.sql.protobuf.protos.Proto3Al" +
      "lTypes.MapEntry\032*\n\010MapEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"0\n\nNestedEnum\022\013\n\007NOT" +
      "HING\020\000\022\t\n\005FIRST\020\001\022\n\n\006SECOND\020\002B\t\n\007payload" +
      "B\017\n\r_optional_intB\020\n\016_optional_textB\024\n\022_" +
      "optional_enum_valB\023\n\021_optional_messageB\025" +
      "B\023SimpleMessageProtosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.spark.sql.protobuf.protos.TimestampProto.getDescriptor(),
          org.apache.spark.sql.protobuf.protos.DurationProto.getDescriptor(),
          org.apache.spark.sql.protobuf.protos.BasicMessageProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
        });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageJavaTypes_descriptor,
        new java.lang.String[] { "Id", "StringValue", "Int32Value", "Int64Value", "DoubleValue", "FloatValue", "BoolValue", "BytesValue", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessage_descriptor,
        new java.lang.String[] { "Id", "StringValue", "Int32Value", "Uint32Value", "Sint32Value", "Fixed32Value", "Sfixed32Value", "Int64Value", "Uint64Value", "Sint64Value", "Fixed64Value", "Sfixed64Value", "DoubleValue", "FloatValue", "BoolValue", "BytesValue", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageRepeated_descriptor,
        new java.lang.String[] { "Key", "Value", "RstringValue", "Rint32Value", "RboolValue", "Rint64Value", "RfloatValue", "RdoubleValue", "RbytesValue", "RnestedEnum", });
    internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_RepeatedMessage_descriptor,
        new java.lang.String[] { "BasicMessage", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor,
        new java.lang.String[] { "Key", "Value", "StringMapdata", "Int32Mapdata", "Uint32Mapdata", "Sint32Mapdata", "Float32Mapdata", "Sfixed32Mapdata", "Int64Mapdata", "Uint64Mapdata", "Sint64Mapdata", "Fixed64Mapdata", "Sfixed64Mapdata", "DoubleMapdata", "FloatMapdata", "BoolMapdata", "BytesMapdata", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_StringMapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int32MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint32MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(3);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint32MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(4);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Float32MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(5);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed32MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(6);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Int64MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(7);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Uint64MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(8);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sint64MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(9);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Fixed64MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(10);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_Sfixed64MapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(11);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_DoubleMapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(12);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_FloatMapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(13);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BoolMapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_descriptor.getNestedTypes().get(14);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageMap_BytesMapdataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_BasicEnumMessage_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_SimpleMessageEnum_descriptor,
        new java.lang.String[] { "Key", "Value", "BasicEnum", "NestedEnum", "RepeatedEnum", });
    internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_OtherExample_descriptor,
        new java.lang.String[] { "Other", });
    internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_IncludedExample_descriptor,
        new java.lang.String[] { "Included", "Other", });
    internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_MultipleExample_descriptor,
        new java.lang.String[] { "IncludedExample", });
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_recursiveA_descriptor,
        new java.lang.String[] { "KeyA", "MessageB", });
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_recursiveB_descriptor,
        new java.lang.String[] { "KeyB", "MessageA", });
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_recursiveC_descriptor,
        new java.lang.String[] { "KeyC", "MessageD", });
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_recursiveD_descriptor,
        new java.lang.String[] { "KeyD", "MessageC", });
    internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_requiredMsg_descriptor,
        new java.lang.String[] { "Key", "Col1", "Col2", "Col3", });
    internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_timeStampMsg_descriptor,
        new java.lang.String[] { "Key", "Stmp", });
    internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_durationMsg_descriptor,
        new java.lang.String[] { "Key", "Duration", });
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_OneOfEvent_descriptor,
        new java.lang.String[] { "Key", "Col1", "Col2", "Col3", "Col4", "Payload", });
    internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EventWithRecursion_descriptor,
        new java.lang.String[] { "Key", "A", });
    internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_org_apache_spark_sql_protobuf_protos_messageA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_messageA_descriptor,
        new java.lang.String[] { "A", "B", });
    internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_org_apache_spark_sql_protobuf_protos_messageB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_messageB_descriptor,
        new java.lang.String[] { "Aa", "C", });
    internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_org_apache_spark_sql_protobuf_protos_messageC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_messageC_descriptor,
        new java.lang.String[] { "Aaa", "Key", });
    internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_org_apache_spark_sql_protobuf_protos_Employee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Employee_descriptor,
        new java.lang.String[] { "FirstName", "LastName", "Ic", "Em", "Em2", "Role", });
    internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_org_apache_spark_sql_protobuf_protos_IC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_IC_descriptor,
        new java.lang.String[] { "Skills", "IcManager", });
    internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_org_apache_spark_sql_protobuf_protos_EM_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EM_descriptor,
        new java.lang.String[] { "Teamsize", "EmManager", });
    internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_org_apache_spark_sql_protobuf_protos_EM2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EM2_descriptor,
        new java.lang.String[] { "Teamsize", "Em2Manager", });
    internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EventPerson_descriptor,
        new java.lang.String[] { "Name", "Bff", });
    internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EventPersonWrapper_descriptor,
        new java.lang.String[] { "Person", });
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveArray_descriptor,
        new java.lang.String[] { "Name", "Friends", });
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor,
        new java.lang.String[] { "Name", "Groups", });
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_PersonWithRecursiveMap_GroupsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_OneOfEventWithRecursion_descriptor,
        new java.lang.String[] { "Key", "RecursiveA", "RecursiveB", "Value", "Payload", });
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveA_descriptor,
        new java.lang.String[] { "RecursiveOneOffInA", "Key", });
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EventRecursiveB_descriptor,
        new java.lang.String[] { "Key", "Value", "RecursiveOneOffInB", });
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProto_descriptor,
        new java.lang.String[] { "RecursiveField", "RecursiveArray", });
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_EmptyRecursiveProtoWrapper_descriptor,
        new java.lang.String[] { "Name", "EmptyRecursive", });
    internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_org_apache_spark_sql_protobuf_protos_Status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Status_descriptor,
        new java.lang.String[] { "Id", "TradeTime", "Status", });
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAny_descriptor,
        new java.lang.String[] { "EventName", "Details", });
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_ProtoWithAnyArray_descriptor,
        new java.lang.String[] { "Description", "Items", });
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor,
        new java.lang.String[] { "Int", "Text", "EnumVal", "Message", "OptionalInt", "OptionalText", "OptionalEnumVal", "OptionalMessage", "RepeatedNum", "RepeatedMessage", "OptionA", "OptionB", "Map", "Payload", "OptionalInt", "OptionalText", "OptionalEnumVal", "OptionalMessage", });
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_descriptor =
      internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Proto3AllTypes_MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.apache.spark.sql.protobuf.protos.TimestampProto.getDescriptor();
    org.apache.spark.sql.protobuf.protos.DurationProto.getDescriptor();
    org.apache.spark.sql.protobuf.protos.BasicMessageProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
