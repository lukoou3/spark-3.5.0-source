// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basicmessage.proto

package org.apache.spark.sql.protobuf.protos;

public final class BasicMessageProto {
  private BasicMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BasicMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.BasicMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    int getInt32Value();

    /**
     * <code>int64 int64_value = 4;</code>
     * @return The int64Value.
     */
    long getInt64Value();

    /**
     * <code>double double_value = 5;</code>
     * @return The doubleValue.
     */
    double getDoubleValue();

    /**
     * <code>float float_value = 6;</code>
     * @return The floatValue.
     */
    float getFloatValue();

    /**
     * <code>bool bool_value = 7;</code>
     * @return The boolValue.
     */
    boolean getBoolValue();

    /**
     * <code>bytes bytes_value = 8;</code>
     * @return The bytesValue.
     */
    com.google.protobuf.ByteString getBytesValue();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
     * @return The enum numeric value on the wire for rnestedEnum.
     */
    int getRnestedEnumValue();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
     * @return The rnestedEnum.
     */
    org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum getRnestedEnum();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BasicMessage}
   */
  public static final class BasicMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.BasicMessage)
      BasicMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicMessage.newBuilder() to construct.
    private BasicMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicMessage() {
      stringValue_ = "";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      rnestedEnum_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasicMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.class, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = 0L;
    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stringValue_ = "";
    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    @java.lang.Override
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      }
    }
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INT32_VALUE_FIELD_NUMBER = 3;
    private int int32Value_ = 0;
    /**
     * <code>int32 int32_value = 3;</code>
     * @return The int32Value.
     */
    @java.lang.Override
    public int getInt32Value() {
      return int32Value_;
    }

    public static final int INT64_VALUE_FIELD_NUMBER = 4;
    private long int64Value_ = 0L;
    /**
     * <code>int64 int64_value = 4;</code>
     * @return The int64Value.
     */
    @java.lang.Override
    public long getInt64Value() {
      return int64Value_;
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 5;
    private double doubleValue_ = 0D;
    /**
     * <code>double double_value = 5;</code>
     * @return The doubleValue.
     */
    @java.lang.Override
    public double getDoubleValue() {
      return doubleValue_;
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 6;
    private float floatValue_ = 0F;
    /**
     * <code>float float_value = 6;</code>
     * @return The floatValue.
     */
    @java.lang.Override
    public float getFloatValue() {
      return floatValue_;
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 7;
    private boolean boolValue_ = false;
    /**
     * <code>bool bool_value = 7;</code>
     * @return The boolValue.
     */
    @java.lang.Override
    public boolean getBoolValue() {
      return boolValue_;
    }

    public static final int BYTES_VALUE_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes bytes_value = 8;</code>
     * @return The bytesValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }

    public static final int RNESTED_ENUM_FIELD_NUMBER = 9;
    private int rnestedEnum_ = 0;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
     * @return The enum numeric value on the wire for rnestedEnum.
     */
    @java.lang.Override public int getRnestedEnumValue() {
      return rnestedEnum_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
     * @return The rnestedEnum.
     */
    @java.lang.Override public org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum getRnestedEnum() {
      org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum result = org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.forNumber(rnestedEnum_);
      return result == null ? org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stringValue_);
      }
      if (int32Value_ != 0) {
        output.writeInt32(3, int32Value_);
      }
      if (int64Value_ != 0L) {
        output.writeInt64(4, int64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        output.writeDouble(5, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        output.writeFloat(6, floatValue_);
      }
      if (boolValue_ != false) {
        output.writeBool(7, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        output.writeBytes(8, bytesValue_);
      }
      if (rnestedEnum_ != org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.NESTED_NOTHING.getNumber()) {
        output.writeEnum(9, rnestedEnum_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stringValue_);
      }
      if (int32Value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Value_);
      }
      if (int64Value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Value_);
      }
      if (java.lang.Double.doubleToRawLongBits(doubleValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, doubleValue_);
      }
      if (java.lang.Float.floatToRawIntBits(floatValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, floatValue_);
      }
      if (boolValue_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, boolValue_);
      }
      if (!bytesValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, bytesValue_);
      }
      if (rnestedEnum_ != org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.NESTED_NOTHING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, rnestedEnum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage other = (org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage) obj;

      if (getId()
          != other.getId()) return false;
      if (!getStringValue()
          .equals(other.getStringValue())) return false;
      if (getInt32Value()
          != other.getInt32Value()) return false;
      if (getInt64Value()
          != other.getInt64Value()) return false;
      if (java.lang.Double.doubleToLongBits(getDoubleValue())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleValue())) return false;
      if (java.lang.Float.floatToIntBits(getFloatValue())
          != java.lang.Float.floatToIntBits(
              other.getFloatValue())) return false;
      if (getBoolValue()
          != other.getBoolValue()) return false;
      if (!getBytesValue()
          .equals(other.getBytesValue())) return false;
      if (rnestedEnum_ != other.rnestedEnum_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStringValue().hashCode();
      hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Value();
      hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64Value());
      hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleValue()));
      hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatValue());
      hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolValue());
      hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getBytesValue().hashCode();
      hash = (37 * hash) + RNESTED_ENUM_FIELD_NUMBER;
      hash = (53 * hash) + rnestedEnum_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BasicMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.BasicMessage)
        org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.class, org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        stringValue_ = "";
        int32Value_ = 0;
        int64Value_ = 0L;
        doubleValue_ = 0D;
        floatValue_ = 0F;
        boolValue_ = false;
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        rnestedEnum_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage build() {
        org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage buildPartial() {
        org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage result = new org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stringValue_ = stringValue_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.int32Value_ = int32Value_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.int64Value_ = int64Value_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.doubleValue_ = doubleValue_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.floatValue_ = floatValue_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.boolValue_ = boolValue_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.bytesValue_ = bytesValue_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.rnestedEnum_ = rnestedEnum_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage other) {
        if (other == getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getStringValue().isEmpty()) {
          stringValue_ = other.stringValue_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getInt32Value() != 0) {
          setInt32Value(other.getInt32Value());
        }
        if (other.getInt64Value() != 0L) {
          setInt64Value(other.getInt64Value());
        }
        if (other.getDoubleValue() != 0D) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.getFloatValue() != 0F) {
          setFloatValue(other.getFloatValue());
        }
        if (other.getBoolValue() != false) {
          setBoolValue(other.getBoolValue());
        }
        if (other.getBytesValue() != com.google.protobuf.ByteString.EMPTY) {
          setBytesValue(other.getBytesValue());
        }
        if (other.rnestedEnum_ != 0) {
          setRnestedEnumValue(other.getRnestedEnumValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                stringValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                int32Value_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int64Value_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                doubleValue_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 53: {
                floatValue_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 56: {
                boolValue_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                bytesValue_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                rnestedEnum_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>string string_value = 2;</code>
       * @return The stringValue.
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @return The bytes for stringValue.
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        stringValue_ = getDefaultInstance().getStringValue();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stringValue_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int int32Value_ ;
      /**
       * <code>int32 int32_value = 3;</code>
       * @return The int32Value.
       */
      @java.lang.Override
      public int getInt32Value() {
        return int32Value_;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @param value The int32Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt32Value(int value) {

        int32Value_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32Value() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Value_ = 0;
        onChanged();
        return this;
      }

      private long int64Value_ ;
      /**
       * <code>int64 int64_value = 4;</code>
       * @return The int64Value.
       */
      @java.lang.Override
      public long getInt64Value() {
        return int64Value_;
      }
      /**
       * <code>int64 int64_value = 4;</code>
       * @param value The int64Value to set.
       * @return This builder for chaining.
       */
      public Builder setInt64Value(long value) {

        int64Value_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Value_ = 0L;
        onChanged();
        return this;
      }

      private double doubleValue_ ;
      /**
       * <code>double double_value = 5;</code>
       * @return The doubleValue.
       */
      @java.lang.Override
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>double double_value = 5;</code>
       * @param value The doubleValue to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleValue(double value) {

        doubleValue_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double double_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      private float floatValue_ ;
      /**
       * <code>float float_value = 6;</code>
       * @return The floatValue.
       */
      @java.lang.Override
      public float getFloatValue() {
        return floatValue_;
      }
      /**
       * <code>float float_value = 6;</code>
       * @param value The floatValue to set.
       * @return This builder for chaining.
       */
      public Builder setFloatValue(float value) {

        floatValue_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float float_value = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        floatValue_ = 0F;
        onChanged();
        return this;
      }

      private boolean boolValue_ ;
      /**
       * <code>bool bool_value = 7;</code>
       * @return The boolValue.
       */
      @java.lang.Override
      public boolean getBoolValue() {
        return boolValue_;
      }
      /**
       * <code>bool bool_value = 7;</code>
       * @param value The boolValue to set.
       * @return This builder for chaining.
       */
      public Builder setBoolValue(boolean value) {

        boolValue_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        boolValue_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_value = 8;</code>
       * @return The bytesValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      /**
       * <code>bytes bytes_value = 8;</code>
       * @param value The bytesValue to set.
       * @return This builder for chaining.
       */
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        bytesValue_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_value = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bytesValue_ = getDefaultInstance().getBytesValue();
        onChanged();
        return this;
      }

      private int rnestedEnum_ = 0;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
       * @return The enum numeric value on the wire for rnestedEnum.
       */
      @java.lang.Override public int getRnestedEnumValue() {
        return rnestedEnum_;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
       * @param value The enum numeric value on the wire for rnestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRnestedEnumValue(int value) {
        rnestedEnum_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
       * @return The rnestedEnum.
       */
      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum getRnestedEnum() {
        org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum result = org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.forNumber(rnestedEnum_);
        return result == null ? org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
       * @param value The rnestedEnum to set.
       * @return This builder for chaining.
       */
      public Builder setRnestedEnum(org.apache.spark.sql.protobuf.protos.NestedEnumProto.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        rnestedEnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.NestedEnum rnested_enum = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRnestedEnum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rnestedEnum_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.BasicMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.BasicMessage)
    private static final org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage();
    }

    public static org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicMessage>
        PARSER = new com.google.protobuf.AbstractParser<BasicMessage>() {
      @java.lang.Override
      public BasicMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BasicMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.BasicMessageProto.BasicMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022basicmessage.proto\022$org.apache.spark.s" +
      "ql.protobuf.protos\032\020nestedenum.proto\"\366\001\n" +
      "\014BasicMessage\022\n\n\002id\030\001 \001(\003\022\024\n\014string_valu" +
      "e\030\002 \001(\t\022\023\n\013int32_value\030\003 \001(\005\022\023\n\013int64_va" +
      "lue\030\004 \001(\003\022\024\n\014double_value\030\005 \001(\001\022\023\n\013float" +
      "_value\030\006 \001(\002\022\022\n\nbool_value\030\007 \001(\010\022\023\n\013byte" +
      "s_value\030\010 \001(\014\022F\n\014rnested_enum\030\t \001(\01620.or" +
      "g.apache.spark.sql.protobuf.protos.Neste" +
      "dEnumB\023B\021BasicMessageProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.spark.sql.protobuf.protos.NestedEnumProto.getDescriptor(),
        });
    internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_BasicMessage_descriptor,
        new java.lang.String[] { "Id", "StringValue", "Int32Value", "Int64Value", "DoubleValue", "FloatValue", "BoolValue", "BytesValue", "RnestedEnum", });
    org.apache.spark.sql.protobuf.protos.NestedEnumProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
