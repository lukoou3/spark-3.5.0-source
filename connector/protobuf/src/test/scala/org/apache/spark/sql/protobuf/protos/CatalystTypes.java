// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: catalyst_types.proto

package org.apache.spark.sql.protobuf.protos;

public final class CatalystTypes {
  private CatalystTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BooleanMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.BooleanMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool bool_type = 1;</code>
     * @return The boolType.
     */
    boolean getBoolType();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BooleanMsg}
   */
  public static final class BooleanMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.BooleanMsg)
      BooleanMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BooleanMsg.newBuilder() to construct.
    private BooleanMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BooleanMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BooleanMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.Builder.class);
    }

    public static final int BOOL_TYPE_FIELD_NUMBER = 1;
    private boolean boolType_ = false;
    /**
     * <code>bool bool_type = 1;</code>
     * @return The boolType.
     */
    @java.lang.Override
    public boolean getBoolType() {
      return boolType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (boolType_ != false) {
        output.writeBool(1, boolType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (boolType_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, boolType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg) obj;

      if (getBoolType()
          != other.getBoolType()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BOOL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolType());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BooleanMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.BooleanMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        boolType_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.boolType_ = boolType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg.getDefaultInstance()) return this;
        if (other.getBoolType() != false) {
          setBoolType(other.getBoolType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                boolType_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean boolType_ ;
      /**
       * <code>bool bool_type = 1;</code>
       * @return The boolType.
       */
      @java.lang.Override
      public boolean getBoolType() {
        return boolType_;
      }
      /**
       * <code>bool bool_type = 1;</code>
       * @param value The boolType to set.
       * @return This builder for chaining.
       */
      public Builder setBoolType(boolean value) {

        boolType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        boolType_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.BooleanMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.BooleanMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BooleanMsg>
        PARSER = new com.google.protobuf.AbstractParser<BooleanMsg>() {
      @java.lang.Override
      public BooleanMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BooleanMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BooleanMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.BooleanMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntegerMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.IntegerMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 int32_type = 1;</code>
     * @return The int32Type.
     */
    int getInt32Type();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IntegerMsg}
   */
  public static final class IntegerMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.IntegerMsg)
      IntegerMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IntegerMsg.newBuilder() to construct.
    private IntegerMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IntegerMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IntegerMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.Builder.class);
    }

    public static final int INT32_TYPE_FIELD_NUMBER = 1;
    private int int32Type_ = 0;
    /**
     * <code>int32 int32_type = 1;</code>
     * @return The int32Type.
     */
    @java.lang.Override
    public int getInt32Type() {
      return int32Type_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (int32Type_ != 0) {
        output.writeInt32(1, int32Type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (int32Type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, int32Type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg) obj;

      if (getInt32Type()
          != other.getInt32Type()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INT32_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Type();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.IntegerMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.IntegerMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        int32Type_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.int32Type_ = int32Type_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg.getDefaultInstance()) return this;
        if (other.getInt32Type() != 0) {
          setInt32Type(other.getInt32Type());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int32Type_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int int32Type_ ;
      /**
       * <code>int32 int32_type = 1;</code>
       * @return The int32Type.
       */
      @java.lang.Override
      public int getInt32Type() {
        return int32Type_;
      }
      /**
       * <code>int32 int32_type = 1;</code>
       * @param value The int32Type to set.
       * @return This builder for chaining.
       */
      public Builder setInt32Type(int value) {

        int32Type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32Type() {
        bitField0_ = (bitField0_ & ~0x00000001);
        int32Type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.IntegerMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.IntegerMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntegerMsg>
        PARSER = new com.google.protobuf.AbstractParser<IntegerMsg>() {
      @java.lang.Override
      public IntegerMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IntegerMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IntegerMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.IntegerMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DoubleMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.DoubleMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double double_type = 1;</code>
     * @return The doubleType.
     */
    double getDoubleType();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.DoubleMsg}
   */
  public static final class DoubleMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.DoubleMsg)
      DoubleMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DoubleMsg.newBuilder() to construct.
    private DoubleMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DoubleMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DoubleMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.Builder.class);
    }

    public static final int DOUBLE_TYPE_FIELD_NUMBER = 1;
    private double doubleType_ = 0D;
    /**
     * <code>double double_type = 1;</code>
     * @return The doubleType.
     */
    @java.lang.Override
    public double getDoubleType() {
      return doubleType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(doubleType_) != 0) {
        output.writeDouble(1, doubleType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(doubleType_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg) obj;

      if (java.lang.Double.doubleToLongBits(getDoubleType())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleType())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOUBLE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleType()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.DoubleMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.DoubleMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        doubleType_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.doubleType_ = doubleType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg.getDefaultInstance()) return this;
        if (other.getDoubleType() != 0D) {
          setDoubleType(other.getDoubleType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                doubleType_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double doubleType_ ;
      /**
       * <code>double double_type = 1;</code>
       * @return The doubleType.
       */
      @java.lang.Override
      public double getDoubleType() {
        return doubleType_;
      }
      /**
       * <code>double double_type = 1;</code>
       * @param value The doubleType to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleType(double value) {

        doubleType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double double_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doubleType_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.DoubleMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.DoubleMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DoubleMsg>
        PARSER = new com.google.protobuf.AbstractParser<DoubleMsg>() {
      @java.lang.Override
      public DoubleMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DoubleMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DoubleMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.DoubleMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FloatMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.FloatMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float float_type = 1;</code>
     * @return The floatType.
     */
    float getFloatType();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.FloatMsg}
   */
  public static final class FloatMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.FloatMsg)
      FloatMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FloatMsg.newBuilder() to construct.
    private FloatMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FloatMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FloatMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.Builder.class);
    }

    public static final int FLOAT_TYPE_FIELD_NUMBER = 1;
    private float floatType_ = 0F;
    /**
     * <code>float float_type = 1;</code>
     * @return The floatType.
     */
    @java.lang.Override
    public float getFloatType() {
      return floatType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(floatType_) != 0) {
        output.writeFloat(1, floatType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(floatType_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, floatType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg) obj;

      if (java.lang.Float.floatToIntBits(getFloatType())
          != java.lang.Float.floatToIntBits(
              other.getFloatType())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FLOAT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatType());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.FloatMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.FloatMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        floatType_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.floatType_ = floatType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg.getDefaultInstance()) return this;
        if (other.getFloatType() != 0F) {
          setFloatType(other.getFloatType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                floatType_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float floatType_ ;
      /**
       * <code>float float_type = 1;</code>
       * @return The floatType.
       */
      @java.lang.Override
      public float getFloatType() {
        return floatType_;
      }
      /**
       * <code>float float_type = 1;</code>
       * @param value The floatType to set.
       * @return This builder for chaining.
       */
      public Builder setFloatType(float value) {

        floatType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float float_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        floatType_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.FloatMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.FloatMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FloatMsg>
        PARSER = new com.google.protobuf.AbstractParser<FloatMsg>() {
      @java.lang.Override
      public FloatMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FloatMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FloatMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.FloatMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BytesMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.BytesMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes bytes_type = 1;</code>
     * @return The bytesType.
     */
    com.google.protobuf.ByteString getBytesType();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BytesMsg}
   */
  public static final class BytesMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.BytesMsg)
      BytesMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BytesMsg.newBuilder() to construct.
    private BytesMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BytesMsg() {
      bytesType_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BytesMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.Builder.class);
    }

    public static final int BYTES_TYPE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString bytesType_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes bytes_type = 1;</code>
     * @return The bytesType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesType() {
      return bytesType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!bytesType_.isEmpty()) {
        output.writeBytes(1, bytesType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!bytesType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, bytesType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg) obj;

      if (!getBytesType()
          .equals(other.getBytesType())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BYTES_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getBytesType().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.BytesMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.BytesMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bytesType_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.bytesType_ = bytesType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg.getDefaultInstance()) return this;
        if (other.getBytesType() != com.google.protobuf.ByteString.EMPTY) {
          setBytesType(other.getBytesType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                bytesType_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString bytesType_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_type = 1;</code>
       * @return The bytesType.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesType() {
        return bytesType_;
      }
      /**
       * <code>bytes bytes_type = 1;</code>
       * @param value The bytesType to set.
       * @return This builder for chaining.
       */
      public Builder setBytesType(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        bytesType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bytesType_ = getDefaultInstance().getBytesType();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.BytesMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.BytesMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BytesMsg>
        PARSER = new com.google.protobuf.AbstractParser<BytesMsg>() {
      @java.lang.Override
      public BytesMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BytesMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BytesMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.BytesMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.StringMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string string_type = 1;</code>
     * @return The stringType.
     */
    java.lang.String getStringType();
    /**
     * <code>string string_type = 1;</code>
     * @return The bytes for stringType.
     */
    com.google.protobuf.ByteString
        getStringTypeBytes();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.StringMsg}
   */
  public static final class StringMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.StringMsg)
      StringMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StringMsg.newBuilder() to construct.
    private StringMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StringMsg() {
      stringType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StringMsg();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.Builder.class);
    }

    public static final int STRING_TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stringType_ = "";
    /**
     * <code>string string_type = 1;</code>
     * @return The stringType.
     */
    @java.lang.Override
    public java.lang.String getStringType() {
      java.lang.Object ref = stringType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringType_ = s;
        return s;
      }
    }
    /**
     * <code>string string_type = 1;</code>
     * @return The bytes for stringType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringTypeBytes() {
      java.lang.Object ref = stringType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stringType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stringType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg) obj;

      if (!getStringType()
          .equals(other.getStringType())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STRING_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getStringType().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.StringMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.StringMsg)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        stringType_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.stringType_ = stringType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg.getDefaultInstance()) return this;
        if (!other.getStringType().isEmpty()) {
          stringType_ = other.stringType_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                stringType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object stringType_ = "";
      /**
       * <code>string string_type = 1;</code>
       * @return The stringType.
       */
      public java.lang.String getStringType() {
        java.lang.Object ref = stringType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_type = 1;</code>
       * @return The bytes for stringType.
       */
      public com.google.protobuf.ByteString
          getStringTypeBytes() {
        java.lang.Object ref = stringType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_type = 1;</code>
       * @param value The stringType to set.
       * @return This builder for chaining.
       */
      public Builder setStringType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stringType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string string_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringType() {
        stringType_ = getDefaultInstance().getStringType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string string_type = 1;</code>
       * @param value The bytes for stringType to set.
       * @return This builder for chaining.
       */
      public Builder setStringTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stringType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.StringMsg)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.StringMsg)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringMsg>
        PARSER = new com.google.protobuf.AbstractParser<StringMsg>() {
      @java.lang.Override
      public StringMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StringMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StringMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.StringMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PersonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Person)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 age = 2;</code>
     * @return The age.
     */
    int getAge();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Person}
   */
  public static final class Person extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Person)
      PersonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Person.newBuilder() to construct.
    private Person(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Person() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Person();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Person_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AGE_FIELD_NUMBER = 2;
    private int age_ = 0;
    /**
     * <code>int32 age = 2;</code>
     * @return The age.
     */
    @java.lang.Override
    public int getAge() {
      return age_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (age_ != 0) {
        output.writeInt32(2, age_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (age_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, age_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Person)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.Person other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.Person) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getAge()
          != other.getAge()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + AGE_FIELD_NUMBER;
      hash = (53 * hash) + getAge();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.Person prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Person}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Person)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.PersonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Person_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        age_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Person getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Person build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Person result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Person buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Person result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Person(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.Person result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.age_ = age_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Person) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.Person)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.Person other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.Person.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getAge() != 0) {
          setAge(other.getAge());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                age_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int age_ ;
      /**
       * <code>int32 age = 2;</code>
       * @return The age.
       */
      @java.lang.Override
      public int getAge() {
        return age_;
      }
      /**
       * <code>int32 age = 2;</code>
       * @param value The age to set.
       * @return This builder for chaining.
       */
      public Builder setAge(int value) {

        age_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 age = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAge() {
        bitField0_ = (bitField0_ & ~0x00000002);
        age_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Person)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Person)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.Person DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Person();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Person getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Person>
        PARSER = new com.google.protobuf.AbstractParser<Person>() {
      @java.lang.Override
      public Person parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Person> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Person> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.Person getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Bad)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes col_0 = 1;</code>
     * @return The col0.
     */
    com.google.protobuf.ByteString getCol0();

    /**
     * <code>double col_1 = 2;</code>
     * @return The col1.
     */
    double getCol1();

    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    java.lang.String getCol2();
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    com.google.protobuf.ByteString
        getCol2Bytes();

    /**
     * <code>float col_3 = 4;</code>
     * @return The col3.
     */
    float getCol3();

    /**
     * <code>int64 col_4 = 5;</code>
     * @return The col4.
     */
    long getCol4();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Bad}
   */
  public static final class Bad extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Bad)
      BadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Bad.newBuilder() to construct.
    private Bad(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Bad() {
      col0_ = com.google.protobuf.ByteString.EMPTY;
      col2_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Bad();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Bad_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.Builder.class);
    }

    public static final int COL_0_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString col0_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes col_0 = 1;</code>
     * @return The col0.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCol0() {
      return col0_;
    }

    public static final int COL_1_FIELD_NUMBER = 2;
    private double col1_ = 0D;
    /**
     * <code>double col_1 = 2;</code>
     * @return The col1.
     */
    @java.lang.Override
    public double getCol1() {
      return col1_;
    }

    public static final int COL_2_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object col2_ = "";
    /**
     * <code>string col_2 = 3;</code>
     * @return The col2.
     */
    @java.lang.Override
    public java.lang.String getCol2() {
      java.lang.Object ref = col2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        col2_ = s;
        return s;
      }
    }
    /**
     * <code>string col_2 = 3;</code>
     * @return The bytes for col2.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCol2Bytes() {
      java.lang.Object ref = col2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        col2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_3_FIELD_NUMBER = 4;
    private float col3_ = 0F;
    /**
     * <code>float col_3 = 4;</code>
     * @return The col3.
     */
    @java.lang.Override
    public float getCol3() {
      return col3_;
    }

    public static final int COL_4_FIELD_NUMBER = 5;
    private long col4_ = 0L;
    /**
     * <code>int64 col_4 = 5;</code>
     * @return The col4.
     */
    @java.lang.Override
    public long getCol4() {
      return col4_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!col0_.isEmpty()) {
        output.writeBytes(1, col0_);
      }
      if (java.lang.Double.doubleToRawLongBits(col1_) != 0) {
        output.writeDouble(2, col1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col2_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, col2_);
      }
      if (java.lang.Float.floatToRawIntBits(col3_) != 0) {
        output.writeFloat(4, col3_);
      }
      if (col4_ != 0L) {
        output.writeInt64(5, col4_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!col0_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, col0_);
      }
      if (java.lang.Double.doubleToRawLongBits(col1_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, col1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col2_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, col2_);
      }
      if (java.lang.Float.floatToRawIntBits(col3_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, col3_);
      }
      if (col4_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, col4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad) obj;

      if (!getCol0()
          .equals(other.getCol0())) return false;
      if (java.lang.Double.doubleToLongBits(getCol1())
          != java.lang.Double.doubleToLongBits(
              other.getCol1())) return false;
      if (!getCol2()
          .equals(other.getCol2())) return false;
      if (java.lang.Float.floatToIntBits(getCol3())
          != java.lang.Float.floatToIntBits(
              other.getCol3())) return false;
      if (getCol4()
          != other.getCol4()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COL_0_FIELD_NUMBER;
      hash = (53 * hash) + getCol0().hashCode();
      hash = (37 * hash) + COL_1_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCol1()));
      hash = (37 * hash) + COL_2_FIELD_NUMBER;
      hash = (53 * hash) + getCol2().hashCode();
      hash = (37 * hash) + COL_3_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCol3());
      hash = (37 * hash) + COL_4_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCol4());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Bad}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Bad)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.BadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Bad_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        col0_ = com.google.protobuf.ByteString.EMPTY;
        col1_ = 0D;
        col2_ = "";
        col3_ = 0F;
        col4_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.col0_ = col0_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.col1_ = col1_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.col2_ = col2_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.col3_ = col3_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.col4_ = col4_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad.getDefaultInstance()) return this;
        if (other.getCol0() != com.google.protobuf.ByteString.EMPTY) {
          setCol0(other.getCol0());
        }
        if (other.getCol1() != 0D) {
          setCol1(other.getCol1());
        }
        if (!other.getCol2().isEmpty()) {
          col2_ = other.col2_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getCol3() != 0F) {
          setCol3(other.getCol3());
        }
        if (other.getCol4() != 0L) {
          setCol4(other.getCol4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                col0_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 17: {
                col1_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 26: {
                col2_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 37: {
                col3_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 40: {
                col4_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString col0_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes col_0 = 1;</code>
       * @return The col0.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCol0() {
        return col0_;
      }
      /**
       * <code>bytes col_0 = 1;</code>
       * @param value The col0 to set.
       * @return This builder for chaining.
       */
      public Builder setCol0(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        col0_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bytes col_0 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol0() {
        bitField0_ = (bitField0_ & ~0x00000001);
        col0_ = getDefaultInstance().getCol0();
        onChanged();
        return this;
      }

      private double col1_ ;
      /**
       * <code>double col_1 = 2;</code>
       * @return The col1.
       */
      @java.lang.Override
      public double getCol1() {
        return col1_;
      }
      /**
       * <code>double col_1 = 2;</code>
       * @param value The col1 to set.
       * @return This builder for chaining.
       */
      public Builder setCol1(double value) {

        col1_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double col_1 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        col1_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object col2_ = "";
      /**
       * <code>string col_2 = 3;</code>
       * @return The col2.
       */
      public java.lang.String getCol2() {
        java.lang.Object ref = col2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          col2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return The bytes for col2.
       */
      public com.google.protobuf.ByteString
          getCol2Bytes() {
        java.lang.Object ref = col2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          col2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        col2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol2() {
        col2_ = getDefaultInstance().getCol2();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string col_2 = 3;</code>
       * @param value The bytes for col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        col2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private float col3_ ;
      /**
       * <code>float col_3 = 4;</code>
       * @return The col3.
       */
      @java.lang.Override
      public float getCol3() {
        return col3_;
      }
      /**
       * <code>float col_3 = 4;</code>
       * @param value The col3 to set.
       * @return This builder for chaining.
       */
      public Builder setCol3(float value) {

        col3_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float col_3 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        col3_ = 0F;
        onChanged();
        return this;
      }

      private long col4_ ;
      /**
       * <code>int64 col_4 = 5;</code>
       * @return The col4.
       */
      @java.lang.Override
      public long getCol4() {
        return col4_;
      }
      /**
       * <code>int64 col_4 = 5;</code>
       * @param value The col4 to set.
       * @return This builder for chaining.
       */
      public Builder setCol4(long value) {

        col4_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int64 col_4 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        col4_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Bad)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Bad)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Bad>
        PARSER = new com.google.protobuf.AbstractParser<Bad>() {
      @java.lang.Override
      public Bad parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Bad> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Bad> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.Bad getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActualOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.Actual)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string col_0 = 1;</code>
     * @return The col0.
     */
    java.lang.String getCol0();
    /**
     * <code>string col_0 = 1;</code>
     * @return The bytes for col0.
     */
    com.google.protobuf.ByteString
        getCol0Bytes();

    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    int getCol1();

    /**
     * <code>float col_2 = 3;</code>
     * @return The col2.
     */
    float getCol2();

    /**
     * <code>bool col_3 = 4;</code>
     * @return The col3.
     */
    boolean getCol3();

    /**
     * <code>double col_4 = 5;</code>
     * @return The col4.
     */
    double getCol4();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Actual}
   */
  public static final class Actual extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.Actual)
      ActualOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Actual.newBuilder() to construct.
    private Actual(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Actual() {
      col0_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Actual();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Actual_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder.class);
    }

    public static final int COL_0_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object col0_ = "";
    /**
     * <code>string col_0 = 1;</code>
     * @return The col0.
     */
    @java.lang.Override
    public java.lang.String getCol0() {
      java.lang.Object ref = col0_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        col0_ = s;
        return s;
      }
    }
    /**
     * <code>string col_0 = 1;</code>
     * @return The bytes for col0.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCol0Bytes() {
      java.lang.Object ref = col0_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        col0_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COL_1_FIELD_NUMBER = 2;
    private int col1_ = 0;
    /**
     * <code>int32 col_1 = 2;</code>
     * @return The col1.
     */
    @java.lang.Override
    public int getCol1() {
      return col1_;
    }

    public static final int COL_2_FIELD_NUMBER = 3;
    private float col2_ = 0F;
    /**
     * <code>float col_2 = 3;</code>
     * @return The col2.
     */
    @java.lang.Override
    public float getCol2() {
      return col2_;
    }

    public static final int COL_3_FIELD_NUMBER = 4;
    private boolean col3_ = false;
    /**
     * <code>bool col_3 = 4;</code>
     * @return The col3.
     */
    @java.lang.Override
    public boolean getCol3() {
      return col3_;
    }

    public static final int COL_4_FIELD_NUMBER = 5;
    private double col4_ = 0D;
    /**
     * <code>double col_4 = 5;</code>
     * @return The col4.
     */
    @java.lang.Override
    public double getCol4() {
      return col4_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col0_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, col0_);
      }
      if (col1_ != 0) {
        output.writeInt32(2, col1_);
      }
      if (java.lang.Float.floatToRawIntBits(col2_) != 0) {
        output.writeFloat(3, col2_);
      }
      if (col3_ != false) {
        output.writeBool(4, col3_);
      }
      if (java.lang.Double.doubleToRawLongBits(col4_) != 0) {
        output.writeDouble(5, col4_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(col0_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, col0_);
      }
      if (col1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, col1_);
      }
      if (java.lang.Float.floatToRawIntBits(col2_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, col2_);
      }
      if (col3_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, col3_);
      }
      if (java.lang.Double.doubleToRawLongBits(col4_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, col4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual) obj;

      if (!getCol0()
          .equals(other.getCol0())) return false;
      if (getCol1()
          != other.getCol1()) return false;
      if (java.lang.Float.floatToIntBits(getCol2())
          != java.lang.Float.floatToIntBits(
              other.getCol2())) return false;
      if (getCol3()
          != other.getCol3()) return false;
      if (java.lang.Double.doubleToLongBits(getCol4())
          != java.lang.Double.doubleToLongBits(
              other.getCol4())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COL_0_FIELD_NUMBER;
      hash = (53 * hash) + getCol0().hashCode();
      hash = (37 * hash) + COL_1_FIELD_NUMBER;
      hash = (53 * hash) + getCol1();
      hash = (37 * hash) + COL_2_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCol2());
      hash = (37 * hash) + COL_3_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCol3());
      hash = (37 * hash) + COL_4_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCol4()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.Actual}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.Actual)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Actual_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        col0_ = "";
        col1_ = 0;
        col2_ = 0F;
        col3_ = false;
        col4_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.col0_ = col0_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.col1_ = col1_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.col2_ = col2_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.col3_ = col3_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.col4_ = col4_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance()) return this;
        if (!other.getCol0().isEmpty()) {
          col0_ = other.col0_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getCol1() != 0) {
          setCol1(other.getCol1());
        }
        if (other.getCol2() != 0F) {
          setCol2(other.getCol2());
        }
        if (other.getCol3() != false) {
          setCol3(other.getCol3());
        }
        if (other.getCol4() != 0D) {
          setCol4(other.getCol4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                col0_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                col1_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 29: {
                col2_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 32: {
                col3_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                col4_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object col0_ = "";
      /**
       * <code>string col_0 = 1;</code>
       * @return The col0.
       */
      public java.lang.String getCol0() {
        java.lang.Object ref = col0_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          col0_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string col_0 = 1;</code>
       * @return The bytes for col0.
       */
      public com.google.protobuf.ByteString
          getCol0Bytes() {
        java.lang.Object ref = col0_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          col0_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string col_0 = 1;</code>
       * @param value The col0 to set.
       * @return This builder for chaining.
       */
      public Builder setCol0(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        col0_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string col_0 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol0() {
        col0_ = getDefaultInstance().getCol0();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string col_0 = 1;</code>
       * @param value The bytes for col0 to set.
       * @return This builder for chaining.
       */
      public Builder setCol0Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        col0_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int col1_ ;
      /**
       * <code>int32 col_1 = 2;</code>
       * @return The col1.
       */
      @java.lang.Override
      public int getCol1() {
        return col1_;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @param value The col1 to set.
       * @return This builder for chaining.
       */
      public Builder setCol1(int value) {

        col1_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 col_1 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        col1_ = 0;
        onChanged();
        return this;
      }

      private float col2_ ;
      /**
       * <code>float col_2 = 3;</code>
       * @return The col2.
       */
      @java.lang.Override
      public float getCol2() {
        return col2_;
      }
      /**
       * <code>float col_2 = 3;</code>
       * @param value The col2 to set.
       * @return This builder for chaining.
       */
      public Builder setCol2(float value) {

        col2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float col_2 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        col2_ = 0F;
        onChanged();
        return this;
      }

      private boolean col3_ ;
      /**
       * <code>bool col_3 = 4;</code>
       * @return The col3.
       */
      @java.lang.Override
      public boolean getCol3() {
        return col3_;
      }
      /**
       * <code>bool col_3 = 4;</code>
       * @param value The col3 to set.
       * @return This builder for chaining.
       */
      public Builder setCol3(boolean value) {

        col3_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool col_3 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        col3_ = false;
        onChanged();
        return this;
      }

      private double col4_ ;
      /**
       * <code>double col_4 = 5;</code>
       * @return The col4.
       */
      @java.lang.Override
      public double getCol4() {
        return col4_;
      }
      /**
       * <code>double col_4 = 5;</code>
       * @param value The col4 to set.
       * @return This builder for chaining.
       */
      public Builder setCol4(double value) {

        col4_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double col_4 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCol4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        col4_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.Actual)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.Actual)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Actual>
        PARSER = new com.google.protobuf.AbstractParser<Actual>() {
      @java.lang.Override
      public Actual parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Actual> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Actual> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface oldConsumerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.oldConsumer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.oldConsumer}
   */
  public static final class oldConsumer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.oldConsumer)
      oldConsumerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use oldConsumer.newBuilder() to construct.
    private oldConsumer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private oldConsumer() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new oldConsumer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.oldConsumer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.oldConsumer)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.oldConsumer)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.oldConsumer)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<oldConsumer>
        PARSER = new com.google.protobuf.AbstractParser<oldConsumer>() {
      @java.lang.Override
      public oldConsumer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<oldConsumer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<oldConsumer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldConsumer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface newProducerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.newProducer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>int32 value = 2;</code>
     * @return The value.
     */
    int getValue();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.newProducer}
   */
  public static final class newProducer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.newProducer)
      newProducerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use newProducer.newBuilder() to construct.
    private newProducer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private newProducer() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new newProducer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newProducer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_ = 0;
    /**
     * <code>int32 value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (value_ != 0) {
        output.writeInt32(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (getValue()
          != other.getValue()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.newProducer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.newProducer)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newProducer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                value_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {

        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.newProducer)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.newProducer)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<newProducer>
        PARSER = new com.google.protobuf.AbstractParser<newProducer>() {
      @java.lang.Override
      public newProducer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<newProducer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<newProducer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.newProducer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface newConsumerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.newConsumer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>int32 value = 2;</code>
     * @return The value.
     */
    int getValue();

    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     * @return Whether the actual field is set.
     */
    boolean hasActual();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     * @return The actual.
     */
    org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getActual();
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     */
    org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder getActualOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.newConsumer}
   */
  public static final class newConsumer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.newConsumer)
      newConsumerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use newConsumer.newBuilder() to construct.
    private newConsumer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private newConsumer() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new newConsumer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_ = 0;
    /**
     * <code>int32 value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    public static final int ACTUAL_FIELD_NUMBER = 3;
    private org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual actual_;
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     * @return Whether the actual field is set.
     */
    @java.lang.Override
    public boolean hasActual() {
      return actual_ != null;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     * @return The actual.
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getActual() {
      return actual_ == null ? org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance() : actual_;
    }
    /**
     * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
     */
    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder getActualOrBuilder() {
      return actual_ == null ? org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance() : actual_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (value_ != 0) {
        output.writeInt32(2, value_);
      }
      if (actual_ != null) {
        output.writeMessage(3, getActual());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      if (actual_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getActual());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (getValue()
          != other.getValue()) return false;
      if (hasActual() != other.hasActual()) return false;
      if (hasActual()) {
        if (!getActual()
            .equals(other.getActual())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      if (hasActual()) {
        hash = (37 * hash) + ACTUAL_FIELD_NUMBER;
        hash = (53 * hash) + getActual().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.newConsumer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.newConsumer)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        value_ = 0;
        actual_ = null;
        if (actualBuilder_ != null) {
          actualBuilder_.dispose();
          actualBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.value_ = value_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.actual_ = actualBuilder_ == null
              ? actual_
              : actualBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        if (other.hasActual()) {
          mergeActual(other.getActual());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                value_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getActualFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {

        value_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      private org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual actual_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual, org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder, org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder> actualBuilder_;
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       * @return Whether the actual field is set.
       */
      public boolean hasActual() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       * @return The actual.
       */
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual getActual() {
        if (actualBuilder_ == null) {
          return actual_ == null ? org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance() : actual_;
        } else {
          return actualBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public Builder setActual(org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual value) {
        if (actualBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actual_ = value;
        } else {
          actualBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public Builder setActual(
          org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder builderForValue) {
        if (actualBuilder_ == null) {
          actual_ = builderForValue.build();
        } else {
          actualBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public Builder mergeActual(org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual value) {
        if (actualBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            actual_ != null &&
            actual_ != org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance()) {
            getActualBuilder().mergeFrom(value);
          } else {
            actual_ = value;
          }
        } else {
          actualBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public Builder clearActual() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actual_ = null;
        if (actualBuilder_ != null) {
          actualBuilder_.dispose();
          actualBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder getActualBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getActualFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder getActualOrBuilder() {
        if (actualBuilder_ != null) {
          return actualBuilder_.getMessageOrBuilder();
        } else {
          return actual_ == null ?
              org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.getDefaultInstance() : actual_;
        }
      }
      /**
       * <code>.org.apache.spark.sql.protobuf.protos.Actual actual = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual, org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder, org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder> 
          getActualFieldBuilder() {
        if (actualBuilder_ == null) {
          actualBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual, org.apache.spark.sql.protobuf.protos.CatalystTypes.Actual.Builder, org.apache.spark.sql.protobuf.protos.CatalystTypes.ActualOrBuilder>(
                  getActual(),
                  getParentForChildren(),
                  isClean());
          actual_ = null;
        }
        return actualBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.newConsumer)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.newConsumer)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<newConsumer>
        PARSER = new com.google.protobuf.AbstractParser<newConsumer>() {
      @java.lang.Override
      public newConsumer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<newConsumer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<newConsumer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.newConsumer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface oldProducerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.spark.sql.protobuf.protos.oldProducer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code org.apache.spark.sql.protobuf.protos.oldProducer}
   */
  public static final class oldProducer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.spark.sql.protobuf.protos.oldProducer)
      oldProducerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use oldProducer.newBuilder() to construct.
    private oldProducer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private oldProducer() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new oldProducer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer)) {
        return super.equals(obj);
      }
      org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer other = (org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.spark.sql.protobuf.protos.oldProducer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.spark.sql.protobuf.protos.oldProducer)
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.class, org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.Builder.class);
      }

      // Construct using org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        key_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer getDefaultInstanceForType() {
        return org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer build() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer buildPartial() {
        org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer result = new org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.key_ = key_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer) {
          return mergeFrom((org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer other) {
        if (other == org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.spark.sql.protobuf.protos.oldProducer)
    }

    // @@protoc_insertion_point(class_scope:org.apache.spark.sql.protobuf.protos.oldProducer)
    private static final org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer();
    }

    public static org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<oldProducer>
        PARSER = new com.google.protobuf.AbstractParser<oldProducer>() {
      @java.lang.Override
      public oldProducer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<oldProducer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<oldProducer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.spark.sql.protobuf.protos.CatalystTypes.oldProducer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Person_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Bad_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_Actual_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_newProducer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024catalyst_types.proto\022$org.apache.spark" +
      ".sql.protobuf.protos\"\037\n\nBooleanMsg\022\021\n\tbo" +
      "ol_type\030\001 \001(\010\" \n\nIntegerMsg\022\022\n\nint32_typ" +
      "e\030\001 \001(\005\" \n\tDoubleMsg\022\023\n\013double_type\030\001 \001(" +
      "\001\"\036\n\010FloatMsg\022\022\n\nfloat_type\030\001 \001(\002\"\036\n\010Byt" +
      "esMsg\022\022\n\nbytes_type\030\001 \001(\014\" \n\tStringMsg\022\023" +
      "\n\013string_type\030\001 \001(\t\"#\n\006Person\022\014\n\004name\030\001 " +
      "\001(\t\022\013\n\003age\030\002 \001(\005\"P\n\003Bad\022\r\n\005col_0\030\001 \001(\014\022\r" +
      "\n\005col_1\030\002 \001(\001\022\r\n\005col_2\030\003 \001(\t\022\r\n\005col_3\030\004 " +
      "\001(\002\022\r\n\005col_4\030\005 \001(\003\"S\n\006Actual\022\r\n\005col_0\030\001 " +
      "\001(\t\022\r\n\005col_1\030\002 \001(\005\022\r\n\005col_2\030\003 \001(\002\022\r\n\005col" +
      "_3\030\004 \001(\010\022\r\n\005col_4\030\005 \001(\001\"\032\n\013oldConsumer\022\013" +
      "\n\003key\030\001 \001(\t\")\n\013newProducer\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\005\"g\n\013newConsumer\022\013\n\003key\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\005\022<\n\006actual\030\003 \001(\0132,.org." +
      "apache.spark.sql.protobuf.protos.Actual\"" +
      "\032\n\013oldProducer\022\013\n\003key\030\001 \001(\tB\017B\rCatalystT" +
      "ypesb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_BooleanMsg_descriptor,
        new java.lang.String[] { "BoolType", });
    internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_IntegerMsg_descriptor,
        new java.lang.String[] { "Int32Type", });
    internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_DoubleMsg_descriptor,
        new java.lang.String[] { "DoubleType", });
    internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_FloatMsg_descriptor,
        new java.lang.String[] { "FloatType", });
    internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_BytesMsg_descriptor,
        new java.lang.String[] { "BytesType", });
    internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_StringMsg_descriptor,
        new java.lang.String[] { "StringType", });
    internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_apache_spark_sql_protobuf_protos_Person_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Person_descriptor,
        new java.lang.String[] { "Name", "Age", });
    internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_apache_spark_sql_protobuf_protos_Bad_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Bad_descriptor,
        new java.lang.String[] { "Col0", "Col1", "Col2", "Col3", "Col4", });
    internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_org_apache_spark_sql_protobuf_protos_Actual_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_Actual_descriptor,
        new java.lang.String[] { "Col0", "Col1", "Col2", "Col3", "Col4", });
    internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_oldConsumer_descriptor,
        new java.lang.String[] { "Key", });
    internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_org_apache_spark_sql_protobuf_protos_newProducer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_newProducer_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_newConsumer_descriptor,
        new java.lang.String[] { "Key", "Value", "Actual", });
    internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_spark_sql_protobuf_protos_oldProducer_descriptor,
        new java.lang.String[] { "Key", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
